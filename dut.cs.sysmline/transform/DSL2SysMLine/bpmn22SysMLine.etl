import "DSL2SysMLine-util.eol";

pre{
	var eObjectSequence = new Sequence;
	var KeyWords = baseKeyWords();
	var i = 0;
	eObjectSequence.init_bpmn2();
	main_bpmn2();
}

post{
	("[ETL] bpmn22SysMLine >> " + SysMLine!Package.all.first().declaredName + ".sysmline").println();
}

operation main_bpmn2(){
	var rootEcore = DSL!EObject.all.first();
	var rootSysMLine = new SysMLine!Namespace;
	var rootPackage = new SysMLine!Package;
	rootPackage.declaredName = "bpmn2_model";
	rootSysMLine.body.add(rootPackage);
	rootPackage.addNamespaceImport("bpmn2");
	rootPackage.addNamespaceImport("bpmdi");
	rootEcore.addNodeTo(rootPackage);
}

operation Sequence init_bpmn2(){
	//bpmn2.Interface -> Instantiation
	var idInterface = 0;
	for (Interface_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!Interface))){
		var Interface_Tuple = Tuple{"key"="Interface_"+(idInterface++).asString(),"value"= Interface_};
		self.add(Interface_Tuple);
	}
	//bpmn2.RootElement -> Instantiation
	var idRootElement = 0;
	for (RootElement_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!RootElement))){
		var RootElement_Tuple = Tuple{"key"="RootElement_"+(idRootElement++).asString(),"value"= RootElement_};
		self.add(RootElement_Tuple);
	}
	//bpmn2.BaseElement -> Instantiation
	var idBaseElement = 0;
	for (BaseElement_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!BaseElement))){
		var BaseElement_Tuple = Tuple{"key"="BaseElement_"+(idBaseElement++).asString(),"value"= BaseElement_};
		self.add(BaseElement_Tuple);
	}
	//bpmn2.ExtensionDefinition -> Instantiation
	var idExtensionDefinition = 0;
	for (ExtensionDefinition_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!ExtensionDefinition))){
		var ExtensionDefinition_Tuple = Tuple{"key"="ExtensionDefinition_"+(idExtensionDefinition++).asString(),"value"= ExtensionDefinition_};
		self.add(ExtensionDefinition_Tuple);
	}
	//bpmn2.ExtensionAttributeDefinition -> Instantiation
	var idExtensionAttributeDefinition = 0;
	for (ExtensionAttributeDefinition_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!ExtensionAttributeDefinition))){
		var ExtensionAttributeDefinition_Tuple = Tuple{"key"="ExtensionAttributeDefinition_"+(idExtensionAttributeDefinition++).asString(),"value"= ExtensionAttributeDefinition_};
		self.add(ExtensionAttributeDefinition_Tuple);
	}
	//bpmn2.ExtensionAttributeValue -> Instantiation
	var idExtensionAttributeValue = 0;
	for (ExtensionAttributeValue_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!ExtensionAttributeValue))){
		var ExtensionAttributeValue_Tuple = Tuple{"key"="ExtensionAttributeValue_"+(idExtensionAttributeValue++).asString(),"value"= ExtensionAttributeValue_};
		self.add(ExtensionAttributeValue_Tuple);
	}
	//bpmn2.Documentation -> Instantiation
	var idDocumentation = 0;
	for (Documentation_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!Documentation))){
		var Documentation_Tuple = Tuple{"key"="Documentation_"+(idDocumentation++).asString(),"value"= Documentation_};
		self.add(Documentation_Tuple);
	}
	//bpmn2.Operation -> Instantiation
	var idOperation = 0;
	for (Operation_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!Operation))){
		var Operation_Tuple = Tuple{"key"="Operation_"+(idOperation++).asString(),"value"= Operation_};
		self.add(Operation_Tuple);
	}
	//bpmn2.Message -> Instantiation
	var idMessage = 0;
	for (Message_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!Message))){
		var Message_Tuple = Tuple{"key"="Message_"+(idMessage++).asString(),"value"= Message_};
		self.add(Message_Tuple);
	}
	//bpmn2.ItemDefinition -> Instantiation
	var idItemDefinition = 0;
	for (ItemDefinition_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!ItemDefinition))){
		var ItemDefinition_Tuple = Tuple{"key"="ItemDefinition_"+(idItemDefinition++).asString(),"value"= ItemDefinition_};
		self.add(ItemDefinition_Tuple);
	}
	//bpmn2.Import -> Instantiation
	var idImport = 0;
	for (Import_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!Import))){
		var Import_Tuple = Tuple{"key"="Import_"+(idImport++).asString(),"value"= Import_};
		self.add(Import_Tuple);
	}
	//bpmn2.Error -> Instantiation
	var idError = 0;
	for (Error_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!Error))){
		var Error_Tuple = Tuple{"key"="Error_"+(idError++).asString(),"value"= Error_};
		self.add(Error_Tuple);
	}
	//bpmn2.EndPoint -> Instantiation
	var idEndPoint = 0;
	for (EndPoint_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!EndPoint))){
		var EndPoint_Tuple = Tuple{"key"="EndPoint_"+(idEndPoint++).asString(),"value"= EndPoint_};
		self.add(EndPoint_Tuple);
	}
	//bpmn2.Auditing -> Instantiation
	var idAuditing = 0;
	for (Auditing_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!Auditing))){
		var Auditing_Tuple = Tuple{"key"="Auditing_"+(idAuditing++).asString(),"value"= Auditing_};
		self.add(Auditing_Tuple);
	}
	//bpmn2.GlobalTask -> Instantiation
	var idGlobalTask = 0;
	for (GlobalTask_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!GlobalTask))){
		var GlobalTask_Tuple = Tuple{"key"="GlobalTask_"+(idGlobalTask++).asString(),"value"= GlobalTask_};
		self.add(GlobalTask_Tuple);
	}
	//bpmn2.CallableElement -> Instantiation
	var idCallableElement = 0;
	for (CallableElement_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!CallableElement))){
		var CallableElement_Tuple = Tuple{"key"="CallableElement_"+(idCallableElement++).asString(),"value"= CallableElement_};
		self.add(CallableElement_Tuple);
	}
	//bpmn2.InputOutputSpecification -> Instantiation
	var idInputOutputSpecification = 0;
	for (InputOutputSpecification_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!InputOutputSpecification))){
		var InputOutputSpecification_Tuple = Tuple{"key"="InputOutputSpecification_"+(idInputOutputSpecification++).asString(),"value"= InputOutputSpecification_};
		self.add(InputOutputSpecification_Tuple);
	}
	//bpmn2.InputSet -> Instantiation
	var idInputSet = 0;
	for (InputSet_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!InputSet))){
		var InputSet_Tuple = Tuple{"key"="InputSet_"+(idInputSet++).asString(),"value"= InputSet_};
		self.add(InputSet_Tuple);
	}
	//bpmn2.DataInput -> Instantiation
	var idDataInput = 0;
	for (DataInput_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!DataInput))){
		var DataInput_Tuple = Tuple{"key"="DataInput_"+(idDataInput++).asString(),"value"= DataInput_};
		self.add(DataInput_Tuple);
	}
	//bpmn2.ItemAwareElement -> Instantiation
	var idItemAwareElement = 0;
	for (ItemAwareElement_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!ItemAwareElement))){
		var ItemAwareElement_Tuple = Tuple{"key"="ItemAwareElement_"+(idItemAwareElement++).asString(),"value"= ItemAwareElement_};
		self.add(ItemAwareElement_Tuple);
	}
	//bpmn2.DataState -> Instantiation
	var idDataState = 0;
	for (DataState_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!DataState))){
		var DataState_Tuple = Tuple{"key"="DataState_"+(idDataState++).asString(),"value"= DataState_};
		self.add(DataState_Tuple);
	}
	//bpmn2.OutputSet -> Instantiation
	var idOutputSet = 0;
	for (OutputSet_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!OutputSet))){
		var OutputSet_Tuple = Tuple{"key"="OutputSet_"+(idOutputSet++).asString(),"value"= OutputSet_};
		self.add(OutputSet_Tuple);
	}
	//bpmn2.DataOutput -> Instantiation
	var idDataOutput = 0;
	for (DataOutput_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!DataOutput))){
		var DataOutput_Tuple = Tuple{"key"="DataOutput_"+(idDataOutput++).asString(),"value"= DataOutput_};
		self.add(DataOutput_Tuple);
	}
	//bpmn2.InputOutputBinding -> Instantiation
	var idInputOutputBinding = 0;
	for (InputOutputBinding_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!InputOutputBinding))){
		var InputOutputBinding_Tuple = Tuple{"key"="InputOutputBinding_"+(idInputOutputBinding++).asString(),"value"= InputOutputBinding_};
		self.add(InputOutputBinding_Tuple);
	}
	//bpmn2.ResourceRole -> Instantiation
	var idResourceRole = 0;
	for (ResourceRole_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!ResourceRole))){
		var ResourceRole_Tuple = Tuple{"key"="ResourceRole_"+(idResourceRole++).asString(),"value"= ResourceRole_};
		self.add(ResourceRole_Tuple);
	}
	//bpmn2.Resource -> Instantiation
	var idResource = 0;
	for (Resource_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!Resource))){
		var Resource_Tuple = Tuple{"key"="Resource_"+(idResource++).asString(),"value"= Resource_};
		self.add(Resource_Tuple);
	}
	//bpmn2.ResourceParameter -> Instantiation
	var idResourceParameter = 0;
	for (ResourceParameter_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!ResourceParameter))){
		var ResourceParameter_Tuple = Tuple{"key"="ResourceParameter_"+(idResourceParameter++).asString(),"value"= ResourceParameter_};
		self.add(ResourceParameter_Tuple);
	}
	//bpmn2.ResourceParameterBinding -> Instantiation
	var idResourceParameterBinding = 0;
	for (ResourceParameterBinding_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!ResourceParameterBinding))){
		var ResourceParameterBinding_Tuple = Tuple{"key"="ResourceParameterBinding_"+(idResourceParameterBinding++).asString(),"value"= ResourceParameterBinding_};
		self.add(ResourceParameterBinding_Tuple);
	}
	//bpmn2.Expression -> Instantiation
	var idExpression = 0;
	for (Expression_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!Expression))){
		var Expression_Tuple = Tuple{"key"="Expression_"+(idExpression++).asString(),"value"= Expression_};
		self.add(Expression_Tuple);
	}
	//bpmn2.ResourceAssignmentExpression -> Instantiation
	var idResourceAssignmentExpression = 0;
	for (ResourceAssignmentExpression_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!ResourceAssignmentExpression))){
		var ResourceAssignmentExpression_Tuple = Tuple{"key"="ResourceAssignmentExpression_"+(idResourceAssignmentExpression++).asString(),"value"= ResourceAssignmentExpression_};
		self.add(ResourceAssignmentExpression_Tuple);
	}
	//bpmn2.Monitoring -> Instantiation
	var idMonitoring = 0;
	for (Monitoring_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!Monitoring))){
		var Monitoring_Tuple = Tuple{"key"="Monitoring_"+(idMonitoring++).asString(),"value"= Monitoring_};
		self.add(Monitoring_Tuple);
	}
	//bpmn2.Performer -> Instantiation
	var idPerformer = 0;
	for (Performer_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!Performer))){
		var Performer_Tuple = Tuple{"key"="Performer_"+(idPerformer++).asString(),"value"= Performer_};
		self.add(Performer_Tuple);
	}
	//bpmn2.Process -> Instantiation
	var idProcess = 0;
	for (Process_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!Process))){
		var Process_Tuple = Tuple{"key"="Process_"+(idProcess++).asString(),"value"= Process_};
		self.add(Process_Tuple);
	}
	//bpmn2.FlowElementsContainer -> Instantiation
	var idFlowElementsContainer = 0;
	for (FlowElementsContainer_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!FlowElementsContainer))){
		var FlowElementsContainer_Tuple = Tuple{"key"="FlowElementsContainer_"+(idFlowElementsContainer++).asString(),"value"= FlowElementsContainer_};
		self.add(FlowElementsContainer_Tuple);
	}
	//bpmn2.FlowElement -> Instantiation
	var idFlowElement = 0;
	for (FlowElement_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!FlowElement))){
		var FlowElement_Tuple = Tuple{"key"="FlowElement_"+(idFlowElement++).asString(),"value"= FlowElement_};
		self.add(FlowElement_Tuple);
	}
	//bpmn2.CategoryValue -> Instantiation
	var idCategoryValue = 0;
	for (CategoryValue_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!CategoryValue))){
		var CategoryValue_Tuple = Tuple{"key"="CategoryValue_"+(idCategoryValue++).asString(),"value"= CategoryValue_};
		self.add(CategoryValue_Tuple);
	}
	//bpmn2.LaneSet -> Instantiation
	var idLaneSet = 0;
	for (LaneSet_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!LaneSet))){
		var LaneSet_Tuple = Tuple{"key"="LaneSet_"+(idLaneSet++).asString(),"value"= LaneSet_};
		self.add(LaneSet_Tuple);
	}
	//bpmn2.Lane -> Instantiation
	var idLane = 0;
	for (Lane_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!Lane))){
		var Lane_Tuple = Tuple{"key"="Lane_"+(idLane++).asString(),"value"= Lane_};
		self.add(Lane_Tuple);
	}
	//bpmn2.FlowNode -> Instantiation
	var idFlowNode = 0;
	for (FlowNode_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!FlowNode))){
		var FlowNode_Tuple = Tuple{"key"="FlowNode_"+(idFlowNode++).asString(),"value"= FlowNode_};
		self.add(FlowNode_Tuple);
	}
	//bpmn2.SequenceFlow -> Instantiation
	var idSequenceFlow = 0;
	for (SequenceFlow_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!SequenceFlow))){
		var SequenceFlow_Tuple = Tuple{"key"="SequenceFlow_"+(idSequenceFlow++).asString(),"value"= SequenceFlow_};
		self.add(SequenceFlow_Tuple);
	}
	//bpmn2.Property -> Instantiation
	var idProperty = 0;
	for (Property_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!Property))){
		var Property_Tuple = Tuple{"key"="Property_"+(idProperty++).asString(),"value"= Property_};
		self.add(Property_Tuple);
	}
	//bpmn2.Collaboration -> Instantiation
	var idCollaboration = 0;
	for (Collaboration_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!Collaboration))){
		var Collaboration_Tuple = Tuple{"key"="Collaboration_"+(idCollaboration++).asString(),"value"= Collaboration_};
		self.add(Collaboration_Tuple);
	}
	//bpmn2.Choreography -> Instantiation
	var idChoreography = 0;
	for (Choreography_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!Choreography))){
		var Choreography_Tuple = Tuple{"key"="Choreography_"+(idChoreography++).asString(),"value"= Choreography_};
		self.add(Choreography_Tuple);
	}
	//bpmn2.Artifact -> Instantiation
	var idArtifact = 0;
	for (Artifact_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!Artifact))){
		var Artifact_Tuple = Tuple{"key"="Artifact_"+(idArtifact++).asString(),"value"= Artifact_};
		self.add(Artifact_Tuple);
	}
	//bpmn2.ParticipantAssociation -> Instantiation
	var idParticipantAssociation = 0;
	for (ParticipantAssociation_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!ParticipantAssociation))){
		var ParticipantAssociation_Tuple = Tuple{"key"="ParticipantAssociation_"+(idParticipantAssociation++).asString(),"value"= ParticipantAssociation_};
		self.add(ParticipantAssociation_Tuple);
	}
	//bpmn2.Participant -> Instantiation
	var idParticipant = 0;
	for (Participant_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!Participant))){
		var Participant_Tuple = Tuple{"key"="Participant_"+(idParticipant++).asString(),"value"= Participant_};
		self.add(Participant_Tuple);
	}
	//bpmn2.InteractionNode -> Instantiation
	var idInteractionNode = 0;
	for (InteractionNode_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!InteractionNode))){
		var InteractionNode_Tuple = Tuple{"key"="InteractionNode_"+(idInteractionNode++).asString(),"value"= InteractionNode_};
		self.add(InteractionNode_Tuple);
	}
	//bpmn2.ConversationLink -> Instantiation
	var idConversationLink = 0;
	for (ConversationLink_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!ConversationLink))){
		var ConversationLink_Tuple = Tuple{"key"="ConversationLink_"+(idConversationLink++).asString(),"value"= ConversationLink_};
		self.add(ConversationLink_Tuple);
	}
	//bpmn2.ParticipantMultiplicity -> Instantiation
	var idParticipantMultiplicity = 0;
	for (ParticipantMultiplicity_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!ParticipantMultiplicity))){
		var ParticipantMultiplicity_Tuple = Tuple{"key"="ParticipantMultiplicity_"+(idParticipantMultiplicity++).asString(),"value"= ParticipantMultiplicity_};
		self.add(ParticipantMultiplicity_Tuple);
	}
	//bpmn2.MessageFlowAssociation -> Instantiation
	var idMessageFlowAssociation = 0;
	for (MessageFlowAssociation_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!MessageFlowAssociation))){
		var MessageFlowAssociation_Tuple = Tuple{"key"="MessageFlowAssociation_"+(idMessageFlowAssociation++).asString(),"value"= MessageFlowAssociation_};
		self.add(MessageFlowAssociation_Tuple);
	}
	//bpmn2.MessageFlow -> Instantiation
	var idMessageFlow = 0;
	for (MessageFlow_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!MessageFlow))){
		var MessageFlow_Tuple = Tuple{"key"="MessageFlow_"+(idMessageFlow++).asString(),"value"= MessageFlow_};
		self.add(MessageFlow_Tuple);
	}
	//bpmn2.ConversationAssociation -> Instantiation
	var idConversationAssociation = 0;
	for (ConversationAssociation_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!ConversationAssociation))){
		var ConversationAssociation_Tuple = Tuple{"key"="ConversationAssociation_"+(idConversationAssociation++).asString(),"value"= ConversationAssociation_};
		self.add(ConversationAssociation_Tuple);
	}
	//bpmn2.ConversationNode -> Instantiation
	var idConversationNode = 0;
	for (ConversationNode_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!ConversationNode))){
		var ConversationNode_Tuple = Tuple{"key"="ConversationNode_"+(idConversationNode++).asString(),"value"= ConversationNode_};
		self.add(ConversationNode_Tuple);
	}
	//bpmn2.CorrelationKey -> Instantiation
	var idCorrelationKey = 0;
	for (CorrelationKey_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!CorrelationKey))){
		var CorrelationKey_Tuple = Tuple{"key"="CorrelationKey_"+(idCorrelationKey++).asString(),"value"= CorrelationKey_};
		self.add(CorrelationKey_Tuple);
	}
	//bpmn2.CorrelationProperty -> Instantiation
	var idCorrelationProperty = 0;
	for (CorrelationProperty_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!CorrelationProperty))){
		var CorrelationProperty_Tuple = Tuple{"key"="CorrelationProperty_"+(idCorrelationProperty++).asString(),"value"= CorrelationProperty_};
		self.add(CorrelationProperty_Tuple);
	}
	//bpmn2.CorrelationPropertyRetrievalExpression -> Instantiation
	var idCorrelationPropertyRetrievalExpression = 0;
	for (CorrelationPropertyRetrievalExpression_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!CorrelationPropertyRetrievalExpression))){
		var CorrelationPropertyRetrievalExpression_Tuple = Tuple{"key"="CorrelationPropertyRetrievalExpression_"+(idCorrelationPropertyRetrievalExpression++).asString(),"value"= CorrelationPropertyRetrievalExpression_};
		self.add(CorrelationPropertyRetrievalExpression_Tuple);
	}
	//bpmn2.FormalExpression -> Instantiation
	var idFormalExpression = 0;
	for (FormalExpression_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!FormalExpression))){
		var FormalExpression_Tuple = Tuple{"key"="FormalExpression_"+(idFormalExpression++).asString(),"value"= FormalExpression_};
		self.add(FormalExpression_Tuple);
	}
	//bpmn2.CorrelationSubscription -> Instantiation
	var idCorrelationSubscription = 0;
	for (CorrelationSubscription_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!CorrelationSubscription))){
		var CorrelationSubscription_Tuple = Tuple{"key"="CorrelationSubscription_"+(idCorrelationSubscription++).asString(),"value"= CorrelationSubscription_};
		self.add(CorrelationSubscription_Tuple);
	}
	//bpmn2.CorrelationPropertyBinding -> Instantiation
	var idCorrelationPropertyBinding = 0;
	for (CorrelationPropertyBinding_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!CorrelationPropertyBinding))){
		var CorrelationPropertyBinding_Tuple = Tuple{"key"="CorrelationPropertyBinding_"+(idCorrelationPropertyBinding++).asString(),"value"= CorrelationPropertyBinding_};
		self.add(CorrelationPropertyBinding_Tuple);
	}
	//bpmn2.GlobalManualTask -> Instantiation
	var idGlobalManualTask = 0;
	for (GlobalManualTask_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!GlobalManualTask))){
		var GlobalManualTask_Tuple = Tuple{"key"="GlobalManualTask_"+(idGlobalManualTask++).asString(),"value"= GlobalManualTask_};
		self.add(GlobalManualTask_Tuple);
	}
	//bpmn2.ManualTask -> Instantiation
	var idManualTask = 0;
	for (ManualTask_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!ManualTask))){
		var ManualTask_Tuple = Tuple{"key"="ManualTask_"+(idManualTask++).asString(),"value"= ManualTask_};
		self.add(ManualTask_Tuple);
	}
	//bpmn2.Task -> Instantiation
	var idTask = 0;
	for (Task_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!Task))){
		var Task_Tuple = Tuple{"key"="Task_"+(idTask++).asString(),"value"= Task_};
		self.add(Task_Tuple);
	}
	//bpmn2.Activity -> Instantiation
	var idActivity = 0;
	for (Activity_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!Activity))){
		var Activity_Tuple = Tuple{"key"="Activity_"+(idActivity++).asString(),"value"= Activity_};
		self.add(Activity_Tuple);
	}
	//bpmn2.LoopCharacteristics -> Instantiation
	var idLoopCharacteristics = 0;
	for (LoopCharacteristics_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!LoopCharacteristics))){
		var LoopCharacteristics_Tuple = Tuple{"key"="LoopCharacteristics_"+(idLoopCharacteristics++).asString(),"value"= LoopCharacteristics_};
		self.add(LoopCharacteristics_Tuple);
	}
	//bpmn2.BoundaryEvent -> Instantiation
	var idBoundaryEvent = 0;
	for (BoundaryEvent_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!BoundaryEvent))){
		var BoundaryEvent_Tuple = Tuple{"key"="BoundaryEvent_"+(idBoundaryEvent++).asString(),"value"= BoundaryEvent_};
		self.add(BoundaryEvent_Tuple);
	}
	//bpmn2.CatchEvent -> Instantiation
	var idCatchEvent = 0;
	for (CatchEvent_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!CatchEvent))){
		var CatchEvent_Tuple = Tuple{"key"="CatchEvent_"+(idCatchEvent++).asString(),"value"= CatchEvent_};
		self.add(CatchEvent_Tuple);
	}
	//bpmn2.Event -> Instantiation
	var idEvent = 0;
	for (Event_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!Event))){
		var Event_Tuple = Tuple{"key"="Event_"+(idEvent++).asString(),"value"= Event_};
		self.add(Event_Tuple);
	}
	//bpmn2.EventDefinition -> Instantiation
	var idEventDefinition = 0;
	for (EventDefinition_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!EventDefinition))){
		var EventDefinition_Tuple = Tuple{"key"="EventDefinition_"+(idEventDefinition++).asString(),"value"= EventDefinition_};
		self.add(EventDefinition_Tuple);
	}
	//bpmn2.DataOutputAssociation -> Instantiation
	var idDataOutputAssociation = 0;
	for (DataOutputAssociation_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!DataOutputAssociation))){
		var DataOutputAssociation_Tuple = Tuple{"key"="DataOutputAssociation_"+(idDataOutputAssociation++).asString(),"value"= DataOutputAssociation_};
		self.add(DataOutputAssociation_Tuple);
	}
	//bpmn2.DataAssociation -> Instantiation
	var idDataAssociation = 0;
	for (DataAssociation_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!DataAssociation))){
		var DataAssociation_Tuple = Tuple{"key"="DataAssociation_"+(idDataAssociation++).asString(),"value"= DataAssociation_};
		self.add(DataAssociation_Tuple);
	}
	//bpmn2.Assignment -> Instantiation
	var idAssignment = 0;
	for (Assignment_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!Assignment))){
		var Assignment_Tuple = Tuple{"key"="Assignment_"+(idAssignment++).asString(),"value"= Assignment_};
		self.add(Assignment_Tuple);
	}
	//bpmn2.DataInputAssociation -> Instantiation
	var idDataInputAssociation = 0;
	for (DataInputAssociation_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!DataInputAssociation))){
		var DataInputAssociation_Tuple = Tuple{"key"="DataInputAssociation_"+(idDataInputAssociation++).asString(),"value"= DataInputAssociation_};
		self.add(DataInputAssociation_Tuple);
	}
	//bpmn2.UserTask -> Instantiation
	var idUserTask = 0;
	for (UserTask_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!UserTask))){
		var UserTask_Tuple = Tuple{"key"="UserTask_"+(idUserTask++).asString(),"value"= UserTask_};
		self.add(UserTask_Tuple);
	}
	//bpmn2.Rendering -> Instantiation
	var idRendering = 0;
	for (Rendering_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!Rendering))){
		var Rendering_Tuple = Tuple{"key"="Rendering_"+(idRendering++).asString(),"value"= Rendering_};
		self.add(Rendering_Tuple);
	}
	//bpmn2.HumanPerformer -> Instantiation
	var idHumanPerformer = 0;
	for (HumanPerformer_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!HumanPerformer))){
		var HumanPerformer_Tuple = Tuple{"key"="HumanPerformer_"+(idHumanPerformer++).asString(),"value"= HumanPerformer_};
		self.add(HumanPerformer_Tuple);
	}
	//bpmn2.PotentialOwner -> Instantiation
	var idPotentialOwner = 0;
	for (PotentialOwner_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!PotentialOwner))){
		var PotentialOwner_Tuple = Tuple{"key"="PotentialOwner_"+(idPotentialOwner++).asString(),"value"= PotentialOwner_};
		self.add(PotentialOwner_Tuple);
	}
	//bpmn2.GlobalUserTask -> Instantiation
	var idGlobalUserTask = 0;
	for (GlobalUserTask_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!GlobalUserTask))){
		var GlobalUserTask_Tuple = Tuple{"key"="GlobalUserTask_"+(idGlobalUserTask++).asString(),"value"= GlobalUserTask_};
		self.add(GlobalUserTask_Tuple);
	}
	//bpmn2.Gateway -> Instantiation
	var idGateway = 0;
	for (Gateway_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!Gateway))){
		var Gateway_Tuple = Tuple{"key"="Gateway_"+(idGateway++).asString(),"value"= Gateway_};
		self.add(Gateway_Tuple);
	}
	//bpmn2.EventBasedGateway -> Instantiation
	var idEventBasedGateway = 0;
	for (EventBasedGateway_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!EventBasedGateway))){
		var EventBasedGateway_Tuple = Tuple{"key"="EventBasedGateway_"+(idEventBasedGateway++).asString(),"value"= EventBasedGateway_};
		self.add(EventBasedGateway_Tuple);
	}
	//bpmn2.ComplexGateway -> Instantiation
	var idComplexGateway = 0;
	for (ComplexGateway_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!ComplexGateway))){
		var ComplexGateway_Tuple = Tuple{"key"="ComplexGateway_"+(idComplexGateway++).asString(),"value"= ComplexGateway_};
		self.add(ComplexGateway_Tuple);
	}
	//bpmn2.ExclusiveGateway -> Instantiation
	var idExclusiveGateway = 0;
	for (ExclusiveGateway_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!ExclusiveGateway))){
		var ExclusiveGateway_Tuple = Tuple{"key"="ExclusiveGateway_"+(idExclusiveGateway++).asString(),"value"= ExclusiveGateway_};
		self.add(ExclusiveGateway_Tuple);
	}
	//bpmn2.InclusiveGateway -> Instantiation
	var idInclusiveGateway = 0;
	for (InclusiveGateway_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!InclusiveGateway))){
		var InclusiveGateway_Tuple = Tuple{"key"="InclusiveGateway_"+(idInclusiveGateway++).asString(),"value"= InclusiveGateway_};
		self.add(InclusiveGateway_Tuple);
	}
	//bpmn2.ParallelGateway -> Instantiation
	var idParallelGateway = 0;
	for (ParallelGateway_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!ParallelGateway))){
		var ParallelGateway_Tuple = Tuple{"key"="ParallelGateway_"+(idParallelGateway++).asString(),"value"= ParallelGateway_};
		self.add(ParallelGateway_Tuple);
	}
	//bpmn2.Relationship -> Instantiation
	var idRelationship = 0;
	for (Relationship_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!Relationship))){
		var Relationship_Tuple = Tuple{"key"="Relationship_"+(idRelationship++).asString(),"value"= Relationship_};
		self.add(Relationship_Tuple);
	}
	//bpmn2.Extension -> Instantiation
	var idExtension = 0;
	for (Extension_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!Extension))){
		var Extension_Tuple = Tuple{"key"="Extension_"+(idExtension++).asString(),"value"= Extension_};
		self.add(Extension_Tuple);
	}
	//bpmn2.IntermediateCatchEvent -> Instantiation
	var idIntermediateCatchEvent = 0;
	for (IntermediateCatchEvent_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!IntermediateCatchEvent))){
		var IntermediateCatchEvent_Tuple = Tuple{"key"="IntermediateCatchEvent_"+(idIntermediateCatchEvent++).asString(),"value"= IntermediateCatchEvent_};
		self.add(IntermediateCatchEvent_Tuple);
	}
	//bpmn2.IntermediateThrowEvent -> Instantiation
	var idIntermediateThrowEvent = 0;
	for (IntermediateThrowEvent_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!IntermediateThrowEvent))){
		var IntermediateThrowEvent_Tuple = Tuple{"key"="IntermediateThrowEvent_"+(idIntermediateThrowEvent++).asString(),"value"= IntermediateThrowEvent_};
		self.add(IntermediateThrowEvent_Tuple);
	}
	//bpmn2.ThrowEvent -> Instantiation
	var idThrowEvent = 0;
	for (ThrowEvent_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!ThrowEvent))){
		var ThrowEvent_Tuple = Tuple{"key"="ThrowEvent_"+(idThrowEvent++).asString(),"value"= ThrowEvent_};
		self.add(ThrowEvent_Tuple);
	}
	//bpmn2.EndEvent -> Instantiation
	var idEndEvent = 0;
	for (EndEvent_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!EndEvent))){
		var EndEvent_Tuple = Tuple{"key"="EndEvent_"+(idEndEvent++).asString(),"value"= EndEvent_};
		self.add(EndEvent_Tuple);
	}
	//bpmn2.StartEvent -> Instantiation
	var idStartEvent = 0;
	for (StartEvent_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!StartEvent))){
		var StartEvent_Tuple = Tuple{"key"="StartEvent_"+(idStartEvent++).asString(),"value"= StartEvent_};
		self.add(StartEvent_Tuple);
	}
	//bpmn2.CancelEventDefinition -> Instantiation
	var idCancelEventDefinition = 0;
	for (CancelEventDefinition_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!CancelEventDefinition))){
		var CancelEventDefinition_Tuple = Tuple{"key"="CancelEventDefinition_"+(idCancelEventDefinition++).asString(),"value"= CancelEventDefinition_};
		self.add(CancelEventDefinition_Tuple);
	}
	//bpmn2.ErrorEventDefinition -> Instantiation
	var idErrorEventDefinition = 0;
	for (ErrorEventDefinition_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!ErrorEventDefinition))){
		var ErrorEventDefinition_Tuple = Tuple{"key"="ErrorEventDefinition_"+(idErrorEventDefinition++).asString(),"value"= ErrorEventDefinition_};
		self.add(ErrorEventDefinition_Tuple);
	}
	//bpmn2.TerminateEventDefinition -> Instantiation
	var idTerminateEventDefinition = 0;
	for (TerminateEventDefinition_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!TerminateEventDefinition))){
		var TerminateEventDefinition_Tuple = Tuple{"key"="TerminateEventDefinition_"+(idTerminateEventDefinition++).asString(),"value"= TerminateEventDefinition_};
		self.add(TerminateEventDefinition_Tuple);
	}
	//bpmn2.EscalationEventDefinition -> Instantiation
	var idEscalationEventDefinition = 0;
	for (EscalationEventDefinition_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!EscalationEventDefinition))){
		var EscalationEventDefinition_Tuple = Tuple{"key"="EscalationEventDefinition_"+(idEscalationEventDefinition++).asString(),"value"= EscalationEventDefinition_};
		self.add(EscalationEventDefinition_Tuple);
	}
	//bpmn2.Escalation -> Instantiation
	var idEscalation = 0;
	for (Escalation_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!Escalation))){
		var Escalation_Tuple = Tuple{"key"="Escalation_"+(idEscalation++).asString(),"value"= Escalation_};
		self.add(Escalation_Tuple);
	}
	//bpmn2.CompensateEventDefinition -> Instantiation
	var idCompensateEventDefinition = 0;
	for (CompensateEventDefinition_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!CompensateEventDefinition))){
		var CompensateEventDefinition_Tuple = Tuple{"key"="CompensateEventDefinition_"+(idCompensateEventDefinition++).asString(),"value"= CompensateEventDefinition_};
		self.add(CompensateEventDefinition_Tuple);
	}
	//bpmn2.TimerEventDefinition -> Instantiation
	var idTimerEventDefinition = 0;
	for (TimerEventDefinition_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!TimerEventDefinition))){
		var TimerEventDefinition_Tuple = Tuple{"key"="TimerEventDefinition_"+(idTimerEventDefinition++).asString(),"value"= TimerEventDefinition_};
		self.add(TimerEventDefinition_Tuple);
	}
	//bpmn2.LinkEventDefinition -> Instantiation
	var idLinkEventDefinition = 0;
	for (LinkEventDefinition_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!LinkEventDefinition))){
		var LinkEventDefinition_Tuple = Tuple{"key"="LinkEventDefinition_"+(idLinkEventDefinition++).asString(),"value"= LinkEventDefinition_};
		self.add(LinkEventDefinition_Tuple);
	}
	//bpmn2.MessageEventDefinition -> Instantiation
	var idMessageEventDefinition = 0;
	for (MessageEventDefinition_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!MessageEventDefinition))){
		var MessageEventDefinition_Tuple = Tuple{"key"="MessageEventDefinition_"+(idMessageEventDefinition++).asString(),"value"= MessageEventDefinition_};
		self.add(MessageEventDefinition_Tuple);
	}
	//bpmn2.ConditionalEventDefinition -> Instantiation
	var idConditionalEventDefinition = 0;
	for (ConditionalEventDefinition_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!ConditionalEventDefinition))){
		var ConditionalEventDefinition_Tuple = Tuple{"key"="ConditionalEventDefinition_"+(idConditionalEventDefinition++).asString(),"value"= ConditionalEventDefinition_};
		self.add(ConditionalEventDefinition_Tuple);
	}
	//bpmn2.SignalEventDefinition -> Instantiation
	var idSignalEventDefinition = 0;
	for (SignalEventDefinition_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!SignalEventDefinition))){
		var SignalEventDefinition_Tuple = Tuple{"key"="SignalEventDefinition_"+(idSignalEventDefinition++).asString(),"value"= SignalEventDefinition_};
		self.add(SignalEventDefinition_Tuple);
	}
	//bpmn2.Signal -> Instantiation
	var idSignal = 0;
	for (Signal_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!Signal))){
		var Signal_Tuple = Tuple{"key"="Signal_"+(idSignal++).asString(),"value"= Signal_};
		self.add(Signal_Tuple);
	}
	//bpmn2.ImplicitThrowEvent -> Instantiation
	var idImplicitThrowEvent = 0;
	for (ImplicitThrowEvent_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!ImplicitThrowEvent))){
		var ImplicitThrowEvent_Tuple = Tuple{"key"="ImplicitThrowEvent_"+(idImplicitThrowEvent++).asString(),"value"= ImplicitThrowEvent_};
		self.add(ImplicitThrowEvent_Tuple);
	}
	//bpmn2.DataObject -> Instantiation
	var idDataObject = 0;
	for (DataObject_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!DataObject))){
		var DataObject_Tuple = Tuple{"key"="DataObject_"+(idDataObject++).asString(),"value"= DataObject_};
		self.add(DataObject_Tuple);
	}
	//bpmn2.DataStore -> Instantiation
	var idDataStore = 0;
	for (DataStore_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!DataStore))){
		var DataStore_Tuple = Tuple{"key"="DataStore_"+(idDataStore++).asString(),"value"= DataStore_};
		self.add(DataStore_Tuple);
	}
	//bpmn2.DataStoreReference -> Instantiation
	var idDataStoreReference = 0;
	for (DataStoreReference_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!DataStoreReference))){
		var DataStoreReference_Tuple = Tuple{"key"="DataStoreReference_"+(idDataStoreReference++).asString(),"value"= DataStoreReference_};
		self.add(DataStoreReference_Tuple);
	}
	//bpmn2.DataObjectReference -> Instantiation
	var idDataObjectReference = 0;
	for (DataObjectReference_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!DataObjectReference))){
		var DataObjectReference_Tuple = Tuple{"key"="DataObjectReference_"+(idDataObjectReference++).asString(),"value"= DataObjectReference_};
		self.add(DataObjectReference_Tuple);
	}
	//bpmn2.CallConversation -> Instantiation
	var idCallConversation = 0;
	for (CallConversation_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!CallConversation))){
		var CallConversation_Tuple = Tuple{"key"="CallConversation_"+(idCallConversation++).asString(),"value"= CallConversation_};
		self.add(CallConversation_Tuple);
	}
	//bpmn2.Conversation -> Instantiation
	var idConversation = 0;
	for (Conversation_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!Conversation))){
		var Conversation_Tuple = Tuple{"key"="Conversation_"+(idConversation++).asString(),"value"= Conversation_};
		self.add(Conversation_Tuple);
	}
	//bpmn2.SubConversation -> Instantiation
	var idSubConversation = 0;
	for (SubConversation_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!SubConversation))){
		var SubConversation_Tuple = Tuple{"key"="SubConversation_"+(idSubConversation++).asString(),"value"= SubConversation_};
		self.add(SubConversation_Tuple);
	}
	//bpmn2.GlobalConversation -> Instantiation
	var idGlobalConversation = 0;
	for (GlobalConversation_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!GlobalConversation))){
		var GlobalConversation_Tuple = Tuple{"key"="GlobalConversation_"+(idGlobalConversation++).asString(),"value"= GlobalConversation_};
		self.add(GlobalConversation_Tuple);
	}
	//bpmn2.PartnerEntity -> Instantiation
	var idPartnerEntity = 0;
	for (PartnerEntity_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!PartnerEntity))){
		var PartnerEntity_Tuple = Tuple{"key"="PartnerEntity_"+(idPartnerEntity++).asString(),"value"= PartnerEntity_};
		self.add(PartnerEntity_Tuple);
	}
	//bpmn2.PartnerRole -> Instantiation
	var idPartnerRole = 0;
	for (PartnerRole_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!PartnerRole))){
		var PartnerRole_Tuple = Tuple{"key"="PartnerRole_"+(idPartnerRole++).asString(),"value"= PartnerRole_};
		self.add(PartnerRole_Tuple);
	}
	//bpmn2.ChoreographyActivity -> Instantiation
	var idChoreographyActivity = 0;
	for (ChoreographyActivity_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!ChoreographyActivity))){
		var ChoreographyActivity_Tuple = Tuple{"key"="ChoreographyActivity_"+(idChoreographyActivity++).asString(),"value"= ChoreographyActivity_};
		self.add(ChoreographyActivity_Tuple);
	}
	//bpmn2.CallChoreography -> Instantiation
	var idCallChoreography = 0;
	for (CallChoreography_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!CallChoreography))){
		var CallChoreography_Tuple = Tuple{"key"="CallChoreography_"+(idCallChoreography++).asString(),"value"= CallChoreography_};
		self.add(CallChoreography_Tuple);
	}
	//bpmn2.SubChoreography -> Instantiation
	var idSubChoreography = 0;
	for (SubChoreography_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!SubChoreography))){
		var SubChoreography_Tuple = Tuple{"key"="SubChoreography_"+(idSubChoreography++).asString(),"value"= SubChoreography_};
		self.add(SubChoreography_Tuple);
	}
	//bpmn2.ChoreographyTask -> Instantiation
	var idChoreographyTask = 0;
	for (ChoreographyTask_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!ChoreographyTask))){
		var ChoreographyTask_Tuple = Tuple{"key"="ChoreographyTask_"+(idChoreographyTask++).asString(),"value"= ChoreographyTask_};
		self.add(ChoreographyTask_Tuple);
	}
	//bpmn2.GlobalChoreographyTask -> Instantiation
	var idGlobalChoreographyTask = 0;
	for (GlobalChoreographyTask_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!GlobalChoreographyTask))){
		var GlobalChoreographyTask_Tuple = Tuple{"key"="GlobalChoreographyTask_"+(idGlobalChoreographyTask++).asString(),"value"= GlobalChoreographyTask_};
		self.add(GlobalChoreographyTask_Tuple);
	}
	//bpmn2.TextAnnotation -> Instantiation
	var idTextAnnotation = 0;
	for (TextAnnotation_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!TextAnnotation))){
		var TextAnnotation_Tuple = Tuple{"key"="TextAnnotation_"+(idTextAnnotation++).asString(),"value"= TextAnnotation_};
		self.add(TextAnnotation_Tuple);
	}
	//bpmn2.Group -> Instantiation
	var idGroup = 0;
	for (Group_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!Group))){
		var Group_Tuple = Tuple{"key"="Group_"+(idGroup++).asString(),"value"= Group_};
		self.add(Group_Tuple);
	}
	//bpmn2.Association -> Instantiation
	var idAssociation = 0;
	for (Association_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!Association))){
		var Association_Tuple = Tuple{"key"="Association_"+(idAssociation++).asString(),"value"= Association_};
		self.add(Association_Tuple);
	}
	//bpmn2.Category -> Instantiation
	var idCategory = 0;
	for (Category_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!Category))){
		var Category_Tuple = Tuple{"key"="Category_"+(idCategory++).asString(),"value"= Category_};
		self.add(Category_Tuple);
	}
	//bpmn2.ServiceTask -> Instantiation
	var idServiceTask = 0;
	for (ServiceTask_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!ServiceTask))){
		var ServiceTask_Tuple = Tuple{"key"="ServiceTask_"+(idServiceTask++).asString(),"value"= ServiceTask_};
		self.add(ServiceTask_Tuple);
	}
	//bpmn2.SubProcess -> Instantiation
	var idSubProcess = 0;
	for (SubProcess_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!SubProcess))){
		var SubProcess_Tuple = Tuple{"key"="SubProcess_"+(idSubProcess++).asString(),"value"= SubProcess_};
		self.add(SubProcess_Tuple);
	}
	//bpmn2.MultiInstanceLoopCharacteristics -> Instantiation
	var idMultiInstanceLoopCharacteristics = 0;
	for (MultiInstanceLoopCharacteristics_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!MultiInstanceLoopCharacteristics))){
		var MultiInstanceLoopCharacteristics_Tuple = Tuple{"key"="MultiInstanceLoopCharacteristics_"+(idMultiInstanceLoopCharacteristics++).asString(),"value"= MultiInstanceLoopCharacteristics_};
		self.add(MultiInstanceLoopCharacteristics_Tuple);
	}
	//bpmn2.ComplexBehaviorDefinition -> Instantiation
	var idComplexBehaviorDefinition = 0;
	for (ComplexBehaviorDefinition_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!ComplexBehaviorDefinition))){
		var ComplexBehaviorDefinition_Tuple = Tuple{"key"="ComplexBehaviorDefinition_"+(idComplexBehaviorDefinition++).asString(),"value"= ComplexBehaviorDefinition_};
		self.add(ComplexBehaviorDefinition_Tuple);
	}
	//bpmn2.StandardLoopCharacteristics -> Instantiation
	var idStandardLoopCharacteristics = 0;
	for (StandardLoopCharacteristics_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!StandardLoopCharacteristics))){
		var StandardLoopCharacteristics_Tuple = Tuple{"key"="StandardLoopCharacteristics_"+(idStandardLoopCharacteristics++).asString(),"value"= StandardLoopCharacteristics_};
		self.add(StandardLoopCharacteristics_Tuple);
	}
	//bpmn2.CallActivity -> Instantiation
	var idCallActivity = 0;
	for (CallActivity_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!CallActivity))){
		var CallActivity_Tuple = Tuple{"key"="CallActivity_"+(idCallActivity++).asString(),"value"= CallActivity_};
		self.add(CallActivity_Tuple);
	}
	//bpmn2.SendTask -> Instantiation
	var idSendTask = 0;
	for (SendTask_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!SendTask))){
		var SendTask_Tuple = Tuple{"key"="SendTask_"+(idSendTask++).asString(),"value"= SendTask_};
		self.add(SendTask_Tuple);
	}
	//bpmn2.ReceiveTask -> Instantiation
	var idReceiveTask = 0;
	for (ReceiveTask_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!ReceiveTask))){
		var ReceiveTask_Tuple = Tuple{"key"="ReceiveTask_"+(idReceiveTask++).asString(),"value"= ReceiveTask_};
		self.add(ReceiveTask_Tuple);
	}
	//bpmn2.ScriptTask -> Instantiation
	var idScriptTask = 0;
	for (ScriptTask_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!ScriptTask))){
		var ScriptTask_Tuple = Tuple{"key"="ScriptTask_"+(idScriptTask++).asString(),"value"= ScriptTask_};
		self.add(ScriptTask_Tuple);
	}
	//bpmn2.BusinessRuleTask -> Instantiation
	var idBusinessRuleTask = 0;
	for (BusinessRuleTask_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!BusinessRuleTask))){
		var BusinessRuleTask_Tuple = Tuple{"key"="BusinessRuleTask_"+(idBusinessRuleTask++).asString(),"value"= BusinessRuleTask_};
		self.add(BusinessRuleTask_Tuple);
	}
	//bpmn2.AdHocSubProcess -> Instantiation
	var idAdHocSubProcess = 0;
	for (AdHocSubProcess_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!AdHocSubProcess))){
		var AdHocSubProcess_Tuple = Tuple{"key"="AdHocSubProcess_"+(idAdHocSubProcess++).asString(),"value"= AdHocSubProcess_};
		self.add(AdHocSubProcess_Tuple);
	}
	//bpmn2.Transaction -> Instantiation
	var idTransaction = 0;
	for (Transaction_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!Transaction))){
		var Transaction_Tuple = Tuple{"key"="Transaction_"+(idTransaction++).asString(),"value"= Transaction_};
		self.add(Transaction_Tuple);
	}
	//bpmn2.GlobalScriptTask -> Instantiation
	var idGlobalScriptTask = 0;
	for (GlobalScriptTask_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!GlobalScriptTask))){
		var GlobalScriptTask_Tuple = Tuple{"key"="GlobalScriptTask_"+(idGlobalScriptTask++).asString(),"value"= GlobalScriptTask_};
		self.add(GlobalScriptTask_Tuple);
	}
	//bpmn2.GlobalBusinessRuleTask -> Instantiation
	var idGlobalBusinessRuleTask = 0;
	for (GlobalBusinessRuleTask_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!GlobalBusinessRuleTask))){
		var GlobalBusinessRuleTask_Tuple = Tuple{"key"="GlobalBusinessRuleTask_"+(idGlobalBusinessRuleTask++).asString(),"value"= GlobalBusinessRuleTask_};
		self.add(GlobalBusinessRuleTask_Tuple);
	}
	//bpmn2.Definitions -> Instantiation
	var idDefinitions = 0;
	for (Definitions_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!Definitions))){
		var Definitions_Tuple = Tuple{"key"="Definitions_"+(idDefinitions++).asString(),"value"= Definitions_};
		self.add(Definitions_Tuple);
	}
	//bpmdi.BPMNPlane -> Instantiation
	var idBPMNPlane = 0;
	for (BPMNPlane_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!BPMNPlane))){
		var BPMNPlane_Tuple = Tuple{"key"="BPMNPlane_"+(idBPMNPlane++).asString(),"value"= BPMNPlane_};
		self.add(BPMNPlane_Tuple);
	}
	//bpmdi.BPMNShape -> Instantiation
	var idBPMNShape = 0;
	for (BPMNShape_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!BPMNShape))){
		var BPMNShape_Tuple = Tuple{"key"="BPMNShape_"+(idBPMNShape++).asString(),"value"= BPMNShape_};
		self.add(BPMNShape_Tuple);
	}
	//bpmdi.BPMNLabel -> Instantiation
	var idBPMNLabel = 0;
	for (BPMNLabel_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!BPMNLabel))){
		var BPMNLabel_Tuple = Tuple{"key"="BPMNLabel_"+(idBPMNLabel++).asString(),"value"= BPMNLabel_};
		self.add(BPMNLabel_Tuple);
	}
	//bpmdi.BPMNLabelStyle -> Instantiation
	var idBPMNLabelStyle = 0;
	for (BPMNLabelStyle_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!BPMNLabelStyle))){
		var BPMNLabelStyle_Tuple = Tuple{"key"="BPMNLabelStyle_"+(idBPMNLabelStyle++).asString(),"value"= BPMNLabelStyle_};
		self.add(BPMNLabelStyle_Tuple);
	}
	//bpmdi.BPMNEdge -> Instantiation
	var idBPMNEdge = 0;
	for (BPMNEdge_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!BPMNEdge))){
		var BPMNEdge_Tuple = Tuple{"key"="BPMNEdge_"+(idBPMNEdge++).asString(),"value"= BPMNEdge_};
		self.add(BPMNEdge_Tuple);
	}
	//bpmdi.BPMNDiagram -> Instantiation
	var idBPMNDiagram = 0;
	for (BPMNDiagram_ in DSL!EObject.all.select(s|s.isTypeOf(DSL!BPMNDiagram))){
		var BPMNDiagram_Tuple = Tuple{"key"="BPMNDiagram_"+(idBPMNDiagram++).asString(),"value"= BPMNDiagram_};
		self.add(BPMNDiagram_Tuple);
	}
}

@abstract
rule Base
	transform s : DSL!EObject
	to t : SysMLine!PartUsage{
	t.declaredName = s.getDeclaredName();
	t.featureNote.add(":");
	t.featureSpecialization.add(s.getfeatureSpecialization());
	if (s.eContainingFeature != null and s.eContainingFeature.name != null){
		t.featureNote.add(":>");
		t.featureSpecialization.add(s.eContainingFeature().name);
	}
}

// bpmn2.ecore
@lazy
rule Interface
	transform s : DSL!Interface //bpmn2.Interface
	to t : SysMLine!PartUsage
	extends Base{
	//Interface.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//Interface.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//Interface.name -> EAttribute : name
	if (s.name.getEAttribute() != null) t.addNewAttribute("name".clearKeyWord(), s.name.getEAttribute());
	//Interface.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//Interface.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//Interface.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//Interface.operations -> EReference : operations
	if (s.operations.getEReference() != null) t.addNewReference("operations".clearKeyWord(), s.operations.getEReference());
	//Interface.implementationRef -> EReference : implementationRef
	if (s.implementationRef.getEReference() != null) t.addNewReference("implementationRef".clearKeyWord(), s.implementationRef.getEReference());
}

@lazy
rule RootElement
	transform s : DSL!RootElement //bpmn2.RootElement
	to t : SysMLine!PartUsage
	extends Base{
	//RootElement.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//RootElement.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//RootElement.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//RootElement.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//RootElement.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
}

@lazy
rule BaseElement
	transform s : DSL!BaseElement //bpmn2.BaseElement
	to t : SysMLine!PartUsage
	extends Base{
	//BaseElement.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//BaseElement.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//BaseElement.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//BaseElement.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//BaseElement.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
}

@lazy
rule ExtensionDefinition
	transform s : DSL!ExtensionDefinition //bpmn2.ExtensionDefinition
	to t : SysMLine!PartUsage
	extends Base{
	//ExtensionDefinition.name -> EAttribute : name
	if (s.name.getEAttribute() != null) t.addNewAttribute("name".clearKeyWord(), s.name.getEAttribute());
	//ExtensionDefinition.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//ExtensionDefinition.extensionAttributeDefinitions -> EReference : extensionAttributeDefinitions
	if (s.extensionAttributeDefinitions.getEReference() != null) t.addNewReference("extensionAttributeDefinitions".clearKeyWord(), s.extensionAttributeDefinitions.getEReference());
}

@lazy
rule ExtensionAttributeDefinition
	transform s : DSL!ExtensionAttributeDefinition //bpmn2.ExtensionAttributeDefinition
	to t : SysMLine!PartUsage
	extends Base{
	//ExtensionAttributeDefinition.name -> EAttribute : name
	if (s.name.getEAttribute() != null) t.addNewAttribute("name".clearKeyWord(), s.name.getEAttribute());
	//ExtensionAttributeDefinition.type -> EAttribute : type
	if (s.type.getEAttribute() != null) t.addNewAttribute("type".clearKeyWord(), s.type.getEAttribute());
	//ExtensionAttributeDefinition.isReference -> EAttribute : isReference
	if (s.isReference.getEAttribute() != null) t.addNewAttribute("isReference".clearKeyWord(), s.isReference.getEAttribute());
	//ExtensionAttributeDefinition.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//ExtensionAttributeDefinition.extensionDefinition -> EReference : extensionDefinition
	if (s.extensionDefinition.getEReference() != null) t.addNewReference("extensionDefinition".clearKeyWord(), s.extensionDefinition.getEReference());
}

@lazy
rule ExtensionAttributeValue
	transform s : DSL!ExtensionAttributeValue //bpmn2.ExtensionAttributeValue
	to t : SysMLine!PartUsage
	extends Base{
	//ExtensionAttributeValue.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//ExtensionAttributeValue.valueRef -> EReference : valueRef
	if (s.valueRef.getEReference() != null) t.addNewReference("valueRef".clearKeyWord(), s.valueRef.getEReference());
	//ExtensionAttributeValue.value -> EReference : value
	if (s.value.getEReference() != null) t.addNewReference("value".clearKeyWord(), s.value.getEReference());
	//ExtensionAttributeValue.extensionAttributeDefinition -> EReference : extensionAttributeDefinition
	if (s.extensionAttributeDefinition.getEReference() != null) t.addNewReference("extensionAttributeDefinition".clearKeyWord(), s.extensionAttributeDefinition.getEReference());
}

@lazy
rule Documentation
	transform s : DSL!Documentation //bpmn2.Documentation
	to t : SysMLine!PartUsage
	extends Base{
	//Documentation.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//Documentation.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//Documentation.text -> EAttribute : text
	if (s.text.getEAttribute() != null) t.addNewAttribute("text".clearKeyWord(), s.text.getEAttribute());
	//Documentation.textFormat -> EAttribute : textFormat
	if (s.textFormat.getEAttribute() != null) t.addNewAttribute("textFormat".clearKeyWord(), s.textFormat.getEAttribute());
	//Documentation.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//Documentation.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//Documentation.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
}

@lazy
rule Operation
	transform s : DSL!Operation //bpmn2.Operation
	to t : SysMLine!PartUsage
	extends Base{
	//Operation.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//Operation.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//Operation.name -> EAttribute : name
	if (s.name.getEAttribute() != null) t.addNewAttribute("name".clearKeyWord(), s.name.getEAttribute());
	//Operation.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//Operation.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//Operation.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//Operation.inMessageRef -> EReference : inMessageRef
	if (s.inMessageRef.getEReference() != null) t.addNewReference("inMessageRef".clearKeyWord(), s.inMessageRef.getEReference());
	//Operation.outMessageRef -> EReference : outMessageRef
	if (s.outMessageRef.getEReference() != null) t.addNewReference("outMessageRef".clearKeyWord(), s.outMessageRef.getEReference());
	//Operation.errorRefs -> EReference : errorRefs
	if (s.errorRefs.getEReference() != null) t.addNewReference("errorRefs".clearKeyWord(), s.errorRefs.getEReference());
	//Operation.implementationRef -> EReference : implementationRef
	if (s.implementationRef.getEReference() != null) t.addNewReference("implementationRef".clearKeyWord(), s.implementationRef.getEReference());
}

@lazy
rule Message
	transform s : DSL!Message //bpmn2.Message
	to t : SysMLine!PartUsage
	extends Base{
	//Message.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//Message.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//Message.name -> EAttribute : name
	if (s.name.getEAttribute() != null) t.addNewAttribute("name".clearKeyWord(), s.name.getEAttribute());
	//Message.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//Message.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//Message.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//Message.itemRef -> EReference : itemRef
	if (s.itemRef.getEReference() != null) t.addNewReference("itemRef".clearKeyWord(), s.itemRef.getEReference());
}

@lazy
rule ItemDefinition
	transform s : DSL!ItemDefinition //bpmn2.ItemDefinition
	to t : SysMLine!PartUsage
	extends Base{
	//ItemDefinition.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//ItemDefinition.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//ItemDefinition.itemKind -> EnumerationUsage : itemKind
	if (s.itemKind.getEEnumLiteral() != null) t.addNewEnumLiteral("itemKind".clearKeyWord(), s.itemKind.getEEnumLiteral());
	//ItemDefinition.isCollection -> EAttribute : isCollection
	if (s.isCollection.getEAttribute() != null) t.addNewAttribute("isCollection".clearKeyWord(), s.isCollection.getEAttribute());
	//ItemDefinition.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//ItemDefinition.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//ItemDefinition.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//ItemDefinition.structureRef -> EReference : structureRef
	if (s.structureRef.getEReference() != null) t.addNewReference("structureRef".clearKeyWord(), s.structureRef.getEReference());
	//ItemDefinition.import -> EReference : import_
	if (s.`import`.getEReference() != null) t.addNewReference("import".clearKeyWord(), s.`import`.getEReference());
}

@lazy
rule Import
	transform s : DSL!Import //bpmn2.Import
	to t : SysMLine!PartUsage
	extends Base{
	//Import.importType -> EAttribute : importType
	if (s.importType.getEAttribute() != null) t.addNewAttribute("importType".clearKeyWord(), s.importType.getEAttribute());
	//Import.location -> EAttribute : location
	if (s.location.getEAttribute() != null) t.addNewAttribute("location".clearKeyWord(), s.location.getEAttribute());
	//Import.namespace -> EAttribute : namespace
	if (s.namespace.getEAttribute() != null) t.addNewAttribute("namespace".clearKeyWord(), s.namespace.getEAttribute());
	//Import.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
}

@lazy
rule Error
	transform s : DSL!Error //bpmn2.Error
	to t : SysMLine!PartUsage
	extends Base{
	//Error.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//Error.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//Error.name -> EAttribute : name
	if (s.name.getEAttribute() != null) t.addNewAttribute("name".clearKeyWord(), s.name.getEAttribute());
	//Error.errorCode -> EAttribute : errorCode
	if (s.errorCode.getEAttribute() != null) t.addNewAttribute("errorCode".clearKeyWord(), s.errorCode.getEAttribute());
	//Error.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//Error.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//Error.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//Error.structureRef -> EReference : structureRef
	if (s.structureRef.getEReference() != null) t.addNewReference("structureRef".clearKeyWord(), s.structureRef.getEReference());
}

@lazy
rule EndPoint
	transform s : DSL!EndPoint //bpmn2.EndPoint
	to t : SysMLine!PartUsage
	extends Base{
	//EndPoint.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//EndPoint.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//EndPoint.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//EndPoint.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//EndPoint.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
}

@lazy
rule Auditing
	transform s : DSL!Auditing //bpmn2.Auditing
	to t : SysMLine!PartUsage
	extends Base{
	//Auditing.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//Auditing.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//Auditing.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//Auditing.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//Auditing.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
}

@lazy
rule GlobalTask
	transform s : DSL!GlobalTask //bpmn2.GlobalTask
	to t : SysMLine!PartUsage
	extends Base{
	//GlobalTask.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//GlobalTask.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//GlobalTask.name -> EAttribute : name
	if (s.name.getEAttribute() != null) t.addNewAttribute("name".clearKeyWord(), s.name.getEAttribute());
	//GlobalTask.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//GlobalTask.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//GlobalTask.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//GlobalTask.ioSpecification -> EReference : ioSpecification
	if (s.ioSpecification.getEReference() != null) t.addNewReference("ioSpecification".clearKeyWord(), s.ioSpecification.getEReference());
	//GlobalTask.supportedInterfaceRefs -> EReference : supportedInterfaceRefs
	if (s.supportedInterfaceRefs.getEReference() != null) t.addNewReference("supportedInterfaceRefs".clearKeyWord(), s.supportedInterfaceRefs.getEReference());
	//GlobalTask.ioBinding -> EReference : ioBinding
	if (s.ioBinding.getEReference() != null) t.addNewReference("ioBinding".clearKeyWord(), s.ioBinding.getEReference());
	//GlobalTask.resources -> EReference : resources
	if (s.resources.getEReference() != null) t.addNewReference("resources".clearKeyWord(), s.resources.getEReference());
}

@lazy
rule CallableElement
	transform s : DSL!CallableElement //bpmn2.CallableElement
	to t : SysMLine!PartUsage
	extends Base{
	//CallableElement.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//CallableElement.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//CallableElement.name -> EAttribute : name
	if (s.name.getEAttribute() != null) t.addNewAttribute("name".clearKeyWord(), s.name.getEAttribute());
	//CallableElement.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//CallableElement.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//CallableElement.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//CallableElement.ioSpecification -> EReference : ioSpecification
	if (s.ioSpecification.getEReference() != null) t.addNewReference("ioSpecification".clearKeyWord(), s.ioSpecification.getEReference());
	//CallableElement.supportedInterfaceRefs -> EReference : supportedInterfaceRefs
	if (s.supportedInterfaceRefs.getEReference() != null) t.addNewReference("supportedInterfaceRefs".clearKeyWord(), s.supportedInterfaceRefs.getEReference());
	//CallableElement.ioBinding -> EReference : ioBinding
	if (s.ioBinding.getEReference() != null) t.addNewReference("ioBinding".clearKeyWord(), s.ioBinding.getEReference());
}

@lazy
rule InputOutputSpecification
	transform s : DSL!InputOutputSpecification //bpmn2.InputOutputSpecification
	to t : SysMLine!PartUsage
	extends Base{
	//InputOutputSpecification.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//InputOutputSpecification.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//InputOutputSpecification.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//InputOutputSpecification.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//InputOutputSpecification.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//InputOutputSpecification.inputSets -> EReference : inputSets
	if (s.inputSets.getEReference() != null) t.addNewReference("inputSets".clearKeyWord(), s.inputSets.getEReference());
	//InputOutputSpecification.outputSets -> EReference : outputSets
	if (s.outputSets.getEReference() != null) t.addNewReference("outputSets".clearKeyWord(), s.outputSets.getEReference());
	//InputOutputSpecification.dataInputs -> EReference : dataInputs
	if (s.dataInputs.getEReference() != null) t.addNewReference("dataInputs".clearKeyWord(), s.dataInputs.getEReference());
	//InputOutputSpecification.dataOutputs -> EReference : dataOutputs
	if (s.dataOutputs.getEReference() != null) t.addNewReference("dataOutputs".clearKeyWord(), s.dataOutputs.getEReference());
}

@lazy
rule InputSet
	transform s : DSL!InputSet //bpmn2.InputSet
	to t : SysMLine!PartUsage
	extends Base{
	//InputSet.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//InputSet.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//InputSet.name -> EAttribute : name
	if (s.name.getEAttribute() != null) t.addNewAttribute("name".clearKeyWord(), s.name.getEAttribute());
	//InputSet.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//InputSet.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//InputSet.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//InputSet.dataInputRefs -> EReference : dataInputRefs
	if (s.dataInputRefs.getEReference() != null) t.addNewReference("dataInputRefs".clearKeyWord(), s.dataInputRefs.getEReference());
	//InputSet.optionalInputRefs -> EReference : optionalInputRefs
	if (s.optionalInputRefs.getEReference() != null) t.addNewReference("optionalInputRefs".clearKeyWord(), s.optionalInputRefs.getEReference());
	//InputSet.whileExecutingInputRefs -> EReference : whileExecutingInputRefs
	if (s.whileExecutingInputRefs.getEReference() != null) t.addNewReference("whileExecutingInputRefs".clearKeyWord(), s.whileExecutingInputRefs.getEReference());
	//InputSet.outputSetRefs -> EReference : outputSetRefs
	if (s.outputSetRefs.getEReference() != null) t.addNewReference("outputSetRefs".clearKeyWord(), s.outputSetRefs.getEReference());
}

@lazy
rule DataInput
	transform s : DSL!DataInput //bpmn2.DataInput
	to t : SysMLine!PartUsage
	extends Base{
	//DataInput.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//DataInput.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//DataInput.name -> EAttribute : name
	if (s.name.getEAttribute() != null) t.addNewAttribute("name".clearKeyWord(), s.name.getEAttribute());
	//DataInput.isCollection -> EAttribute : isCollection
	if (s.isCollection.getEAttribute() != null) t.addNewAttribute("isCollection".clearKeyWord(), s.isCollection.getEAttribute());
	//DataInput.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//DataInput.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//DataInput.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//DataInput.itemSubjectRef -> EReference : itemSubjectRef
	if (s.itemSubjectRef.getEReference() != null) t.addNewReference("itemSubjectRef".clearKeyWord(), s.itemSubjectRef.getEReference());
	//DataInput.dataState -> EReference : dataState
	if (s.dataState.getEReference() != null) t.addNewReference("dataState".clearKeyWord(), s.dataState.getEReference());
	//DataInput.inputSetWithOptional -> EReference : inputSetWithOptional
	if (s.inputSetWithOptional.getEReference() != null) t.addNewReference("inputSetWithOptional".clearKeyWord(), s.inputSetWithOptional.getEReference());
	//DataInput.inputSetWithWhileExecuting -> EReference : inputSetWithWhileExecuting
	if (s.inputSetWithWhileExecuting.getEReference() != null) t.addNewReference("inputSetWithWhileExecuting".clearKeyWord(), s.inputSetWithWhileExecuting.getEReference());
	//DataInput.inputSetRefs -> EReference : inputSetRefs
	if (s.inputSetRefs.getEReference() != null) t.addNewReference("inputSetRefs".clearKeyWord(), s.inputSetRefs.getEReference());
}

@lazy
rule ItemAwareElement
	transform s : DSL!ItemAwareElement //bpmn2.ItemAwareElement
	to t : SysMLine!PartUsage
	extends Base{
	//ItemAwareElement.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//ItemAwareElement.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//ItemAwareElement.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//ItemAwareElement.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//ItemAwareElement.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//ItemAwareElement.itemSubjectRef -> EReference : itemSubjectRef
	if (s.itemSubjectRef.getEReference() != null) t.addNewReference("itemSubjectRef".clearKeyWord(), s.itemSubjectRef.getEReference());
	//ItemAwareElement.dataState -> EReference : dataState
	if (s.dataState.getEReference() != null) t.addNewReference("dataState".clearKeyWord(), s.dataState.getEReference());
}

@lazy
rule DataState
	transform s : DSL!DataState //bpmn2.DataState
	to t : SysMLine!PartUsage
	extends Base{
	//DataState.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//DataState.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//DataState.name -> EAttribute : name
	if (s.name.getEAttribute() != null) t.addNewAttribute("name".clearKeyWord(), s.name.getEAttribute());
	//DataState.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//DataState.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//DataState.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
}

@lazy
rule OutputSet
	transform s : DSL!OutputSet //bpmn2.OutputSet
	to t : SysMLine!PartUsage
	extends Base{
	//OutputSet.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//OutputSet.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//OutputSet.name -> EAttribute : name
	if (s.name.getEAttribute() != null) t.addNewAttribute("name".clearKeyWord(), s.name.getEAttribute());
	//OutputSet.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//OutputSet.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//OutputSet.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//OutputSet.dataOutputRefs -> EReference : dataOutputRefs
	if (s.dataOutputRefs.getEReference() != null) t.addNewReference("dataOutputRefs".clearKeyWord(), s.dataOutputRefs.getEReference());
	//OutputSet.optionalOutputRefs -> EReference : optionalOutputRefs
	if (s.optionalOutputRefs.getEReference() != null) t.addNewReference("optionalOutputRefs".clearKeyWord(), s.optionalOutputRefs.getEReference());
	//OutputSet.whileExecutingOutputRefs -> EReference : whileExecutingOutputRefs
	if (s.whileExecutingOutputRefs.getEReference() != null) t.addNewReference("whileExecutingOutputRefs".clearKeyWord(), s.whileExecutingOutputRefs.getEReference());
	//OutputSet.inputSetRefs -> EReference : inputSetRefs
	if (s.inputSetRefs.getEReference() != null) t.addNewReference("inputSetRefs".clearKeyWord(), s.inputSetRefs.getEReference());
}

@lazy
rule DataOutput
	transform s : DSL!DataOutput //bpmn2.DataOutput
	to t : SysMLine!PartUsage
	extends Base{
	//DataOutput.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//DataOutput.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//DataOutput.name -> EAttribute : name
	if (s.name.getEAttribute() != null) t.addNewAttribute("name".clearKeyWord(), s.name.getEAttribute());
	//DataOutput.isCollection -> EAttribute : isCollection
	if (s.isCollection.getEAttribute() != null) t.addNewAttribute("isCollection".clearKeyWord(), s.isCollection.getEAttribute());
	//DataOutput.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//DataOutput.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//DataOutput.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//DataOutput.itemSubjectRef -> EReference : itemSubjectRef
	if (s.itemSubjectRef.getEReference() != null) t.addNewReference("itemSubjectRef".clearKeyWord(), s.itemSubjectRef.getEReference());
	//DataOutput.dataState -> EReference : dataState
	if (s.dataState.getEReference() != null) t.addNewReference("dataState".clearKeyWord(), s.dataState.getEReference());
	//DataOutput.outputSetWithOptional -> EReference : outputSetWithOptional
	if (s.outputSetWithOptional.getEReference() != null) t.addNewReference("outputSetWithOptional".clearKeyWord(), s.outputSetWithOptional.getEReference());
	//DataOutput.outputSetWithWhileExecuting -> EReference : outputSetWithWhileExecuting
	if (s.outputSetWithWhileExecuting.getEReference() != null) t.addNewReference("outputSetWithWhileExecuting".clearKeyWord(), s.outputSetWithWhileExecuting.getEReference());
	//DataOutput.outputSetRefs -> EReference : outputSetRefs
	if (s.outputSetRefs.getEReference() != null) t.addNewReference("outputSetRefs".clearKeyWord(), s.outputSetRefs.getEReference());
}

@lazy
rule InputOutputBinding
	transform s : DSL!InputOutputBinding //bpmn2.InputOutputBinding
	to t : SysMLine!PartUsage
	extends Base{
	//InputOutputBinding.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//InputOutputBinding.inputDataRef -> EReference : inputDataRef
	if (s.inputDataRef.getEReference() != null) t.addNewReference("inputDataRef".clearKeyWord(), s.inputDataRef.getEReference());
	//InputOutputBinding.outputDataRef -> EReference : outputDataRef
	if (s.outputDataRef.getEReference() != null) t.addNewReference("outputDataRef".clearKeyWord(), s.outputDataRef.getEReference());
	//InputOutputBinding.operationRef -> EReference : operationRef
	if (s.operationRef.getEReference() != null) t.addNewReference("operationRef".clearKeyWord(), s.operationRef.getEReference());
}

@lazy
rule ResourceRole
	transform s : DSL!ResourceRole //bpmn2.ResourceRole
	to t : SysMLine!PartUsage
	extends Base{
	//ResourceRole.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//ResourceRole.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//ResourceRole.name -> EAttribute : name
	if (s.name.getEAttribute() != null) t.addNewAttribute("name".clearKeyWord(), s.name.getEAttribute());
	//ResourceRole.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//ResourceRole.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//ResourceRole.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//ResourceRole.resourceRef -> EReference : resourceRef
	if (s.resourceRef.getEReference() != null) t.addNewReference("resourceRef".clearKeyWord(), s.resourceRef.getEReference());
	//ResourceRole.resourceParameterBindings -> EReference : resourceParameterBindings
	if (s.resourceParameterBindings.getEReference() != null) t.addNewReference("resourceParameterBindings".clearKeyWord(), s.resourceParameterBindings.getEReference());
	//ResourceRole.resourceAssignmentExpression -> EReference : resourceAssignmentExpression
	if (s.resourceAssignmentExpression.getEReference() != null) t.addNewReference("resourceAssignmentExpression".clearKeyWord(), s.resourceAssignmentExpression.getEReference());
}

@lazy
rule Resource
	transform s : DSL!Resource //bpmn2.Resource
	to t : SysMLine!PartUsage
	extends Base{
	//Resource.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//Resource.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//Resource.name -> EAttribute : name
	if (s.name.getEAttribute() != null) t.addNewAttribute("name".clearKeyWord(), s.name.getEAttribute());
	//Resource.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//Resource.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//Resource.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//Resource.resourceParameters -> EReference : resourceParameters
	if (s.resourceParameters.getEReference() != null) t.addNewReference("resourceParameters".clearKeyWord(), s.resourceParameters.getEReference());
}

@lazy
rule ResourceParameter
	transform s : DSL!ResourceParameter //bpmn2.ResourceParameter
	to t : SysMLine!PartUsage
	extends Base{
	//ResourceParameter.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//ResourceParameter.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//ResourceParameter.name -> EAttribute : name
	if (s.name.getEAttribute() != null) t.addNewAttribute("name".clearKeyWord(), s.name.getEAttribute());
	//ResourceParameter.isRequired -> EAttribute : isRequired
	if (s.isRequired.getEAttribute() != null) t.addNewAttribute("isRequired".clearKeyWord(), s.isRequired.getEAttribute());
	//ResourceParameter.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//ResourceParameter.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//ResourceParameter.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//ResourceParameter.type -> EReference : type
	if (s.type.getEReference() != null) t.addNewReference("type".clearKeyWord(), s.type.getEReference());
}

@lazy
rule ResourceParameterBinding
	transform s : DSL!ResourceParameterBinding //bpmn2.ResourceParameterBinding
	to t : SysMLine!PartUsage
	extends Base{
	//ResourceParameterBinding.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//ResourceParameterBinding.expression -> EReference : expression
	if (s.expression.getEReference() != null) t.addNewReference("expression".clearKeyWord(), s.expression.getEReference());
	//ResourceParameterBinding.parameterRef -> EReference : parameterRef
	if (s.parameterRef.getEReference() != null) t.addNewReference("parameterRef".clearKeyWord(), s.parameterRef.getEReference());
}

@lazy
rule Expression
	transform s : DSL!Expression //bpmn2.Expression
	to t : SysMLine!PartUsage
	extends Base{
	//Expression.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//Expression.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//Expression.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//Expression.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//Expression.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
}

@lazy
rule ResourceAssignmentExpression
	transform s : DSL!ResourceAssignmentExpression //bpmn2.ResourceAssignmentExpression
	to t : SysMLine!PartUsage
	extends Base{
	//ResourceAssignmentExpression.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//ResourceAssignmentExpression.expression -> EReference : expression
	if (s.expression.getEReference() != null) t.addNewReference("expression".clearKeyWord(), s.expression.getEReference());
}

@lazy
rule Monitoring
	transform s : DSL!Monitoring //bpmn2.Monitoring
	to t : SysMLine!PartUsage
	extends Base{
	//Monitoring.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//Monitoring.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//Monitoring.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//Monitoring.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//Monitoring.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
}

@lazy
rule Performer
	transform s : DSL!Performer //bpmn2.Performer
	to t : SysMLine!PartUsage
	extends Base{
	//Performer.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//Performer.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//Performer.name -> EAttribute : name
	if (s.name.getEAttribute() != null) t.addNewAttribute("name".clearKeyWord(), s.name.getEAttribute());
	//Performer.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//Performer.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//Performer.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//Performer.resourceRef -> EReference : resourceRef
	if (s.resourceRef.getEReference() != null) t.addNewReference("resourceRef".clearKeyWord(), s.resourceRef.getEReference());
	//Performer.resourceParameterBindings -> EReference : resourceParameterBindings
	if (s.resourceParameterBindings.getEReference() != null) t.addNewReference("resourceParameterBindings".clearKeyWord(), s.resourceParameterBindings.getEReference());
	//Performer.resourceAssignmentExpression -> EReference : resourceAssignmentExpression
	if (s.resourceAssignmentExpression.getEReference() != null) t.addNewReference("resourceAssignmentExpression".clearKeyWord(), s.resourceAssignmentExpression.getEReference());
}

@lazy
rule Process
	transform s : DSL!Process //bpmn2.Process
	to t : SysMLine!PartUsage
	extends Base{
	//Process.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//Process.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//Process.name -> EAttribute : name
	if (s.name.getEAttribute() != null) t.addNewAttribute("name".clearKeyWord(), s.name.getEAttribute());
	//Process.processType -> EnumerationUsage : processType
	if (s.processType.getEEnumLiteral() != null) t.addNewEnumLiteral("processType".clearKeyWord(), s.processType.getEEnumLiteral());
	//Process.isClosed -> EAttribute : isClosed
	if (s.isClosed.getEAttribute() != null) t.addNewAttribute("isClosed".clearKeyWord(), s.isClosed.getEAttribute());
	//Process.isExecutable -> EAttribute : isExecutable
	if (s.isExecutable.getEAttribute() != null) t.addNewAttribute("isExecutable".clearKeyWord(), s.isExecutable.getEAttribute());
	//Process.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//Process.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//Process.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//Process.ioSpecification -> EReference : ioSpecification
	if (s.ioSpecification.getEReference() != null) t.addNewReference("ioSpecification".clearKeyWord(), s.ioSpecification.getEReference());
	//Process.supportedInterfaceRefs -> EReference : supportedInterfaceRefs
	if (s.supportedInterfaceRefs.getEReference() != null) t.addNewReference("supportedInterfaceRefs".clearKeyWord(), s.supportedInterfaceRefs.getEReference());
	//Process.ioBinding -> EReference : ioBinding
	if (s.ioBinding.getEReference() != null) t.addNewReference("ioBinding".clearKeyWord(), s.ioBinding.getEReference());
	//Process.flowElements -> EReference : flowElements
	if (s.flowElements.getEReference() != null) t.addNewReference("flowElements".clearKeyWord(), s.flowElements.getEReference());
	//Process.laneSets -> EReference : laneSets
	if (s.laneSets.getEReference() != null) t.addNewReference("laneSets".clearKeyWord(), s.laneSets.getEReference());
	//Process.auditing -> EReference : auditing
	if (s.auditing.getEReference() != null) t.addNewReference("auditing".clearKeyWord(), s.auditing.getEReference());
	//Process.monitoring -> EReference : monitoring
	if (s.monitoring.getEReference() != null) t.addNewReference("monitoring".clearKeyWord(), s.monitoring.getEReference());
	//Process.properties -> EReference : properties
	if (s.properties.getEReference() != null) t.addNewReference("properties".clearKeyWord(), s.properties.getEReference());
	//Process.supports -> EReference : supports
	if (s.supports.getEReference() != null) t.addNewReference("supports".clearKeyWord(), s.supports.getEReference());
	//Process.definitionalCollaborationRef -> EReference : definitionalCollaborationRef
	if (s.definitionalCollaborationRef.getEReference() != null) t.addNewReference("definitionalCollaborationRef".clearKeyWord(), s.definitionalCollaborationRef.getEReference());
	//Process.resources -> EReference : resources
	if (s.resources.getEReference() != null) t.addNewReference("resources".clearKeyWord(), s.resources.getEReference());
	//Process.artifacts -> EReference : artifacts
	if (s.artifacts.getEReference() != null) t.addNewReference("artifacts".clearKeyWord(), s.artifacts.getEReference());
	//Process.correlationSubscriptions -> EReference : correlationSubscriptions
	if (s.correlationSubscriptions.getEReference() != null) t.addNewReference("correlationSubscriptions".clearKeyWord(), s.correlationSubscriptions.getEReference());
	//Process.decomposedBy -> EReference : decomposedBy
	if (s.decomposedBy.getEReference() != null) t.addNewReference("decomposedBy".clearKeyWord(), s.decomposedBy.getEReference());
	//Process.decomposes -> EReference : decomposes
	if (s.decomposes.getEReference() != null) t.addNewReference("decomposes".clearKeyWord(), s.decomposes.getEReference());
}

@lazy
rule FlowElementsContainer
	transform s : DSL!FlowElementsContainer //bpmn2.FlowElementsContainer
	to t : SysMLine!PartUsage
	extends Base{
	//FlowElementsContainer.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//FlowElementsContainer.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//FlowElementsContainer.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//FlowElementsContainer.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//FlowElementsContainer.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//FlowElementsContainer.flowElements -> EReference : flowElements
	if (s.flowElements.getEReference() != null) t.addNewReference("flowElements".clearKeyWord(), s.flowElements.getEReference());
	//FlowElementsContainer.laneSets -> EReference : laneSets
	if (s.laneSets.getEReference() != null) t.addNewReference("laneSets".clearKeyWord(), s.laneSets.getEReference());
}

@lazy
rule FlowElement
	transform s : DSL!FlowElement //bpmn2.FlowElement
	to t : SysMLine!PartUsage
	extends Base{
	//FlowElement.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//FlowElement.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//FlowElement.name -> EAttribute : name
	if (s.name.getEAttribute() != null) t.addNewAttribute("name".clearKeyWord(), s.name.getEAttribute());
	//FlowElement.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//FlowElement.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//FlowElement.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//FlowElement.auditing -> EReference : auditing
	if (s.auditing.getEReference() != null) t.addNewReference("auditing".clearKeyWord(), s.auditing.getEReference());
	//FlowElement.monitoring -> EReference : monitoring
	if (s.monitoring.getEReference() != null) t.addNewReference("monitoring".clearKeyWord(), s.monitoring.getEReference());
	//FlowElement.categoryValueRef -> EReference : categoryValueRef
	if (s.categoryValueRef.getEReference() != null) t.addNewReference("categoryValueRef".clearKeyWord(), s.categoryValueRef.getEReference());
}

@lazy
rule CategoryValue
	transform s : DSL!CategoryValue //bpmn2.CategoryValue
	to t : SysMLine!PartUsage
	extends Base{
	//CategoryValue.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//CategoryValue.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//CategoryValue.value -> EAttribute : value
	if (s.value.getEAttribute() != null) t.addNewAttribute("value".clearKeyWord(), s.value.getEAttribute());
	//CategoryValue.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//CategoryValue.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//CategoryValue.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//CategoryValue.categorizedFlowElements -> EReference : categorizedFlowElements
	if (s.categorizedFlowElements.getEReference() != null) t.addNewReference("categorizedFlowElements".clearKeyWord(), s.categorizedFlowElements.getEReference());
}

@lazy
rule LaneSet
	transform s : DSL!LaneSet //bpmn2.LaneSet
	to t : SysMLine!PartUsage
	extends Base{
	//LaneSet.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//LaneSet.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//LaneSet.name -> EAttribute : name
	if (s.name.getEAttribute() != null) t.addNewAttribute("name".clearKeyWord(), s.name.getEAttribute());
	//LaneSet.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//LaneSet.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//LaneSet.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//LaneSet.lanes -> EReference : lanes
	if (s.lanes.getEReference() != null) t.addNewReference("lanes".clearKeyWord(), s.lanes.getEReference());
}

@lazy
rule Lane
	transform s : DSL!Lane //bpmn2.Lane
	to t : SysMLine!PartUsage
	extends Base{
	//Lane.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//Lane.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//Lane.name -> EAttribute : name
	if (s.name.getEAttribute() != null) t.addNewAttribute("name".clearKeyWord(), s.name.getEAttribute());
	//Lane.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//Lane.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//Lane.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//Lane.childLaneSet -> EReference : childLaneSet
	if (s.childLaneSet.getEReference() != null) t.addNewReference("childLaneSet".clearKeyWord(), s.childLaneSet.getEReference());
	//Lane.partitionElementRef -> EReference : partitionElementRef
	if (s.partitionElementRef.getEReference() != null) t.addNewReference("partitionElementRef".clearKeyWord(), s.partitionElementRef.getEReference());
	//Lane.flowNodeRefs -> EReference : flowNodeRefs
	if (s.flowNodeRefs.getEReference() != null) t.addNewReference("flowNodeRefs".clearKeyWord(), s.flowNodeRefs.getEReference());
	//Lane.partitionElement -> EReference : partitionElement
	if (s.partitionElement.getEReference() != null) t.addNewReference("partitionElement".clearKeyWord(), s.partitionElement.getEReference());
}

@lazy
rule FlowNode
	transform s : DSL!FlowNode //bpmn2.FlowNode
	to t : SysMLine!PartUsage
	extends Base{
	//FlowNode.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//FlowNode.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//FlowNode.name -> EAttribute : name
	if (s.name.getEAttribute() != null) t.addNewAttribute("name".clearKeyWord(), s.name.getEAttribute());
	//FlowNode.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//FlowNode.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//FlowNode.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//FlowNode.auditing -> EReference : auditing
	if (s.auditing.getEReference() != null) t.addNewReference("auditing".clearKeyWord(), s.auditing.getEReference());
	//FlowNode.monitoring -> EReference : monitoring
	if (s.monitoring.getEReference() != null) t.addNewReference("monitoring".clearKeyWord(), s.monitoring.getEReference());
	//FlowNode.categoryValueRef -> EReference : categoryValueRef
	if (s.categoryValueRef.getEReference() != null) t.addNewReference("categoryValueRef".clearKeyWord(), s.categoryValueRef.getEReference());
	//FlowNode.outgoing -> EReference : outgoing
	if (s.outgoing.getEReference() != null) t.addNewReference("outgoing".clearKeyWord(), s.outgoing.getEReference());
	//FlowNode.incoming -> EReference : incoming
	if (s.incoming.getEReference() != null) t.addNewReference("incoming".clearKeyWord(), s.incoming.getEReference());
	//FlowNode.lanes -> EReference : lanes
	if (s.lanes.getEReference() != null) t.addNewReference("lanes".clearKeyWord(), s.lanes.getEReference());
}

@lazy
rule SequenceFlow
	transform s : DSL!SequenceFlow //bpmn2.SequenceFlow
	to t : SysMLine!PartUsage
	extends Base{
	//SequenceFlow.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//SequenceFlow.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//SequenceFlow.name -> EAttribute : name
	if (s.name.getEAttribute() != null) t.addNewAttribute("name".clearKeyWord(), s.name.getEAttribute());
	//SequenceFlow.isImmediate -> EAttribute : isImmediate
	if (s.isImmediate.getEAttribute() != null) t.addNewAttribute("isImmediate".clearKeyWord(), s.isImmediate.getEAttribute());
	//SequenceFlow.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//SequenceFlow.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//SequenceFlow.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//SequenceFlow.auditing -> EReference : auditing
	if (s.auditing.getEReference() != null) t.addNewReference("auditing".clearKeyWord(), s.auditing.getEReference());
	//SequenceFlow.monitoring -> EReference : monitoring
	if (s.monitoring.getEReference() != null) t.addNewReference("monitoring".clearKeyWord(), s.monitoring.getEReference());
	//SequenceFlow.categoryValueRef -> EReference : categoryValueRef
	if (s.categoryValueRef.getEReference() != null) t.addNewReference("categoryValueRef".clearKeyWord(), s.categoryValueRef.getEReference());
	//SequenceFlow.conditionExpression -> EReference : conditionExpression
	if (s.conditionExpression.getEReference() != null) t.addNewReference("conditionExpression".clearKeyWord(), s.conditionExpression.getEReference());
	//SequenceFlow.targetRef -> EReference : targetRef
	if (s.targetRef.getEReference() != null) t.addNewReference("targetRef".clearKeyWord(), s.targetRef.getEReference());
	//SequenceFlow.sourceRef -> EReference : sourceRef
	if (s.sourceRef.getEReference() != null) t.addNewReference("sourceRef".clearKeyWord(), s.sourceRef.getEReference());
}

@lazy
rule Property
	transform s : DSL!Property //bpmn2.Property
	to t : SysMLine!PartUsage
	extends Base{
	//Property.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//Property.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//Property.name -> EAttribute : name
	if (s.name.getEAttribute() != null) t.addNewAttribute("name".clearKeyWord(), s.name.getEAttribute());
	//Property.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//Property.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//Property.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//Property.itemSubjectRef -> EReference : itemSubjectRef
	if (s.itemSubjectRef.getEReference() != null) t.addNewReference("itemSubjectRef".clearKeyWord(), s.itemSubjectRef.getEReference());
	//Property.dataState -> EReference : dataState
	if (s.dataState.getEReference() != null) t.addNewReference("dataState".clearKeyWord(), s.dataState.getEReference());
}

@lazy
rule Collaboration
	transform s : DSL!Collaboration //bpmn2.Collaboration
	to t : SysMLine!PartUsage
	extends Base{
	//Collaboration.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//Collaboration.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//Collaboration.name -> EAttribute : name
	if (s.name.getEAttribute() != null) t.addNewAttribute("name".clearKeyWord(), s.name.getEAttribute());
	//Collaboration.isClosed -> EAttribute : isClosed
	if (s.isClosed.getEAttribute() != null) t.addNewAttribute("isClosed".clearKeyWord(), s.isClosed.getEAttribute());
	//Collaboration.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//Collaboration.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//Collaboration.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//Collaboration.choreographyRef -> EReference : choreographyRef
	if (s.choreographyRef.getEReference() != null) t.addNewReference("choreographyRef".clearKeyWord(), s.choreographyRef.getEReference());
	//Collaboration.artifacts -> EReference : artifacts
	if (s.artifacts.getEReference() != null) t.addNewReference("artifacts".clearKeyWord(), s.artifacts.getEReference());
	//Collaboration.participantAssociations -> EReference : participantAssociations
	if (s.participantAssociations.getEReference() != null) t.addNewReference("participantAssociations".clearKeyWord(), s.participantAssociations.getEReference());
	//Collaboration.messageFlowAssociations -> EReference : messageFlowAssociations
	if (s.messageFlowAssociations.getEReference() != null) t.addNewReference("messageFlowAssociations".clearKeyWord(), s.messageFlowAssociations.getEReference());
	//Collaboration.conversationAssociations -> EReference : conversationAssociations
	if (s.conversationAssociations.getEReference() != null) t.addNewReference("conversationAssociations".clearKeyWord(), s.conversationAssociations.getEReference());
	//Collaboration.participants -> EReference : participants
	if (s.participants.getEReference() != null) t.addNewReference("participants".clearKeyWord(), s.participants.getEReference());
	//Collaboration.messageFlows -> EReference : messageFlows
	if (s.messageFlows.getEReference() != null) t.addNewReference("messageFlows".clearKeyWord(), s.messageFlows.getEReference());
	//Collaboration.correlationKeys -> EReference : correlationKeys
	if (s.correlationKeys.getEReference() != null) t.addNewReference("correlationKeys".clearKeyWord(), s.correlationKeys.getEReference());
	//Collaboration.conversations -> EReference : conversations
	if (s.conversations.getEReference() != null) t.addNewReference("conversations".clearKeyWord(), s.conversations.getEReference());
	//Collaboration.conversationLinks -> EReference : conversationLinks
	if (s.conversationLinks.getEReference() != null) t.addNewReference("conversationLinks".clearKeyWord(), s.conversationLinks.getEReference());
}

@lazy
rule Choreography
	transform s : DSL!Choreography //bpmn2.Choreography
	to t : SysMLine!PartUsage
	extends Base{
	//Choreography.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//Choreography.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//Choreography.name -> EAttribute : name
	if (s.name.getEAttribute() != null) t.addNewAttribute("name".clearKeyWord(), s.name.getEAttribute());
	//Choreography.isClosed -> EAttribute : isClosed
	if (s.isClosed.getEAttribute() != null) t.addNewAttribute("isClosed".clearKeyWord(), s.isClosed.getEAttribute());
	//Choreography.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//Choreography.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//Choreography.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//Choreography.choreographyRef -> EReference : choreographyRef
	if (s.choreographyRef.getEReference() != null) t.addNewReference("choreographyRef".clearKeyWord(), s.choreographyRef.getEReference());
	//Choreography.artifacts -> EReference : artifacts
	if (s.artifacts.getEReference() != null) t.addNewReference("artifacts".clearKeyWord(), s.artifacts.getEReference());
	//Choreography.participantAssociations -> EReference : participantAssociations
	if (s.participantAssociations.getEReference() != null) t.addNewReference("participantAssociations".clearKeyWord(), s.participantAssociations.getEReference());
	//Choreography.messageFlowAssociations -> EReference : messageFlowAssociations
	if (s.messageFlowAssociations.getEReference() != null) t.addNewReference("messageFlowAssociations".clearKeyWord(), s.messageFlowAssociations.getEReference());
	//Choreography.conversationAssociations -> EReference : conversationAssociations
	if (s.conversationAssociations.getEReference() != null) t.addNewReference("conversationAssociations".clearKeyWord(), s.conversationAssociations.getEReference());
	//Choreography.participants -> EReference : participants
	if (s.participants.getEReference() != null) t.addNewReference("participants".clearKeyWord(), s.participants.getEReference());
	//Choreography.messageFlows -> EReference : messageFlows
	if (s.messageFlows.getEReference() != null) t.addNewReference("messageFlows".clearKeyWord(), s.messageFlows.getEReference());
	//Choreography.correlationKeys -> EReference : correlationKeys
	if (s.correlationKeys.getEReference() != null) t.addNewReference("correlationKeys".clearKeyWord(), s.correlationKeys.getEReference());
	//Choreography.conversations -> EReference : conversations
	if (s.conversations.getEReference() != null) t.addNewReference("conversations".clearKeyWord(), s.conversations.getEReference());
	//Choreography.conversationLinks -> EReference : conversationLinks
	if (s.conversationLinks.getEReference() != null) t.addNewReference("conversationLinks".clearKeyWord(), s.conversationLinks.getEReference());
	//Choreography.flowElements -> EReference : flowElements
	if (s.flowElements.getEReference() != null) t.addNewReference("flowElements".clearKeyWord(), s.flowElements.getEReference());
	//Choreography.laneSets -> EReference : laneSets
	if (s.laneSets.getEReference() != null) t.addNewReference("laneSets".clearKeyWord(), s.laneSets.getEReference());
}

@lazy
rule Artifact
	transform s : DSL!Artifact //bpmn2.Artifact
	to t : SysMLine!PartUsage
	extends Base{
	//Artifact.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//Artifact.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//Artifact.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//Artifact.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//Artifact.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
}

@lazy
rule ParticipantAssociation
	transform s : DSL!ParticipantAssociation //bpmn2.ParticipantAssociation
	to t : SysMLine!PartUsage
	extends Base{
	//ParticipantAssociation.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//ParticipantAssociation.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//ParticipantAssociation.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//ParticipantAssociation.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//ParticipantAssociation.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//ParticipantAssociation.innerParticipantRef -> EReference : innerParticipantRef
	if (s.innerParticipantRef.getEReference() != null) t.addNewReference("innerParticipantRef".clearKeyWord(), s.innerParticipantRef.getEReference());
	//ParticipantAssociation.outerParticipantRef -> EReference : outerParticipantRef
	if (s.outerParticipantRef.getEReference() != null) t.addNewReference("outerParticipantRef".clearKeyWord(), s.outerParticipantRef.getEReference());
}

@lazy
rule Participant
	transform s : DSL!Participant //bpmn2.Participant
	to t : SysMLine!PartUsage
	extends Base{
	//Participant.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//Participant.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//Participant.name -> EAttribute : name
	if (s.name.getEAttribute() != null) t.addNewAttribute("name".clearKeyWord(), s.name.getEAttribute());
	//Participant.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//Participant.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//Participant.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//Participant.incomingConversationLinks -> EReference : incomingConversationLinks
	if (s.incomingConversationLinks.getEReference() != null) t.addNewReference("incomingConversationLinks".clearKeyWord(), s.incomingConversationLinks.getEReference());
	//Participant.outgoingConversationLinks -> EReference : outgoingConversationLinks
	if (s.outgoingConversationLinks.getEReference() != null) t.addNewReference("outgoingConversationLinks".clearKeyWord(), s.outgoingConversationLinks.getEReference());
	//Participant.interfaceRefs -> EReference : interfaceRefs
	if (s.interfaceRefs.getEReference() != null) t.addNewReference("interfaceRefs".clearKeyWord(), s.interfaceRefs.getEReference());
	//Participant.participantMultiplicity -> EReference : participantMultiplicity
	if (s.participantMultiplicity.getEReference() != null) t.addNewReference("participantMultiplicity".clearKeyWord(), s.participantMultiplicity.getEReference());
	//Participant.endPointRefs -> EReference : endPointRefs
	if (s.endPointRefs.getEReference() != null) t.addNewReference("endPointRefs".clearKeyWord(), s.endPointRefs.getEReference());
	//Participant.processRef -> EReference : processRef
	if (s.processRef.getEReference() != null) t.addNewReference("processRef".clearKeyWord(), s.processRef.getEReference());
}

@lazy
rule InteractionNode
	transform s : DSL!InteractionNode //bpmn2.InteractionNode
	to t : SysMLine!PartUsage
	extends Base{
	//InteractionNode.incomingConversationLinks -> EReference : incomingConversationLinks
	if (s.incomingConversationLinks.getEReference() != null) t.addNewReference("incomingConversationLinks".clearKeyWord(), s.incomingConversationLinks.getEReference());
	//InteractionNode.outgoingConversationLinks -> EReference : outgoingConversationLinks
	if (s.outgoingConversationLinks.getEReference() != null) t.addNewReference("outgoingConversationLinks".clearKeyWord(), s.outgoingConversationLinks.getEReference());
}

@lazy
rule ConversationLink
	transform s : DSL!ConversationLink //bpmn2.ConversationLink
	to t : SysMLine!PartUsage
	extends Base{
	//ConversationLink.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//ConversationLink.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//ConversationLink.name -> EAttribute : name
	if (s.name.getEAttribute() != null) t.addNewAttribute("name".clearKeyWord(), s.name.getEAttribute());
	//ConversationLink.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//ConversationLink.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//ConversationLink.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//ConversationLink.sourceRef -> EReference : sourceRef
	if (s.sourceRef.getEReference() != null) t.addNewReference("sourceRef".clearKeyWord(), s.sourceRef.getEReference());
	//ConversationLink.targetRef -> EReference : targetRef
	if (s.targetRef.getEReference() != null) t.addNewReference("targetRef".clearKeyWord(), s.targetRef.getEReference());
}

@lazy
rule ParticipantMultiplicity
	transform s : DSL!ParticipantMultiplicity //bpmn2.ParticipantMultiplicity
	to t : SysMLine!PartUsage
	extends Base{
	//ParticipantMultiplicity.minimum -> EAttribute : minimum
	if (s.minimum.getEAttribute() != null) t.addNewAttribute("minimum".clearKeyWord(), s.minimum.getEAttribute());
	//ParticipantMultiplicity.maximum -> EAttribute : maximum
	if (s.maximum.getEAttribute() != null) t.addNewAttribute("maximum".clearKeyWord(), s.maximum.getEAttribute());
	//ParticipantMultiplicity.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
}

@lazy
rule MessageFlowAssociation
	transform s : DSL!MessageFlowAssociation //bpmn2.MessageFlowAssociation
	to t : SysMLine!PartUsage
	extends Base{
	//MessageFlowAssociation.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//MessageFlowAssociation.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//MessageFlowAssociation.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//MessageFlowAssociation.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//MessageFlowAssociation.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//MessageFlowAssociation.innerMessageFlowRef -> EReference : innerMessageFlowRef
	if (s.innerMessageFlowRef.getEReference() != null) t.addNewReference("innerMessageFlowRef".clearKeyWord(), s.innerMessageFlowRef.getEReference());
	//MessageFlowAssociation.outerMessageFlowRef -> EReference : outerMessageFlowRef
	if (s.outerMessageFlowRef.getEReference() != null) t.addNewReference("outerMessageFlowRef".clearKeyWord(), s.outerMessageFlowRef.getEReference());
}

@lazy
rule MessageFlow
	transform s : DSL!MessageFlow //bpmn2.MessageFlow
	to t : SysMLine!PartUsage
	extends Base{
	//MessageFlow.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//MessageFlow.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//MessageFlow.name -> EAttribute : name
	if (s.name.getEAttribute() != null) t.addNewAttribute("name".clearKeyWord(), s.name.getEAttribute());
	//MessageFlow.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//MessageFlow.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//MessageFlow.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//MessageFlow.sourceRef -> EReference : sourceRef
	if (s.sourceRef.getEReference() != null) t.addNewReference("sourceRef".clearKeyWord(), s.sourceRef.getEReference());
	//MessageFlow.targetRef -> EReference : targetRef
	if (s.targetRef.getEReference() != null) t.addNewReference("targetRef".clearKeyWord(), s.targetRef.getEReference());
	//MessageFlow.messageRef -> EReference : messageRef
	if (s.messageRef.getEReference() != null) t.addNewReference("messageRef".clearKeyWord(), s.messageRef.getEReference());
}

@lazy
rule ConversationAssociation
	transform s : DSL!ConversationAssociation //bpmn2.ConversationAssociation
	to t : SysMLine!PartUsage
	extends Base{
	//ConversationAssociation.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//ConversationAssociation.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//ConversationAssociation.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//ConversationAssociation.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//ConversationAssociation.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//ConversationAssociation.innerConversationNodeRef -> EReference : innerConversationNodeRef
	if (s.innerConversationNodeRef.getEReference() != null) t.addNewReference("innerConversationNodeRef".clearKeyWord(), s.innerConversationNodeRef.getEReference());
	//ConversationAssociation.outerConversationNodeRef -> EReference : outerConversationNodeRef
	if (s.outerConversationNodeRef.getEReference() != null) t.addNewReference("outerConversationNodeRef".clearKeyWord(), s.outerConversationNodeRef.getEReference());
}

@lazy
rule ConversationNode
	transform s : DSL!ConversationNode //bpmn2.ConversationNode
	to t : SysMLine!PartUsage
	extends Base{
	//ConversationNode.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//ConversationNode.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//ConversationNode.name -> EAttribute : name
	if (s.name.getEAttribute() != null) t.addNewAttribute("name".clearKeyWord(), s.name.getEAttribute());
	//ConversationNode.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//ConversationNode.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//ConversationNode.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//ConversationNode.incomingConversationLinks -> EReference : incomingConversationLinks
	if (s.incomingConversationLinks.getEReference() != null) t.addNewReference("incomingConversationLinks".clearKeyWord(), s.incomingConversationLinks.getEReference());
	//ConversationNode.outgoingConversationLinks -> EReference : outgoingConversationLinks
	if (s.outgoingConversationLinks.getEReference() != null) t.addNewReference("outgoingConversationLinks".clearKeyWord(), s.outgoingConversationLinks.getEReference());
	//ConversationNode.participantRefs -> EReference : participantRefs
	if (s.participantRefs.getEReference() != null) t.addNewReference("participantRefs".clearKeyWord(), s.participantRefs.getEReference());
	//ConversationNode.messageFlowRefs -> EReference : messageFlowRefs
	if (s.messageFlowRefs.getEReference() != null) t.addNewReference("messageFlowRefs".clearKeyWord(), s.messageFlowRefs.getEReference());
	//ConversationNode.correlationKeys -> EReference : correlationKeys
	if (s.correlationKeys.getEReference() != null) t.addNewReference("correlationKeys".clearKeyWord(), s.correlationKeys.getEReference());
}

@lazy
rule CorrelationKey
	transform s : DSL!CorrelationKey //bpmn2.CorrelationKey
	to t : SysMLine!PartUsage
	extends Base{
	//CorrelationKey.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//CorrelationKey.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//CorrelationKey.name -> EAttribute : name
	if (s.name.getEAttribute() != null) t.addNewAttribute("name".clearKeyWord(), s.name.getEAttribute());
	//CorrelationKey.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//CorrelationKey.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//CorrelationKey.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//CorrelationKey.correlationPropertyRef -> EReference : correlationPropertyRef
	if (s.correlationPropertyRef.getEReference() != null) t.addNewReference("correlationPropertyRef".clearKeyWord(), s.correlationPropertyRef.getEReference());
}

@lazy
rule CorrelationProperty
	transform s : DSL!CorrelationProperty //bpmn2.CorrelationProperty
	to t : SysMLine!PartUsage
	extends Base{
	//CorrelationProperty.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//CorrelationProperty.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//CorrelationProperty.name -> EAttribute : name
	if (s.name.getEAttribute() != null) t.addNewAttribute("name".clearKeyWord(), s.name.getEAttribute());
	//CorrelationProperty.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//CorrelationProperty.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//CorrelationProperty.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//CorrelationProperty.correlationPropertyRetrievalExpression -> EReference : correlationPropertyRetrievalExpression
	if (s.correlationPropertyRetrievalExpression.getEReference() != null) t.addNewReference("correlationPropertyRetrievalExpression".clearKeyWord(), s.correlationPropertyRetrievalExpression.getEReference());
	//CorrelationProperty.type -> EReference : type
	if (s.type.getEReference() != null) t.addNewReference("type".clearKeyWord(), s.type.getEReference());
}

@lazy
rule CorrelationPropertyRetrievalExpression
	transform s : DSL!CorrelationPropertyRetrievalExpression //bpmn2.CorrelationPropertyRetrievalExpression
	to t : SysMLine!PartUsage
	extends Base{
	//CorrelationPropertyRetrievalExpression.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//CorrelationPropertyRetrievalExpression.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//CorrelationPropertyRetrievalExpression.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//CorrelationPropertyRetrievalExpression.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//CorrelationPropertyRetrievalExpression.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//CorrelationPropertyRetrievalExpression.messagePath -> EReference : messagePath
	if (s.messagePath.getEReference() != null) t.addNewReference("messagePath".clearKeyWord(), s.messagePath.getEReference());
	//CorrelationPropertyRetrievalExpression.messageRef -> EReference : messageRef
	if (s.messageRef.getEReference() != null) t.addNewReference("messageRef".clearKeyWord(), s.messageRef.getEReference());
}

@lazy
rule FormalExpression
	transform s : DSL!FormalExpression //bpmn2.FormalExpression
	to t : SysMLine!PartUsage
	extends Base{
	//FormalExpression.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//FormalExpression.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//FormalExpression.language -> EAttribute : language
	if (s.language.getEAttribute() != null) t.addNewAttribute("language".clearKeyWord(), s.language.getEAttribute());
	//FormalExpression.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//FormalExpression.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//FormalExpression.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//FormalExpression.body -> EReference : body
	if (s.body.getEReference() != null) t.addNewReference("body".clearKeyWord(), s.body.getEReference());
	//FormalExpression.evaluatesToTypeRef -> EReference : evaluatesToTypeRef
	if (s.evaluatesToTypeRef.getEReference() != null) t.addNewReference("evaluatesToTypeRef".clearKeyWord(), s.evaluatesToTypeRef.getEReference());
}

@lazy
rule CorrelationSubscription
	transform s : DSL!CorrelationSubscription //bpmn2.CorrelationSubscription
	to t : SysMLine!PartUsage
	extends Base{
	//CorrelationSubscription.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//CorrelationSubscription.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//CorrelationSubscription.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//CorrelationSubscription.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//CorrelationSubscription.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//CorrelationSubscription.correlationKeyRef -> EReference : correlationKeyRef
	if (s.correlationKeyRef.getEReference() != null) t.addNewReference("correlationKeyRef".clearKeyWord(), s.correlationKeyRef.getEReference());
	//CorrelationSubscription.correlationPropertyBinding -> EReference : correlationPropertyBinding
	if (s.correlationPropertyBinding.getEReference() != null) t.addNewReference("correlationPropertyBinding".clearKeyWord(), s.correlationPropertyBinding.getEReference());
}

@lazy
rule CorrelationPropertyBinding
	transform s : DSL!CorrelationPropertyBinding //bpmn2.CorrelationPropertyBinding
	to t : SysMLine!PartUsage
	extends Base{
	//CorrelationPropertyBinding.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//CorrelationPropertyBinding.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//CorrelationPropertyBinding.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//CorrelationPropertyBinding.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//CorrelationPropertyBinding.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//CorrelationPropertyBinding.dataPath -> EReference : dataPath
	if (s.dataPath.getEReference() != null) t.addNewReference("dataPath".clearKeyWord(), s.dataPath.getEReference());
	//CorrelationPropertyBinding.correlationPropertyRef -> EReference : correlationPropertyRef
	if (s.correlationPropertyRef.getEReference() != null) t.addNewReference("correlationPropertyRef".clearKeyWord(), s.correlationPropertyRef.getEReference());
}

@lazy
rule GlobalManualTask
	transform s : DSL!GlobalManualTask //bpmn2.GlobalManualTask
	to t : SysMLine!PartUsage
	extends Base{
	//GlobalManualTask.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//GlobalManualTask.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//GlobalManualTask.name -> EAttribute : name
	if (s.name.getEAttribute() != null) t.addNewAttribute("name".clearKeyWord(), s.name.getEAttribute());
	//GlobalManualTask.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//GlobalManualTask.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//GlobalManualTask.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//GlobalManualTask.ioSpecification -> EReference : ioSpecification
	if (s.ioSpecification.getEReference() != null) t.addNewReference("ioSpecification".clearKeyWord(), s.ioSpecification.getEReference());
	//GlobalManualTask.supportedInterfaceRefs -> EReference : supportedInterfaceRefs
	if (s.supportedInterfaceRefs.getEReference() != null) t.addNewReference("supportedInterfaceRefs".clearKeyWord(), s.supportedInterfaceRefs.getEReference());
	//GlobalManualTask.ioBinding -> EReference : ioBinding
	if (s.ioBinding.getEReference() != null) t.addNewReference("ioBinding".clearKeyWord(), s.ioBinding.getEReference());
	//GlobalManualTask.resources -> EReference : resources
	if (s.resources.getEReference() != null) t.addNewReference("resources".clearKeyWord(), s.resources.getEReference());
}

@lazy
rule ManualTask
	transform s : DSL!ManualTask //bpmn2.ManualTask
	to t : SysMLine!PartUsage
	extends Base{
	//ManualTask.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//ManualTask.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//ManualTask.name -> EAttribute : name
	if (s.name.getEAttribute() != null) t.addNewAttribute("name".clearKeyWord(), s.name.getEAttribute());
	//ManualTask.isForCompensation -> EAttribute : isForCompensation
	if (s.isForCompensation.getEAttribute() != null) t.addNewAttribute("isForCompensation".clearKeyWord(), s.isForCompensation.getEAttribute());
	//ManualTask.startQuantity -> EAttribute : startQuantity
	if (s.startQuantity.getEAttribute() != null) t.addNewAttribute("startQuantity".clearKeyWord(), s.startQuantity.getEAttribute());
	//ManualTask.completionQuantity -> EAttribute : completionQuantity
	if (s.completionQuantity.getEAttribute() != null) t.addNewAttribute("completionQuantity".clearKeyWord(), s.completionQuantity.getEAttribute());
	//ManualTask.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//ManualTask.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//ManualTask.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//ManualTask.auditing -> EReference : auditing
	if (s.auditing.getEReference() != null) t.addNewReference("auditing".clearKeyWord(), s.auditing.getEReference());
	//ManualTask.monitoring -> EReference : monitoring
	if (s.monitoring.getEReference() != null) t.addNewReference("monitoring".clearKeyWord(), s.monitoring.getEReference());
	//ManualTask.categoryValueRef -> EReference : categoryValueRef
	if (s.categoryValueRef.getEReference() != null) t.addNewReference("categoryValueRef".clearKeyWord(), s.categoryValueRef.getEReference());
	//ManualTask.outgoing -> EReference : outgoing
	if (s.outgoing.getEReference() != null) t.addNewReference("outgoing".clearKeyWord(), s.outgoing.getEReference());
	//ManualTask.incoming -> EReference : incoming
	if (s.incoming.getEReference() != null) t.addNewReference("incoming".clearKeyWord(), s.incoming.getEReference());
	//ManualTask.lanes -> EReference : lanes
	if (s.lanes.getEReference() != null) t.addNewReference("lanes".clearKeyWord(), s.lanes.getEReference());
	//ManualTask.incomingConversationLinks -> EReference : incomingConversationLinks
	if (s.incomingConversationLinks.getEReference() != null) t.addNewReference("incomingConversationLinks".clearKeyWord(), s.incomingConversationLinks.getEReference());
	//ManualTask.outgoingConversationLinks -> EReference : outgoingConversationLinks
	if (s.outgoingConversationLinks.getEReference() != null) t.addNewReference("outgoingConversationLinks".clearKeyWord(), s.outgoingConversationLinks.getEReference());
	//ManualTask.loopCharacteristics -> EReference : loopCharacteristics
	if (s.loopCharacteristics.getEReference() != null) t.addNewReference("loopCharacteristics".clearKeyWord(), s.loopCharacteristics.getEReference());
	//ManualTask.resources -> EReference : resources
	if (s.resources.getEReference() != null) t.addNewReference("resources".clearKeyWord(), s.resources.getEReference());
	//ManualTask.default -> EReference : default_
	if (s.`default`.getEReference() != null) t.addNewReference("default".clearKeyWord(), s.`default`.getEReference());
	//ManualTask.properties -> EReference : properties
	if (s.properties.getEReference() != null) t.addNewReference("properties".clearKeyWord(), s.properties.getEReference());
	//ManualTask.ioSpecification -> EReference : ioSpecification
	if (s.ioSpecification.getEReference() != null) t.addNewReference("ioSpecification".clearKeyWord(), s.ioSpecification.getEReference());
	//ManualTask.boundaryEventRefs -> EReference : boundaryEventRefs
	if (s.boundaryEventRefs.getEReference() != null) t.addNewReference("boundaryEventRefs".clearKeyWord(), s.boundaryEventRefs.getEReference());
	//ManualTask.dataInputAssociations -> EReference : dataInputAssociations
	if (s.dataInputAssociations.getEReference() != null) t.addNewReference("dataInputAssociations".clearKeyWord(), s.dataInputAssociations.getEReference());
	//ManualTask.dataOutputAssociations -> EReference : dataOutputAssociations
	if (s.dataOutputAssociations.getEReference() != null) t.addNewReference("dataOutputAssociations".clearKeyWord(), s.dataOutputAssociations.getEReference());
}

@lazy
rule Task
	transform s : DSL!Task //bpmn2.Task
	to t : SysMLine!PartUsage
	extends Base{
	//Task.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//Task.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//Task.name -> EAttribute : name
	if (s.name.getEAttribute() != null) t.addNewAttribute("name".clearKeyWord(), s.name.getEAttribute());
	//Task.isForCompensation -> EAttribute : isForCompensation
	if (s.isForCompensation.getEAttribute() != null) t.addNewAttribute("isForCompensation".clearKeyWord(), s.isForCompensation.getEAttribute());
	//Task.startQuantity -> EAttribute : startQuantity
	if (s.startQuantity.getEAttribute() != null) t.addNewAttribute("startQuantity".clearKeyWord(), s.startQuantity.getEAttribute());
	//Task.completionQuantity -> EAttribute : completionQuantity
	if (s.completionQuantity.getEAttribute() != null) t.addNewAttribute("completionQuantity".clearKeyWord(), s.completionQuantity.getEAttribute());
	//Task.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//Task.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//Task.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//Task.auditing -> EReference : auditing
	if (s.auditing.getEReference() != null) t.addNewReference("auditing".clearKeyWord(), s.auditing.getEReference());
	//Task.monitoring -> EReference : monitoring
	if (s.monitoring.getEReference() != null) t.addNewReference("monitoring".clearKeyWord(), s.monitoring.getEReference());
	//Task.categoryValueRef -> EReference : categoryValueRef
	if (s.categoryValueRef.getEReference() != null) t.addNewReference("categoryValueRef".clearKeyWord(), s.categoryValueRef.getEReference());
	//Task.outgoing -> EReference : outgoing
	if (s.outgoing.getEReference() != null) t.addNewReference("outgoing".clearKeyWord(), s.outgoing.getEReference());
	//Task.incoming -> EReference : incoming
	if (s.incoming.getEReference() != null) t.addNewReference("incoming".clearKeyWord(), s.incoming.getEReference());
	//Task.lanes -> EReference : lanes
	if (s.lanes.getEReference() != null) t.addNewReference("lanes".clearKeyWord(), s.lanes.getEReference());
	//Task.incomingConversationLinks -> EReference : incomingConversationLinks
	if (s.incomingConversationLinks.getEReference() != null) t.addNewReference("incomingConversationLinks".clearKeyWord(), s.incomingConversationLinks.getEReference());
	//Task.outgoingConversationLinks -> EReference : outgoingConversationLinks
	if (s.outgoingConversationLinks.getEReference() != null) t.addNewReference("outgoingConversationLinks".clearKeyWord(), s.outgoingConversationLinks.getEReference());
	//Task.loopCharacteristics -> EReference : loopCharacteristics
	if (s.loopCharacteristics.getEReference() != null) t.addNewReference("loopCharacteristics".clearKeyWord(), s.loopCharacteristics.getEReference());
	//Task.resources -> EReference : resources
	if (s.resources.getEReference() != null) t.addNewReference("resources".clearKeyWord(), s.resources.getEReference());
	//Task.default -> EReference : default_
	if (s.`default`.getEReference() != null) t.addNewReference("default".clearKeyWord(), s.`default`.getEReference());
	//Task.properties -> EReference : properties
	if (s.properties.getEReference() != null) t.addNewReference("properties".clearKeyWord(), s.properties.getEReference());
	//Task.ioSpecification -> EReference : ioSpecification
	if (s.ioSpecification.getEReference() != null) t.addNewReference("ioSpecification".clearKeyWord(), s.ioSpecification.getEReference());
	//Task.boundaryEventRefs -> EReference : boundaryEventRefs
	if (s.boundaryEventRefs.getEReference() != null) t.addNewReference("boundaryEventRefs".clearKeyWord(), s.boundaryEventRefs.getEReference());
	//Task.dataInputAssociations -> EReference : dataInputAssociations
	if (s.dataInputAssociations.getEReference() != null) t.addNewReference("dataInputAssociations".clearKeyWord(), s.dataInputAssociations.getEReference());
	//Task.dataOutputAssociations -> EReference : dataOutputAssociations
	if (s.dataOutputAssociations.getEReference() != null) t.addNewReference("dataOutputAssociations".clearKeyWord(), s.dataOutputAssociations.getEReference());
}

@lazy
rule Activity
	transform s : DSL!Activity //bpmn2.Activity
	to t : SysMLine!PartUsage
	extends Base{
	//Activity.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//Activity.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//Activity.name -> EAttribute : name
	if (s.name.getEAttribute() != null) t.addNewAttribute("name".clearKeyWord(), s.name.getEAttribute());
	//Activity.isForCompensation -> EAttribute : isForCompensation
	if (s.isForCompensation.getEAttribute() != null) t.addNewAttribute("isForCompensation".clearKeyWord(), s.isForCompensation.getEAttribute());
	//Activity.startQuantity -> EAttribute : startQuantity
	if (s.startQuantity.getEAttribute() != null) t.addNewAttribute("startQuantity".clearKeyWord(), s.startQuantity.getEAttribute());
	//Activity.completionQuantity -> EAttribute : completionQuantity
	if (s.completionQuantity.getEAttribute() != null) t.addNewAttribute("completionQuantity".clearKeyWord(), s.completionQuantity.getEAttribute());
	//Activity.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//Activity.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//Activity.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//Activity.auditing -> EReference : auditing
	if (s.auditing.getEReference() != null) t.addNewReference("auditing".clearKeyWord(), s.auditing.getEReference());
	//Activity.monitoring -> EReference : monitoring
	if (s.monitoring.getEReference() != null) t.addNewReference("monitoring".clearKeyWord(), s.monitoring.getEReference());
	//Activity.categoryValueRef -> EReference : categoryValueRef
	if (s.categoryValueRef.getEReference() != null) t.addNewReference("categoryValueRef".clearKeyWord(), s.categoryValueRef.getEReference());
	//Activity.outgoing -> EReference : outgoing
	if (s.outgoing.getEReference() != null) t.addNewReference("outgoing".clearKeyWord(), s.outgoing.getEReference());
	//Activity.incoming -> EReference : incoming
	if (s.incoming.getEReference() != null) t.addNewReference("incoming".clearKeyWord(), s.incoming.getEReference());
	//Activity.lanes -> EReference : lanes
	if (s.lanes.getEReference() != null) t.addNewReference("lanes".clearKeyWord(), s.lanes.getEReference());
	//Activity.incomingConversationLinks -> EReference : incomingConversationLinks
	if (s.incomingConversationLinks.getEReference() != null) t.addNewReference("incomingConversationLinks".clearKeyWord(), s.incomingConversationLinks.getEReference());
	//Activity.outgoingConversationLinks -> EReference : outgoingConversationLinks
	if (s.outgoingConversationLinks.getEReference() != null) t.addNewReference("outgoingConversationLinks".clearKeyWord(), s.outgoingConversationLinks.getEReference());
	//Activity.loopCharacteristics -> EReference : loopCharacteristics
	if (s.loopCharacteristics.getEReference() != null) t.addNewReference("loopCharacteristics".clearKeyWord(), s.loopCharacteristics.getEReference());
	//Activity.resources -> EReference : resources
	if (s.resources.getEReference() != null) t.addNewReference("resources".clearKeyWord(), s.resources.getEReference());
	//Activity.default -> EReference : default_
	if (s.`default`.getEReference() != null) t.addNewReference("default".clearKeyWord(), s.`default`.getEReference());
	//Activity.properties -> EReference : properties
	if (s.properties.getEReference() != null) t.addNewReference("properties".clearKeyWord(), s.properties.getEReference());
	//Activity.ioSpecification -> EReference : ioSpecification
	if (s.ioSpecification.getEReference() != null) t.addNewReference("ioSpecification".clearKeyWord(), s.ioSpecification.getEReference());
	//Activity.boundaryEventRefs -> EReference : boundaryEventRefs
	if (s.boundaryEventRefs.getEReference() != null) t.addNewReference("boundaryEventRefs".clearKeyWord(), s.boundaryEventRefs.getEReference());
	//Activity.dataInputAssociations -> EReference : dataInputAssociations
	if (s.dataInputAssociations.getEReference() != null) t.addNewReference("dataInputAssociations".clearKeyWord(), s.dataInputAssociations.getEReference());
	//Activity.dataOutputAssociations -> EReference : dataOutputAssociations
	if (s.dataOutputAssociations.getEReference() != null) t.addNewReference("dataOutputAssociations".clearKeyWord(), s.dataOutputAssociations.getEReference());
}

@lazy
rule LoopCharacteristics
	transform s : DSL!LoopCharacteristics //bpmn2.LoopCharacteristics
	to t : SysMLine!PartUsage
	extends Base{
	//LoopCharacteristics.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//LoopCharacteristics.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//LoopCharacteristics.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//LoopCharacteristics.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//LoopCharacteristics.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
}

@lazy
rule BoundaryEvent
	transform s : DSL!BoundaryEvent //bpmn2.BoundaryEvent
	to t : SysMLine!PartUsage
	extends Base{
	//BoundaryEvent.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//BoundaryEvent.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//BoundaryEvent.name -> EAttribute : name
	if (s.name.getEAttribute() != null) t.addNewAttribute("name".clearKeyWord(), s.name.getEAttribute());
	//BoundaryEvent.parallelMultiple -> EAttribute : parallelMultiple
	if (s.parallelMultiple.getEAttribute() != null) t.addNewAttribute("parallelMultiple".clearKeyWord(), s.parallelMultiple.getEAttribute());
	//BoundaryEvent.cancelActivity -> EAttribute : cancelActivity
	if (s.cancelActivity.getEAttribute() != null) t.addNewAttribute("cancelActivity".clearKeyWord(), s.cancelActivity.getEAttribute());
	//BoundaryEvent.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//BoundaryEvent.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//BoundaryEvent.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//BoundaryEvent.auditing -> EReference : auditing
	if (s.auditing.getEReference() != null) t.addNewReference("auditing".clearKeyWord(), s.auditing.getEReference());
	//BoundaryEvent.monitoring -> EReference : monitoring
	if (s.monitoring.getEReference() != null) t.addNewReference("monitoring".clearKeyWord(), s.monitoring.getEReference());
	//BoundaryEvent.categoryValueRef -> EReference : categoryValueRef
	if (s.categoryValueRef.getEReference() != null) t.addNewReference("categoryValueRef".clearKeyWord(), s.categoryValueRef.getEReference());
	//BoundaryEvent.outgoing -> EReference : outgoing
	if (s.outgoing.getEReference() != null) t.addNewReference("outgoing".clearKeyWord(), s.outgoing.getEReference());
	//BoundaryEvent.incoming -> EReference : incoming
	if (s.incoming.getEReference() != null) t.addNewReference("incoming".clearKeyWord(), s.incoming.getEReference());
	//BoundaryEvent.lanes -> EReference : lanes
	if (s.lanes.getEReference() != null) t.addNewReference("lanes".clearKeyWord(), s.lanes.getEReference());
	//BoundaryEvent.incomingConversationLinks -> EReference : incomingConversationLinks
	if (s.incomingConversationLinks.getEReference() != null) t.addNewReference("incomingConversationLinks".clearKeyWord(), s.incomingConversationLinks.getEReference());
	//BoundaryEvent.outgoingConversationLinks -> EReference : outgoingConversationLinks
	if (s.outgoingConversationLinks.getEReference() != null) t.addNewReference("outgoingConversationLinks".clearKeyWord(), s.outgoingConversationLinks.getEReference());
	//BoundaryEvent.properties -> EReference : properties
	if (s.properties.getEReference() != null) t.addNewReference("properties".clearKeyWord(), s.properties.getEReference());
	//BoundaryEvent.outputSet -> EReference : outputSet
	if (s.outputSet.getEReference() != null) t.addNewReference("outputSet".clearKeyWord(), s.outputSet.getEReference());
	//BoundaryEvent.eventDefinitionRefs -> EReference : eventDefinitionRefs
	if (s.eventDefinitionRefs.getEReference() != null) t.addNewReference("eventDefinitionRefs".clearKeyWord(), s.eventDefinitionRefs.getEReference());
	//BoundaryEvent.dataOutputAssociation -> EReference : dataOutputAssociation
	if (s.dataOutputAssociation.getEReference() != null) t.addNewReference("dataOutputAssociation".clearKeyWord(), s.dataOutputAssociation.getEReference());
	//BoundaryEvent.dataOutputs -> EReference : dataOutputs
	if (s.dataOutputs.getEReference() != null) t.addNewReference("dataOutputs".clearKeyWord(), s.dataOutputs.getEReference());
	//BoundaryEvent.eventDefinitions -> EReference : eventDefinitions
	if (s.eventDefinitions.getEReference() != null) t.addNewReference("eventDefinitions".clearKeyWord(), s.eventDefinitions.getEReference());
	//BoundaryEvent.attachedToRef -> EReference : attachedToRef
	if (s.attachedToRef.getEReference() != null) t.addNewReference("attachedToRef".clearKeyWord(), s.attachedToRef.getEReference());
}

@lazy
rule CatchEvent
	transform s : DSL!CatchEvent //bpmn2.CatchEvent
	to t : SysMLine!PartUsage
	extends Base{
	//CatchEvent.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//CatchEvent.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//CatchEvent.name -> EAttribute : name
	if (s.name.getEAttribute() != null) t.addNewAttribute("name".clearKeyWord(), s.name.getEAttribute());
	//CatchEvent.parallelMultiple -> EAttribute : parallelMultiple
	if (s.parallelMultiple.getEAttribute() != null) t.addNewAttribute("parallelMultiple".clearKeyWord(), s.parallelMultiple.getEAttribute());
	//CatchEvent.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//CatchEvent.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//CatchEvent.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//CatchEvent.auditing -> EReference : auditing
	if (s.auditing.getEReference() != null) t.addNewReference("auditing".clearKeyWord(), s.auditing.getEReference());
	//CatchEvent.monitoring -> EReference : monitoring
	if (s.monitoring.getEReference() != null) t.addNewReference("monitoring".clearKeyWord(), s.monitoring.getEReference());
	//CatchEvent.categoryValueRef -> EReference : categoryValueRef
	if (s.categoryValueRef.getEReference() != null) t.addNewReference("categoryValueRef".clearKeyWord(), s.categoryValueRef.getEReference());
	//CatchEvent.outgoing -> EReference : outgoing
	if (s.outgoing.getEReference() != null) t.addNewReference("outgoing".clearKeyWord(), s.outgoing.getEReference());
	//CatchEvent.incoming -> EReference : incoming
	if (s.incoming.getEReference() != null) t.addNewReference("incoming".clearKeyWord(), s.incoming.getEReference());
	//CatchEvent.lanes -> EReference : lanes
	if (s.lanes.getEReference() != null) t.addNewReference("lanes".clearKeyWord(), s.lanes.getEReference());
	//CatchEvent.incomingConversationLinks -> EReference : incomingConversationLinks
	if (s.incomingConversationLinks.getEReference() != null) t.addNewReference("incomingConversationLinks".clearKeyWord(), s.incomingConversationLinks.getEReference());
	//CatchEvent.outgoingConversationLinks -> EReference : outgoingConversationLinks
	if (s.outgoingConversationLinks.getEReference() != null) t.addNewReference("outgoingConversationLinks".clearKeyWord(), s.outgoingConversationLinks.getEReference());
	//CatchEvent.properties -> EReference : properties
	if (s.properties.getEReference() != null) t.addNewReference("properties".clearKeyWord(), s.properties.getEReference());
	//CatchEvent.outputSet -> EReference : outputSet
	if (s.outputSet.getEReference() != null) t.addNewReference("outputSet".clearKeyWord(), s.outputSet.getEReference());
	//CatchEvent.eventDefinitionRefs -> EReference : eventDefinitionRefs
	if (s.eventDefinitionRefs.getEReference() != null) t.addNewReference("eventDefinitionRefs".clearKeyWord(), s.eventDefinitionRefs.getEReference());
	//CatchEvent.dataOutputAssociation -> EReference : dataOutputAssociation
	if (s.dataOutputAssociation.getEReference() != null) t.addNewReference("dataOutputAssociation".clearKeyWord(), s.dataOutputAssociation.getEReference());
	//CatchEvent.dataOutputs -> EReference : dataOutputs
	if (s.dataOutputs.getEReference() != null) t.addNewReference("dataOutputs".clearKeyWord(), s.dataOutputs.getEReference());
	//CatchEvent.eventDefinitions -> EReference : eventDefinitions
	if (s.eventDefinitions.getEReference() != null) t.addNewReference("eventDefinitions".clearKeyWord(), s.eventDefinitions.getEReference());
}

@lazy
rule Event
	transform s : DSL!Event //bpmn2.Event
	to t : SysMLine!PartUsage
	extends Base{
	//Event.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//Event.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//Event.name -> EAttribute : name
	if (s.name.getEAttribute() != null) t.addNewAttribute("name".clearKeyWord(), s.name.getEAttribute());
	//Event.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//Event.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//Event.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//Event.auditing -> EReference : auditing
	if (s.auditing.getEReference() != null) t.addNewReference("auditing".clearKeyWord(), s.auditing.getEReference());
	//Event.monitoring -> EReference : monitoring
	if (s.monitoring.getEReference() != null) t.addNewReference("monitoring".clearKeyWord(), s.monitoring.getEReference());
	//Event.categoryValueRef -> EReference : categoryValueRef
	if (s.categoryValueRef.getEReference() != null) t.addNewReference("categoryValueRef".clearKeyWord(), s.categoryValueRef.getEReference());
	//Event.outgoing -> EReference : outgoing
	if (s.outgoing.getEReference() != null) t.addNewReference("outgoing".clearKeyWord(), s.outgoing.getEReference());
	//Event.incoming -> EReference : incoming
	if (s.incoming.getEReference() != null) t.addNewReference("incoming".clearKeyWord(), s.incoming.getEReference());
	//Event.lanes -> EReference : lanes
	if (s.lanes.getEReference() != null) t.addNewReference("lanes".clearKeyWord(), s.lanes.getEReference());
	//Event.incomingConversationLinks -> EReference : incomingConversationLinks
	if (s.incomingConversationLinks.getEReference() != null) t.addNewReference("incomingConversationLinks".clearKeyWord(), s.incomingConversationLinks.getEReference());
	//Event.outgoingConversationLinks -> EReference : outgoingConversationLinks
	if (s.outgoingConversationLinks.getEReference() != null) t.addNewReference("outgoingConversationLinks".clearKeyWord(), s.outgoingConversationLinks.getEReference());
	//Event.properties -> EReference : properties
	if (s.properties.getEReference() != null) t.addNewReference("properties".clearKeyWord(), s.properties.getEReference());
}

@lazy
rule EventDefinition
	transform s : DSL!EventDefinition //bpmn2.EventDefinition
	to t : SysMLine!PartUsage
	extends Base{
	//EventDefinition.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//EventDefinition.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//EventDefinition.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//EventDefinition.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//EventDefinition.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
}

@lazy
rule DataOutputAssociation
	transform s : DSL!DataOutputAssociation //bpmn2.DataOutputAssociation
	to t : SysMLine!PartUsage
	extends Base{
	//DataOutputAssociation.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//DataOutputAssociation.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//DataOutputAssociation.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//DataOutputAssociation.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//DataOutputAssociation.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//DataOutputAssociation.transformation -> EReference : transformation
	if (s.transformation.getEReference() != null) t.addNewReference("transformation".clearKeyWord(), s.transformation.getEReference());
	//DataOutputAssociation.assignment -> EReference : assignment
	if (s.assignment.getEReference() != null) t.addNewReference("assignment".clearKeyWord(), s.assignment.getEReference());
	//DataOutputAssociation.targetRef -> EReference : targetRef
	if (s.targetRef.getEReference() != null) t.addNewReference("targetRef".clearKeyWord(), s.targetRef.getEReference());
	//DataOutputAssociation.sourceRef -> EReference : sourceRef
	if (s.sourceRef.getEReference() != null) t.addNewReference("sourceRef".clearKeyWord(), s.sourceRef.getEReference());
}

@lazy
rule DataAssociation
	transform s : DSL!DataAssociation //bpmn2.DataAssociation
	to t : SysMLine!PartUsage
	extends Base{
	//DataAssociation.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//DataAssociation.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//DataAssociation.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//DataAssociation.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//DataAssociation.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//DataAssociation.transformation -> EReference : transformation
	if (s.transformation.getEReference() != null) t.addNewReference("transformation".clearKeyWord(), s.transformation.getEReference());
	//DataAssociation.assignment -> EReference : assignment
	if (s.assignment.getEReference() != null) t.addNewReference("assignment".clearKeyWord(), s.assignment.getEReference());
	//DataAssociation.targetRef -> EReference : targetRef
	if (s.targetRef.getEReference() != null) t.addNewReference("targetRef".clearKeyWord(), s.targetRef.getEReference());
	//DataAssociation.sourceRef -> EReference : sourceRef
	if (s.sourceRef.getEReference() != null) t.addNewReference("sourceRef".clearKeyWord(), s.sourceRef.getEReference());
}

@lazy
rule Assignment
	transform s : DSL!Assignment //bpmn2.Assignment
	to t : SysMLine!PartUsage
	extends Base{
	//Assignment.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//Assignment.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//Assignment.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//Assignment.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//Assignment.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//Assignment.from -> EReference : from_
	if (s.`from`.getEReference() != null) t.addNewReference("from".clearKeyWord(), s.`from`.getEReference());
	//Assignment.to -> EReference : to_
	if (s.`to`.getEReference() != null) t.addNewReference("to".clearKeyWord(), s.`to`.getEReference());
}

@lazy
rule DataInputAssociation
	transform s : DSL!DataInputAssociation //bpmn2.DataInputAssociation
	to t : SysMLine!PartUsage
	extends Base{
	//DataInputAssociation.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//DataInputAssociation.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//DataInputAssociation.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//DataInputAssociation.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//DataInputAssociation.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//DataInputAssociation.transformation -> EReference : transformation
	if (s.transformation.getEReference() != null) t.addNewReference("transformation".clearKeyWord(), s.transformation.getEReference());
	//DataInputAssociation.assignment -> EReference : assignment
	if (s.assignment.getEReference() != null) t.addNewReference("assignment".clearKeyWord(), s.assignment.getEReference());
	//DataInputAssociation.targetRef -> EReference : targetRef
	if (s.targetRef.getEReference() != null) t.addNewReference("targetRef".clearKeyWord(), s.targetRef.getEReference());
	//DataInputAssociation.sourceRef -> EReference : sourceRef
	if (s.sourceRef.getEReference() != null) t.addNewReference("sourceRef".clearKeyWord(), s.sourceRef.getEReference());
}

@lazy
rule UserTask
	transform s : DSL!UserTask //bpmn2.UserTask
	to t : SysMLine!PartUsage
	extends Base{
	//UserTask.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//UserTask.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//UserTask.name -> EAttribute : name
	if (s.name.getEAttribute() != null) t.addNewAttribute("name".clearKeyWord(), s.name.getEAttribute());
	//UserTask.isForCompensation -> EAttribute : isForCompensation
	if (s.isForCompensation.getEAttribute() != null) t.addNewAttribute("isForCompensation".clearKeyWord(), s.isForCompensation.getEAttribute());
	//UserTask.startQuantity -> EAttribute : startQuantity
	if (s.startQuantity.getEAttribute() != null) t.addNewAttribute("startQuantity".clearKeyWord(), s.startQuantity.getEAttribute());
	//UserTask.completionQuantity -> EAttribute : completionQuantity
	if (s.completionQuantity.getEAttribute() != null) t.addNewAttribute("completionQuantity".clearKeyWord(), s.completionQuantity.getEAttribute());
	//UserTask.implementation -> EAttribute : implementation
	if (s.implementation.getEAttribute() != null) t.addNewAttribute("implementation".clearKeyWord(), s.implementation.getEAttribute());
	//UserTask.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//UserTask.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//UserTask.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//UserTask.auditing -> EReference : auditing
	if (s.auditing.getEReference() != null) t.addNewReference("auditing".clearKeyWord(), s.auditing.getEReference());
	//UserTask.monitoring -> EReference : monitoring
	if (s.monitoring.getEReference() != null) t.addNewReference("monitoring".clearKeyWord(), s.monitoring.getEReference());
	//UserTask.categoryValueRef -> EReference : categoryValueRef
	if (s.categoryValueRef.getEReference() != null) t.addNewReference("categoryValueRef".clearKeyWord(), s.categoryValueRef.getEReference());
	//UserTask.outgoing -> EReference : outgoing
	if (s.outgoing.getEReference() != null) t.addNewReference("outgoing".clearKeyWord(), s.outgoing.getEReference());
	//UserTask.incoming -> EReference : incoming
	if (s.incoming.getEReference() != null) t.addNewReference("incoming".clearKeyWord(), s.incoming.getEReference());
	//UserTask.lanes -> EReference : lanes
	if (s.lanes.getEReference() != null) t.addNewReference("lanes".clearKeyWord(), s.lanes.getEReference());
	//UserTask.incomingConversationLinks -> EReference : incomingConversationLinks
	if (s.incomingConversationLinks.getEReference() != null) t.addNewReference("incomingConversationLinks".clearKeyWord(), s.incomingConversationLinks.getEReference());
	//UserTask.outgoingConversationLinks -> EReference : outgoingConversationLinks
	if (s.outgoingConversationLinks.getEReference() != null) t.addNewReference("outgoingConversationLinks".clearKeyWord(), s.outgoingConversationLinks.getEReference());
	//UserTask.loopCharacteristics -> EReference : loopCharacteristics
	if (s.loopCharacteristics.getEReference() != null) t.addNewReference("loopCharacteristics".clearKeyWord(), s.loopCharacteristics.getEReference());
	//UserTask.resources -> EReference : resources
	if (s.resources.getEReference() != null) t.addNewReference("resources".clearKeyWord(), s.resources.getEReference());
	//UserTask.default -> EReference : default_
	if (s.`default`.getEReference() != null) t.addNewReference("default".clearKeyWord(), s.`default`.getEReference());
	//UserTask.properties -> EReference : properties
	if (s.properties.getEReference() != null) t.addNewReference("properties".clearKeyWord(), s.properties.getEReference());
	//UserTask.ioSpecification -> EReference : ioSpecification
	if (s.ioSpecification.getEReference() != null) t.addNewReference("ioSpecification".clearKeyWord(), s.ioSpecification.getEReference());
	//UserTask.boundaryEventRefs -> EReference : boundaryEventRefs
	if (s.boundaryEventRefs.getEReference() != null) t.addNewReference("boundaryEventRefs".clearKeyWord(), s.boundaryEventRefs.getEReference());
	//UserTask.dataInputAssociations -> EReference : dataInputAssociations
	if (s.dataInputAssociations.getEReference() != null) t.addNewReference("dataInputAssociations".clearKeyWord(), s.dataInputAssociations.getEReference());
	//UserTask.dataOutputAssociations -> EReference : dataOutputAssociations
	if (s.dataOutputAssociations.getEReference() != null) t.addNewReference("dataOutputAssociations".clearKeyWord(), s.dataOutputAssociations.getEReference());
	//UserTask.renderings -> EReference : renderings
	if (s.renderings.getEReference() != null) t.addNewReference("renderings".clearKeyWord(), s.renderings.getEReference());
}

@lazy
rule Rendering
	transform s : DSL!Rendering //bpmn2.Rendering
	to t : SysMLine!PartUsage
	extends Base{
	//Rendering.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//Rendering.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//Rendering.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//Rendering.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//Rendering.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
}

@lazy
rule HumanPerformer
	transform s : DSL!HumanPerformer //bpmn2.HumanPerformer
	to t : SysMLine!PartUsage
	extends Base{
	//HumanPerformer.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//HumanPerformer.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//HumanPerformer.name -> EAttribute : name
	if (s.name.getEAttribute() != null) t.addNewAttribute("name".clearKeyWord(), s.name.getEAttribute());
	//HumanPerformer.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//HumanPerformer.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//HumanPerformer.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//HumanPerformer.resourceRef -> EReference : resourceRef
	if (s.resourceRef.getEReference() != null) t.addNewReference("resourceRef".clearKeyWord(), s.resourceRef.getEReference());
	//HumanPerformer.resourceParameterBindings -> EReference : resourceParameterBindings
	if (s.resourceParameterBindings.getEReference() != null) t.addNewReference("resourceParameterBindings".clearKeyWord(), s.resourceParameterBindings.getEReference());
	//HumanPerformer.resourceAssignmentExpression -> EReference : resourceAssignmentExpression
	if (s.resourceAssignmentExpression.getEReference() != null) t.addNewReference("resourceAssignmentExpression".clearKeyWord(), s.resourceAssignmentExpression.getEReference());
}

@lazy
rule PotentialOwner
	transform s : DSL!PotentialOwner //bpmn2.PotentialOwner
	to t : SysMLine!PartUsage
	extends Base{
	//PotentialOwner.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//PotentialOwner.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//PotentialOwner.name -> EAttribute : name
	if (s.name.getEAttribute() != null) t.addNewAttribute("name".clearKeyWord(), s.name.getEAttribute());
	//PotentialOwner.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//PotentialOwner.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//PotentialOwner.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//PotentialOwner.resourceRef -> EReference : resourceRef
	if (s.resourceRef.getEReference() != null) t.addNewReference("resourceRef".clearKeyWord(), s.resourceRef.getEReference());
	//PotentialOwner.resourceParameterBindings -> EReference : resourceParameterBindings
	if (s.resourceParameterBindings.getEReference() != null) t.addNewReference("resourceParameterBindings".clearKeyWord(), s.resourceParameterBindings.getEReference());
	//PotentialOwner.resourceAssignmentExpression -> EReference : resourceAssignmentExpression
	if (s.resourceAssignmentExpression.getEReference() != null) t.addNewReference("resourceAssignmentExpression".clearKeyWord(), s.resourceAssignmentExpression.getEReference());
}

@lazy
rule GlobalUserTask
	transform s : DSL!GlobalUserTask //bpmn2.GlobalUserTask
	to t : SysMLine!PartUsage
	extends Base{
	//GlobalUserTask.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//GlobalUserTask.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//GlobalUserTask.name -> EAttribute : name
	if (s.name.getEAttribute() != null) t.addNewAttribute("name".clearKeyWord(), s.name.getEAttribute());
	//GlobalUserTask.implementation -> EAttribute : implementation
	if (s.implementation.getEAttribute() != null) t.addNewAttribute("implementation".clearKeyWord(), s.implementation.getEAttribute());
	//GlobalUserTask.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//GlobalUserTask.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//GlobalUserTask.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//GlobalUserTask.ioSpecification -> EReference : ioSpecification
	if (s.ioSpecification.getEReference() != null) t.addNewReference("ioSpecification".clearKeyWord(), s.ioSpecification.getEReference());
	//GlobalUserTask.supportedInterfaceRefs -> EReference : supportedInterfaceRefs
	if (s.supportedInterfaceRefs.getEReference() != null) t.addNewReference("supportedInterfaceRefs".clearKeyWord(), s.supportedInterfaceRefs.getEReference());
	//GlobalUserTask.ioBinding -> EReference : ioBinding
	if (s.ioBinding.getEReference() != null) t.addNewReference("ioBinding".clearKeyWord(), s.ioBinding.getEReference());
	//GlobalUserTask.resources -> EReference : resources
	if (s.resources.getEReference() != null) t.addNewReference("resources".clearKeyWord(), s.resources.getEReference());
	//GlobalUserTask.renderings -> EReference : renderings
	if (s.renderings.getEReference() != null) t.addNewReference("renderings".clearKeyWord(), s.renderings.getEReference());
}

@lazy
rule Gateway
	transform s : DSL!Gateway //bpmn2.Gateway
	to t : SysMLine!PartUsage
	extends Base{
	//Gateway.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//Gateway.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//Gateway.name -> EAttribute : name
	if (s.name.getEAttribute() != null) t.addNewAttribute("name".clearKeyWord(), s.name.getEAttribute());
	//Gateway.gatewayDirection -> EnumerationUsage : gatewayDirection
	if (s.gatewayDirection.getEEnumLiteral() != null) t.addNewEnumLiteral("gatewayDirection".clearKeyWord(), s.gatewayDirection.getEEnumLiteral());
	//Gateway.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//Gateway.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//Gateway.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//Gateway.auditing -> EReference : auditing
	if (s.auditing.getEReference() != null) t.addNewReference("auditing".clearKeyWord(), s.auditing.getEReference());
	//Gateway.monitoring -> EReference : monitoring
	if (s.monitoring.getEReference() != null) t.addNewReference("monitoring".clearKeyWord(), s.monitoring.getEReference());
	//Gateway.categoryValueRef -> EReference : categoryValueRef
	if (s.categoryValueRef.getEReference() != null) t.addNewReference("categoryValueRef".clearKeyWord(), s.categoryValueRef.getEReference());
	//Gateway.outgoing -> EReference : outgoing
	if (s.outgoing.getEReference() != null) t.addNewReference("outgoing".clearKeyWord(), s.outgoing.getEReference());
	//Gateway.incoming -> EReference : incoming
	if (s.incoming.getEReference() != null) t.addNewReference("incoming".clearKeyWord(), s.incoming.getEReference());
	//Gateway.lanes -> EReference : lanes
	if (s.lanes.getEReference() != null) t.addNewReference("lanes".clearKeyWord(), s.lanes.getEReference());
}

@lazy
rule EventBasedGateway
	transform s : DSL!EventBasedGateway //bpmn2.EventBasedGateway
	to t : SysMLine!PartUsage
	extends Base{
	//EventBasedGateway.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//EventBasedGateway.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//EventBasedGateway.name -> EAttribute : name
	if (s.name.getEAttribute() != null) t.addNewAttribute("name".clearKeyWord(), s.name.getEAttribute());
	//EventBasedGateway.gatewayDirection -> EnumerationUsage : gatewayDirection
	if (s.gatewayDirection.getEEnumLiteral() != null) t.addNewEnumLiteral("gatewayDirection".clearKeyWord(), s.gatewayDirection.getEEnumLiteral());
	//EventBasedGateway.instantiate -> EAttribute : instantiate
	if (s.instantiate.getEAttribute() != null) t.addNewAttribute("instantiate".clearKeyWord(), s.instantiate.getEAttribute());
	//EventBasedGateway.eventGatewayType -> EnumerationUsage : eventGatewayType
	if (s.eventGatewayType.getEEnumLiteral() != null) t.addNewEnumLiteral("eventGatewayType".clearKeyWord(), s.eventGatewayType.getEEnumLiteral());
	//EventBasedGateway.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//EventBasedGateway.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//EventBasedGateway.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//EventBasedGateway.auditing -> EReference : auditing
	if (s.auditing.getEReference() != null) t.addNewReference("auditing".clearKeyWord(), s.auditing.getEReference());
	//EventBasedGateway.monitoring -> EReference : monitoring
	if (s.monitoring.getEReference() != null) t.addNewReference("monitoring".clearKeyWord(), s.monitoring.getEReference());
	//EventBasedGateway.categoryValueRef -> EReference : categoryValueRef
	if (s.categoryValueRef.getEReference() != null) t.addNewReference("categoryValueRef".clearKeyWord(), s.categoryValueRef.getEReference());
	//EventBasedGateway.outgoing -> EReference : outgoing
	if (s.outgoing.getEReference() != null) t.addNewReference("outgoing".clearKeyWord(), s.outgoing.getEReference());
	//EventBasedGateway.incoming -> EReference : incoming
	if (s.incoming.getEReference() != null) t.addNewReference("incoming".clearKeyWord(), s.incoming.getEReference());
	//EventBasedGateway.lanes -> EReference : lanes
	if (s.lanes.getEReference() != null) t.addNewReference("lanes".clearKeyWord(), s.lanes.getEReference());
}

@lazy
rule ComplexGateway
	transform s : DSL!ComplexGateway //bpmn2.ComplexGateway
	to t : SysMLine!PartUsage
	extends Base{
	//ComplexGateway.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//ComplexGateway.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//ComplexGateway.name -> EAttribute : name
	if (s.name.getEAttribute() != null) t.addNewAttribute("name".clearKeyWord(), s.name.getEAttribute());
	//ComplexGateway.gatewayDirection -> EnumerationUsage : gatewayDirection
	if (s.gatewayDirection.getEEnumLiteral() != null) t.addNewEnumLiteral("gatewayDirection".clearKeyWord(), s.gatewayDirection.getEEnumLiteral());
	//ComplexGateway.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//ComplexGateway.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//ComplexGateway.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//ComplexGateway.auditing -> EReference : auditing
	if (s.auditing.getEReference() != null) t.addNewReference("auditing".clearKeyWord(), s.auditing.getEReference());
	//ComplexGateway.monitoring -> EReference : monitoring
	if (s.monitoring.getEReference() != null) t.addNewReference("monitoring".clearKeyWord(), s.monitoring.getEReference());
	//ComplexGateway.categoryValueRef -> EReference : categoryValueRef
	if (s.categoryValueRef.getEReference() != null) t.addNewReference("categoryValueRef".clearKeyWord(), s.categoryValueRef.getEReference());
	//ComplexGateway.outgoing -> EReference : outgoing
	if (s.outgoing.getEReference() != null) t.addNewReference("outgoing".clearKeyWord(), s.outgoing.getEReference());
	//ComplexGateway.incoming -> EReference : incoming
	if (s.incoming.getEReference() != null) t.addNewReference("incoming".clearKeyWord(), s.incoming.getEReference());
	//ComplexGateway.lanes -> EReference : lanes
	if (s.lanes.getEReference() != null) t.addNewReference("lanes".clearKeyWord(), s.lanes.getEReference());
	//ComplexGateway.activationCondition -> EReference : activationCondition
	if (s.activationCondition.getEReference() != null) t.addNewReference("activationCondition".clearKeyWord(), s.activationCondition.getEReference());
	//ComplexGateway.default -> EReference : default_
	if (s.`default`.getEReference() != null) t.addNewReference("default".clearKeyWord(), s.`default`.getEReference());
}

@lazy
rule ExclusiveGateway
	transform s : DSL!ExclusiveGateway //bpmn2.ExclusiveGateway
	to t : SysMLine!PartUsage
	extends Base{
	//ExclusiveGateway.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//ExclusiveGateway.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//ExclusiveGateway.name -> EAttribute : name
	if (s.name.getEAttribute() != null) t.addNewAttribute("name".clearKeyWord(), s.name.getEAttribute());
	//ExclusiveGateway.gatewayDirection -> EnumerationUsage : gatewayDirection
	if (s.gatewayDirection.getEEnumLiteral() != null) t.addNewEnumLiteral("gatewayDirection".clearKeyWord(), s.gatewayDirection.getEEnumLiteral());
	//ExclusiveGateway.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//ExclusiveGateway.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//ExclusiveGateway.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//ExclusiveGateway.auditing -> EReference : auditing
	if (s.auditing.getEReference() != null) t.addNewReference("auditing".clearKeyWord(), s.auditing.getEReference());
	//ExclusiveGateway.monitoring -> EReference : monitoring
	if (s.monitoring.getEReference() != null) t.addNewReference("monitoring".clearKeyWord(), s.monitoring.getEReference());
	//ExclusiveGateway.categoryValueRef -> EReference : categoryValueRef
	if (s.categoryValueRef.getEReference() != null) t.addNewReference("categoryValueRef".clearKeyWord(), s.categoryValueRef.getEReference());
	//ExclusiveGateway.outgoing -> EReference : outgoing
	if (s.outgoing.getEReference() != null) t.addNewReference("outgoing".clearKeyWord(), s.outgoing.getEReference());
	//ExclusiveGateway.incoming -> EReference : incoming
	if (s.incoming.getEReference() != null) t.addNewReference("incoming".clearKeyWord(), s.incoming.getEReference());
	//ExclusiveGateway.lanes -> EReference : lanes
	if (s.lanes.getEReference() != null) t.addNewReference("lanes".clearKeyWord(), s.lanes.getEReference());
	//ExclusiveGateway.default -> EReference : default_
	if (s.`default`.getEReference() != null) t.addNewReference("default".clearKeyWord(), s.`default`.getEReference());
}

@lazy
rule InclusiveGateway
	transform s : DSL!InclusiveGateway //bpmn2.InclusiveGateway
	to t : SysMLine!PartUsage
	extends Base{
	//InclusiveGateway.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//InclusiveGateway.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//InclusiveGateway.name -> EAttribute : name
	if (s.name.getEAttribute() != null) t.addNewAttribute("name".clearKeyWord(), s.name.getEAttribute());
	//InclusiveGateway.gatewayDirection -> EnumerationUsage : gatewayDirection
	if (s.gatewayDirection.getEEnumLiteral() != null) t.addNewEnumLiteral("gatewayDirection".clearKeyWord(), s.gatewayDirection.getEEnumLiteral());
	//InclusiveGateway.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//InclusiveGateway.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//InclusiveGateway.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//InclusiveGateway.auditing -> EReference : auditing
	if (s.auditing.getEReference() != null) t.addNewReference("auditing".clearKeyWord(), s.auditing.getEReference());
	//InclusiveGateway.monitoring -> EReference : monitoring
	if (s.monitoring.getEReference() != null) t.addNewReference("monitoring".clearKeyWord(), s.monitoring.getEReference());
	//InclusiveGateway.categoryValueRef -> EReference : categoryValueRef
	if (s.categoryValueRef.getEReference() != null) t.addNewReference("categoryValueRef".clearKeyWord(), s.categoryValueRef.getEReference());
	//InclusiveGateway.outgoing -> EReference : outgoing
	if (s.outgoing.getEReference() != null) t.addNewReference("outgoing".clearKeyWord(), s.outgoing.getEReference());
	//InclusiveGateway.incoming -> EReference : incoming
	if (s.incoming.getEReference() != null) t.addNewReference("incoming".clearKeyWord(), s.incoming.getEReference());
	//InclusiveGateway.lanes -> EReference : lanes
	if (s.lanes.getEReference() != null) t.addNewReference("lanes".clearKeyWord(), s.lanes.getEReference());
	//InclusiveGateway.default -> EReference : default_
	if (s.`default`.getEReference() != null) t.addNewReference("default".clearKeyWord(), s.`default`.getEReference());
}

@lazy
rule ParallelGateway
	transform s : DSL!ParallelGateway //bpmn2.ParallelGateway
	to t : SysMLine!PartUsage
	extends Base{
	//ParallelGateway.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//ParallelGateway.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//ParallelGateway.name -> EAttribute : name
	if (s.name.getEAttribute() != null) t.addNewAttribute("name".clearKeyWord(), s.name.getEAttribute());
	//ParallelGateway.gatewayDirection -> EnumerationUsage : gatewayDirection
	if (s.gatewayDirection.getEEnumLiteral() != null) t.addNewEnumLiteral("gatewayDirection".clearKeyWord(), s.gatewayDirection.getEEnumLiteral());
	//ParallelGateway.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//ParallelGateway.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//ParallelGateway.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//ParallelGateway.auditing -> EReference : auditing
	if (s.auditing.getEReference() != null) t.addNewReference("auditing".clearKeyWord(), s.auditing.getEReference());
	//ParallelGateway.monitoring -> EReference : monitoring
	if (s.monitoring.getEReference() != null) t.addNewReference("monitoring".clearKeyWord(), s.monitoring.getEReference());
	//ParallelGateway.categoryValueRef -> EReference : categoryValueRef
	if (s.categoryValueRef.getEReference() != null) t.addNewReference("categoryValueRef".clearKeyWord(), s.categoryValueRef.getEReference());
	//ParallelGateway.outgoing -> EReference : outgoing
	if (s.outgoing.getEReference() != null) t.addNewReference("outgoing".clearKeyWord(), s.outgoing.getEReference());
	//ParallelGateway.incoming -> EReference : incoming
	if (s.incoming.getEReference() != null) t.addNewReference("incoming".clearKeyWord(), s.incoming.getEReference());
	//ParallelGateway.lanes -> EReference : lanes
	if (s.lanes.getEReference() != null) t.addNewReference("lanes".clearKeyWord(), s.lanes.getEReference());
}

@lazy
rule Relationship
	transform s : DSL!Relationship //bpmn2.Relationship
	to t : SysMLine!PartUsage
	extends Base{
	//Relationship.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//Relationship.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//Relationship.type -> EAttribute : type
	if (s.type.getEAttribute() != null) t.addNewAttribute("type".clearKeyWord(), s.type.getEAttribute());
	//Relationship.direction -> EnumerationUsage : direction
	if (s.direction.getEEnumLiteral() != null) t.addNewEnumLiteral("direction".clearKeyWord(), s.direction.getEEnumLiteral());
	//Relationship.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//Relationship.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//Relationship.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//Relationship.sources -> EReference : sources
	if (s.sources.getEReference() != null) t.addNewReference("sources".clearKeyWord(), s.sources.getEReference());
	//Relationship.targets -> EReference : targets
	if (s.targets.getEReference() != null) t.addNewReference("targets".clearKeyWord(), s.targets.getEReference());
}

@lazy
rule Extension
	transform s : DSL!Extension //bpmn2.Extension
	to t : SysMLine!PartUsage
	extends Base{
	//Extension.mustUnderstand -> EAttribute : mustUnderstand
	if (s.mustUnderstand.getEAttribute() != null) t.addNewAttribute("mustUnderstand".clearKeyWord(), s.mustUnderstand.getEAttribute());
	//Extension.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//Extension.definition -> EReference : definition
	if (s.definition.getEReference() != null) t.addNewReference("definition".clearKeyWord(), s.definition.getEReference());
}

@lazy
rule IntermediateCatchEvent
	transform s : DSL!IntermediateCatchEvent //bpmn2.IntermediateCatchEvent
	to t : SysMLine!PartUsage
	extends Base{
	//IntermediateCatchEvent.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//IntermediateCatchEvent.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//IntermediateCatchEvent.name -> EAttribute : name
	if (s.name.getEAttribute() != null) t.addNewAttribute("name".clearKeyWord(), s.name.getEAttribute());
	//IntermediateCatchEvent.parallelMultiple -> EAttribute : parallelMultiple
	if (s.parallelMultiple.getEAttribute() != null) t.addNewAttribute("parallelMultiple".clearKeyWord(), s.parallelMultiple.getEAttribute());
	//IntermediateCatchEvent.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//IntermediateCatchEvent.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//IntermediateCatchEvent.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//IntermediateCatchEvent.auditing -> EReference : auditing
	if (s.auditing.getEReference() != null) t.addNewReference("auditing".clearKeyWord(), s.auditing.getEReference());
	//IntermediateCatchEvent.monitoring -> EReference : monitoring
	if (s.monitoring.getEReference() != null) t.addNewReference("monitoring".clearKeyWord(), s.monitoring.getEReference());
	//IntermediateCatchEvent.categoryValueRef -> EReference : categoryValueRef
	if (s.categoryValueRef.getEReference() != null) t.addNewReference("categoryValueRef".clearKeyWord(), s.categoryValueRef.getEReference());
	//IntermediateCatchEvent.outgoing -> EReference : outgoing
	if (s.outgoing.getEReference() != null) t.addNewReference("outgoing".clearKeyWord(), s.outgoing.getEReference());
	//IntermediateCatchEvent.incoming -> EReference : incoming
	if (s.incoming.getEReference() != null) t.addNewReference("incoming".clearKeyWord(), s.incoming.getEReference());
	//IntermediateCatchEvent.lanes -> EReference : lanes
	if (s.lanes.getEReference() != null) t.addNewReference("lanes".clearKeyWord(), s.lanes.getEReference());
	//IntermediateCatchEvent.incomingConversationLinks -> EReference : incomingConversationLinks
	if (s.incomingConversationLinks.getEReference() != null) t.addNewReference("incomingConversationLinks".clearKeyWord(), s.incomingConversationLinks.getEReference());
	//IntermediateCatchEvent.outgoingConversationLinks -> EReference : outgoingConversationLinks
	if (s.outgoingConversationLinks.getEReference() != null) t.addNewReference("outgoingConversationLinks".clearKeyWord(), s.outgoingConversationLinks.getEReference());
	//IntermediateCatchEvent.properties -> EReference : properties
	if (s.properties.getEReference() != null) t.addNewReference("properties".clearKeyWord(), s.properties.getEReference());
	//IntermediateCatchEvent.outputSet -> EReference : outputSet
	if (s.outputSet.getEReference() != null) t.addNewReference("outputSet".clearKeyWord(), s.outputSet.getEReference());
	//IntermediateCatchEvent.eventDefinitionRefs -> EReference : eventDefinitionRefs
	if (s.eventDefinitionRefs.getEReference() != null) t.addNewReference("eventDefinitionRefs".clearKeyWord(), s.eventDefinitionRefs.getEReference());
	//IntermediateCatchEvent.dataOutputAssociation -> EReference : dataOutputAssociation
	if (s.dataOutputAssociation.getEReference() != null) t.addNewReference("dataOutputAssociation".clearKeyWord(), s.dataOutputAssociation.getEReference());
	//IntermediateCatchEvent.dataOutputs -> EReference : dataOutputs
	if (s.dataOutputs.getEReference() != null) t.addNewReference("dataOutputs".clearKeyWord(), s.dataOutputs.getEReference());
	//IntermediateCatchEvent.eventDefinitions -> EReference : eventDefinitions
	if (s.eventDefinitions.getEReference() != null) t.addNewReference("eventDefinitions".clearKeyWord(), s.eventDefinitions.getEReference());
}

@lazy
rule IntermediateThrowEvent
	transform s : DSL!IntermediateThrowEvent //bpmn2.IntermediateThrowEvent
	to t : SysMLine!PartUsage
	extends Base{
	//IntermediateThrowEvent.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//IntermediateThrowEvent.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//IntermediateThrowEvent.name -> EAttribute : name
	if (s.name.getEAttribute() != null) t.addNewAttribute("name".clearKeyWord(), s.name.getEAttribute());
	//IntermediateThrowEvent.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//IntermediateThrowEvent.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//IntermediateThrowEvent.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//IntermediateThrowEvent.auditing -> EReference : auditing
	if (s.auditing.getEReference() != null) t.addNewReference("auditing".clearKeyWord(), s.auditing.getEReference());
	//IntermediateThrowEvent.monitoring -> EReference : monitoring
	if (s.monitoring.getEReference() != null) t.addNewReference("monitoring".clearKeyWord(), s.monitoring.getEReference());
	//IntermediateThrowEvent.categoryValueRef -> EReference : categoryValueRef
	if (s.categoryValueRef.getEReference() != null) t.addNewReference("categoryValueRef".clearKeyWord(), s.categoryValueRef.getEReference());
	//IntermediateThrowEvent.outgoing -> EReference : outgoing
	if (s.outgoing.getEReference() != null) t.addNewReference("outgoing".clearKeyWord(), s.outgoing.getEReference());
	//IntermediateThrowEvent.incoming -> EReference : incoming
	if (s.incoming.getEReference() != null) t.addNewReference("incoming".clearKeyWord(), s.incoming.getEReference());
	//IntermediateThrowEvent.lanes -> EReference : lanes
	if (s.lanes.getEReference() != null) t.addNewReference("lanes".clearKeyWord(), s.lanes.getEReference());
	//IntermediateThrowEvent.incomingConversationLinks -> EReference : incomingConversationLinks
	if (s.incomingConversationLinks.getEReference() != null) t.addNewReference("incomingConversationLinks".clearKeyWord(), s.incomingConversationLinks.getEReference());
	//IntermediateThrowEvent.outgoingConversationLinks -> EReference : outgoingConversationLinks
	if (s.outgoingConversationLinks.getEReference() != null) t.addNewReference("outgoingConversationLinks".clearKeyWord(), s.outgoingConversationLinks.getEReference());
	//IntermediateThrowEvent.properties -> EReference : properties
	if (s.properties.getEReference() != null) t.addNewReference("properties".clearKeyWord(), s.properties.getEReference());
	//IntermediateThrowEvent.inputSet -> EReference : inputSet
	if (s.inputSet.getEReference() != null) t.addNewReference("inputSet".clearKeyWord(), s.inputSet.getEReference());
	//IntermediateThrowEvent.eventDefinitionRefs -> EReference : eventDefinitionRefs
	if (s.eventDefinitionRefs.getEReference() != null) t.addNewReference("eventDefinitionRefs".clearKeyWord(), s.eventDefinitionRefs.getEReference());
	//IntermediateThrowEvent.dataInputAssociation -> EReference : dataInputAssociation
	if (s.dataInputAssociation.getEReference() != null) t.addNewReference("dataInputAssociation".clearKeyWord(), s.dataInputAssociation.getEReference());
	//IntermediateThrowEvent.dataInputs -> EReference : dataInputs
	if (s.dataInputs.getEReference() != null) t.addNewReference("dataInputs".clearKeyWord(), s.dataInputs.getEReference());
	//IntermediateThrowEvent.eventDefinitions -> EReference : eventDefinitions
	if (s.eventDefinitions.getEReference() != null) t.addNewReference("eventDefinitions".clearKeyWord(), s.eventDefinitions.getEReference());
}

@lazy
rule ThrowEvent
	transform s : DSL!ThrowEvent //bpmn2.ThrowEvent
	to t : SysMLine!PartUsage
	extends Base{
	//ThrowEvent.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//ThrowEvent.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//ThrowEvent.name -> EAttribute : name
	if (s.name.getEAttribute() != null) t.addNewAttribute("name".clearKeyWord(), s.name.getEAttribute());
	//ThrowEvent.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//ThrowEvent.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//ThrowEvent.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//ThrowEvent.auditing -> EReference : auditing
	if (s.auditing.getEReference() != null) t.addNewReference("auditing".clearKeyWord(), s.auditing.getEReference());
	//ThrowEvent.monitoring -> EReference : monitoring
	if (s.monitoring.getEReference() != null) t.addNewReference("monitoring".clearKeyWord(), s.monitoring.getEReference());
	//ThrowEvent.categoryValueRef -> EReference : categoryValueRef
	if (s.categoryValueRef.getEReference() != null) t.addNewReference("categoryValueRef".clearKeyWord(), s.categoryValueRef.getEReference());
	//ThrowEvent.outgoing -> EReference : outgoing
	if (s.outgoing.getEReference() != null) t.addNewReference("outgoing".clearKeyWord(), s.outgoing.getEReference());
	//ThrowEvent.incoming -> EReference : incoming
	if (s.incoming.getEReference() != null) t.addNewReference("incoming".clearKeyWord(), s.incoming.getEReference());
	//ThrowEvent.lanes -> EReference : lanes
	if (s.lanes.getEReference() != null) t.addNewReference("lanes".clearKeyWord(), s.lanes.getEReference());
	//ThrowEvent.incomingConversationLinks -> EReference : incomingConversationLinks
	if (s.incomingConversationLinks.getEReference() != null) t.addNewReference("incomingConversationLinks".clearKeyWord(), s.incomingConversationLinks.getEReference());
	//ThrowEvent.outgoingConversationLinks -> EReference : outgoingConversationLinks
	if (s.outgoingConversationLinks.getEReference() != null) t.addNewReference("outgoingConversationLinks".clearKeyWord(), s.outgoingConversationLinks.getEReference());
	//ThrowEvent.properties -> EReference : properties
	if (s.properties.getEReference() != null) t.addNewReference("properties".clearKeyWord(), s.properties.getEReference());
	//ThrowEvent.inputSet -> EReference : inputSet
	if (s.inputSet.getEReference() != null) t.addNewReference("inputSet".clearKeyWord(), s.inputSet.getEReference());
	//ThrowEvent.eventDefinitionRefs -> EReference : eventDefinitionRefs
	if (s.eventDefinitionRefs.getEReference() != null) t.addNewReference("eventDefinitionRefs".clearKeyWord(), s.eventDefinitionRefs.getEReference());
	//ThrowEvent.dataInputAssociation -> EReference : dataInputAssociation
	if (s.dataInputAssociation.getEReference() != null) t.addNewReference("dataInputAssociation".clearKeyWord(), s.dataInputAssociation.getEReference());
	//ThrowEvent.dataInputs -> EReference : dataInputs
	if (s.dataInputs.getEReference() != null) t.addNewReference("dataInputs".clearKeyWord(), s.dataInputs.getEReference());
	//ThrowEvent.eventDefinitions -> EReference : eventDefinitions
	if (s.eventDefinitions.getEReference() != null) t.addNewReference("eventDefinitions".clearKeyWord(), s.eventDefinitions.getEReference());
}

@lazy
rule EndEvent
	transform s : DSL!EndEvent //bpmn2.EndEvent
	to t : SysMLine!PartUsage
	extends Base{
	//EndEvent.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//EndEvent.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//EndEvent.name -> EAttribute : name
	if (s.name.getEAttribute() != null) t.addNewAttribute("name".clearKeyWord(), s.name.getEAttribute());
	//EndEvent.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//EndEvent.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//EndEvent.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//EndEvent.auditing -> EReference : auditing
	if (s.auditing.getEReference() != null) t.addNewReference("auditing".clearKeyWord(), s.auditing.getEReference());
	//EndEvent.monitoring -> EReference : monitoring
	if (s.monitoring.getEReference() != null) t.addNewReference("monitoring".clearKeyWord(), s.monitoring.getEReference());
	//EndEvent.categoryValueRef -> EReference : categoryValueRef
	if (s.categoryValueRef.getEReference() != null) t.addNewReference("categoryValueRef".clearKeyWord(), s.categoryValueRef.getEReference());
	//EndEvent.outgoing -> EReference : outgoing
	if (s.outgoing.getEReference() != null) t.addNewReference("outgoing".clearKeyWord(), s.outgoing.getEReference());
	//EndEvent.incoming -> EReference : incoming
	if (s.incoming.getEReference() != null) t.addNewReference("incoming".clearKeyWord(), s.incoming.getEReference());
	//EndEvent.lanes -> EReference : lanes
	if (s.lanes.getEReference() != null) t.addNewReference("lanes".clearKeyWord(), s.lanes.getEReference());
	//EndEvent.incomingConversationLinks -> EReference : incomingConversationLinks
	if (s.incomingConversationLinks.getEReference() != null) t.addNewReference("incomingConversationLinks".clearKeyWord(), s.incomingConversationLinks.getEReference());
	//EndEvent.outgoingConversationLinks -> EReference : outgoingConversationLinks
	if (s.outgoingConversationLinks.getEReference() != null) t.addNewReference("outgoingConversationLinks".clearKeyWord(), s.outgoingConversationLinks.getEReference());
	//EndEvent.properties -> EReference : properties
	if (s.properties.getEReference() != null) t.addNewReference("properties".clearKeyWord(), s.properties.getEReference());
	//EndEvent.inputSet -> EReference : inputSet
	if (s.inputSet.getEReference() != null) t.addNewReference("inputSet".clearKeyWord(), s.inputSet.getEReference());
	//EndEvent.eventDefinitionRefs -> EReference : eventDefinitionRefs
	if (s.eventDefinitionRefs.getEReference() != null) t.addNewReference("eventDefinitionRefs".clearKeyWord(), s.eventDefinitionRefs.getEReference());
	//EndEvent.dataInputAssociation -> EReference : dataInputAssociation
	if (s.dataInputAssociation.getEReference() != null) t.addNewReference("dataInputAssociation".clearKeyWord(), s.dataInputAssociation.getEReference());
	//EndEvent.dataInputs -> EReference : dataInputs
	if (s.dataInputs.getEReference() != null) t.addNewReference("dataInputs".clearKeyWord(), s.dataInputs.getEReference());
	//EndEvent.eventDefinitions -> EReference : eventDefinitions
	if (s.eventDefinitions.getEReference() != null) t.addNewReference("eventDefinitions".clearKeyWord(), s.eventDefinitions.getEReference());
}

@lazy
rule StartEvent
	transform s : DSL!StartEvent //bpmn2.StartEvent
	to t : SysMLine!PartUsage
	extends Base{
	//StartEvent.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//StartEvent.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//StartEvent.name -> EAttribute : name
	if (s.name.getEAttribute() != null) t.addNewAttribute("name".clearKeyWord(), s.name.getEAttribute());
	//StartEvent.parallelMultiple -> EAttribute : parallelMultiple
	if (s.parallelMultiple.getEAttribute() != null) t.addNewAttribute("parallelMultiple".clearKeyWord(), s.parallelMultiple.getEAttribute());
	//StartEvent.isInterrupting -> EAttribute : isInterrupting
	if (s.isInterrupting.getEAttribute() != null) t.addNewAttribute("isInterrupting".clearKeyWord(), s.isInterrupting.getEAttribute());
	//StartEvent.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//StartEvent.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//StartEvent.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//StartEvent.auditing -> EReference : auditing
	if (s.auditing.getEReference() != null) t.addNewReference("auditing".clearKeyWord(), s.auditing.getEReference());
	//StartEvent.monitoring -> EReference : monitoring
	if (s.monitoring.getEReference() != null) t.addNewReference("monitoring".clearKeyWord(), s.monitoring.getEReference());
	//StartEvent.categoryValueRef -> EReference : categoryValueRef
	if (s.categoryValueRef.getEReference() != null) t.addNewReference("categoryValueRef".clearKeyWord(), s.categoryValueRef.getEReference());
	//StartEvent.outgoing -> EReference : outgoing
	if (s.outgoing.getEReference() != null) t.addNewReference("outgoing".clearKeyWord(), s.outgoing.getEReference());
	//StartEvent.incoming -> EReference : incoming
	if (s.incoming.getEReference() != null) t.addNewReference("incoming".clearKeyWord(), s.incoming.getEReference());
	//StartEvent.lanes -> EReference : lanes
	if (s.lanes.getEReference() != null) t.addNewReference("lanes".clearKeyWord(), s.lanes.getEReference());
	//StartEvent.incomingConversationLinks -> EReference : incomingConversationLinks
	if (s.incomingConversationLinks.getEReference() != null) t.addNewReference("incomingConversationLinks".clearKeyWord(), s.incomingConversationLinks.getEReference());
	//StartEvent.outgoingConversationLinks -> EReference : outgoingConversationLinks
	if (s.outgoingConversationLinks.getEReference() != null) t.addNewReference("outgoingConversationLinks".clearKeyWord(), s.outgoingConversationLinks.getEReference());
	//StartEvent.properties -> EReference : properties
	if (s.properties.getEReference() != null) t.addNewReference("properties".clearKeyWord(), s.properties.getEReference());
	//StartEvent.outputSet -> EReference : outputSet
	if (s.outputSet.getEReference() != null) t.addNewReference("outputSet".clearKeyWord(), s.outputSet.getEReference());
	//StartEvent.eventDefinitionRefs -> EReference : eventDefinitionRefs
	if (s.eventDefinitionRefs.getEReference() != null) t.addNewReference("eventDefinitionRefs".clearKeyWord(), s.eventDefinitionRefs.getEReference());
	//StartEvent.dataOutputAssociation -> EReference : dataOutputAssociation
	if (s.dataOutputAssociation.getEReference() != null) t.addNewReference("dataOutputAssociation".clearKeyWord(), s.dataOutputAssociation.getEReference());
	//StartEvent.dataOutputs -> EReference : dataOutputs
	if (s.dataOutputs.getEReference() != null) t.addNewReference("dataOutputs".clearKeyWord(), s.dataOutputs.getEReference());
	//StartEvent.eventDefinitions -> EReference : eventDefinitions
	if (s.eventDefinitions.getEReference() != null) t.addNewReference("eventDefinitions".clearKeyWord(), s.eventDefinitions.getEReference());
}

@lazy
rule CancelEventDefinition
	transform s : DSL!CancelEventDefinition //bpmn2.CancelEventDefinition
	to t : SysMLine!PartUsage
	extends Base{
	//CancelEventDefinition.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//CancelEventDefinition.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//CancelEventDefinition.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//CancelEventDefinition.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//CancelEventDefinition.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
}

@lazy
rule ErrorEventDefinition
	transform s : DSL!ErrorEventDefinition //bpmn2.ErrorEventDefinition
	to t : SysMLine!PartUsage
	extends Base{
	//ErrorEventDefinition.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//ErrorEventDefinition.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//ErrorEventDefinition.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//ErrorEventDefinition.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//ErrorEventDefinition.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//ErrorEventDefinition.errorRef -> EReference : errorRef
	if (s.errorRef.getEReference() != null) t.addNewReference("errorRef".clearKeyWord(), s.errorRef.getEReference());
}

@lazy
rule TerminateEventDefinition
	transform s : DSL!TerminateEventDefinition //bpmn2.TerminateEventDefinition
	to t : SysMLine!PartUsage
	extends Base{
	//TerminateEventDefinition.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//TerminateEventDefinition.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//TerminateEventDefinition.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//TerminateEventDefinition.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//TerminateEventDefinition.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
}

@lazy
rule EscalationEventDefinition
	transform s : DSL!EscalationEventDefinition //bpmn2.EscalationEventDefinition
	to t : SysMLine!PartUsage
	extends Base{
	//EscalationEventDefinition.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//EscalationEventDefinition.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//EscalationEventDefinition.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//EscalationEventDefinition.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//EscalationEventDefinition.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//EscalationEventDefinition.escalationRef -> EReference : escalationRef
	if (s.escalationRef.getEReference() != null) t.addNewReference("escalationRef".clearKeyWord(), s.escalationRef.getEReference());
}

@lazy
rule Escalation
	transform s : DSL!Escalation //bpmn2.Escalation
	to t : SysMLine!PartUsage
	extends Base{
	//Escalation.name -> EAttribute : name
	if (s.name.getEAttribute() != null) t.addNewAttribute("name".clearKeyWord(), s.name.getEAttribute());
	//Escalation.escalationCode -> EAttribute : escalationCode
	if (s.escalationCode.getEAttribute() != null) t.addNewAttribute("escalationCode".clearKeyWord(), s.escalationCode.getEAttribute());
	//Escalation.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//Escalation.structureRef -> EReference : structureRef
	if (s.structureRef.getEReference() != null) t.addNewReference("structureRef".clearKeyWord(), s.structureRef.getEReference());
}

@lazy
rule CompensateEventDefinition
	transform s : DSL!CompensateEventDefinition //bpmn2.CompensateEventDefinition
	to t : SysMLine!PartUsage
	extends Base{
	//CompensateEventDefinition.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//CompensateEventDefinition.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//CompensateEventDefinition.waitForCompletion -> EAttribute : waitForCompletion
	if (s.waitForCompletion.getEAttribute() != null) t.addNewAttribute("waitForCompletion".clearKeyWord(), s.waitForCompletion.getEAttribute());
	//CompensateEventDefinition.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//CompensateEventDefinition.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//CompensateEventDefinition.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//CompensateEventDefinition.activityRef -> EReference : activityRef
	if (s.activityRef.getEReference() != null) t.addNewReference("activityRef".clearKeyWord(), s.activityRef.getEReference());
}

@lazy
rule TimerEventDefinition
	transform s : DSL!TimerEventDefinition //bpmn2.TimerEventDefinition
	to t : SysMLine!PartUsage
	extends Base{
	//TimerEventDefinition.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//TimerEventDefinition.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//TimerEventDefinition.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//TimerEventDefinition.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//TimerEventDefinition.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//TimerEventDefinition.timeDate -> EReference : timeDate
	if (s.timeDate.getEReference() != null) t.addNewReference("timeDate".clearKeyWord(), s.timeDate.getEReference());
	//TimerEventDefinition.timeCycle -> EReference : timeCycle
	if (s.timeCycle.getEReference() != null) t.addNewReference("timeCycle".clearKeyWord(), s.timeCycle.getEReference());
	//TimerEventDefinition.timeDuration -> EReference : timeDuration
	if (s.timeDuration.getEReference() != null) t.addNewReference("timeDuration".clearKeyWord(), s.timeDuration.getEReference());
}

@lazy
rule LinkEventDefinition
	transform s : DSL!LinkEventDefinition //bpmn2.LinkEventDefinition
	to t : SysMLine!PartUsage
	extends Base{
	//LinkEventDefinition.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//LinkEventDefinition.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//LinkEventDefinition.name -> EAttribute : name
	if (s.name.getEAttribute() != null) t.addNewAttribute("name".clearKeyWord(), s.name.getEAttribute());
	//LinkEventDefinition.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//LinkEventDefinition.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//LinkEventDefinition.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//LinkEventDefinition.target -> EReference : target
	if (s.target.getEReference() != null) t.addNewReference("target".clearKeyWord(), s.target.getEReference());
	//LinkEventDefinition.source -> EReference : source
	if (s.source.getEReference() != null) t.addNewReference("source".clearKeyWord(), s.source.getEReference());
}

@lazy
rule MessageEventDefinition
	transform s : DSL!MessageEventDefinition //bpmn2.MessageEventDefinition
	to t : SysMLine!PartUsage
	extends Base{
	//MessageEventDefinition.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//MessageEventDefinition.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//MessageEventDefinition.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//MessageEventDefinition.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//MessageEventDefinition.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//MessageEventDefinition.messageRef -> EReference : messageRef
	if (s.messageRef.getEReference() != null) t.addNewReference("messageRef".clearKeyWord(), s.messageRef.getEReference());
	//MessageEventDefinition.operationRef -> EReference : operationRef
	if (s.operationRef.getEReference() != null) t.addNewReference("operationRef".clearKeyWord(), s.operationRef.getEReference());
}

@lazy
rule ConditionalEventDefinition
	transform s : DSL!ConditionalEventDefinition //bpmn2.ConditionalEventDefinition
	to t : SysMLine!PartUsage
	extends Base{
	//ConditionalEventDefinition.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//ConditionalEventDefinition.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//ConditionalEventDefinition.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//ConditionalEventDefinition.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//ConditionalEventDefinition.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//ConditionalEventDefinition.condition -> EReference : condition
	if (s.condition.getEReference() != null) t.addNewReference("condition".clearKeyWord(), s.condition.getEReference());
}

@lazy
rule SignalEventDefinition
	transform s : DSL!SignalEventDefinition //bpmn2.SignalEventDefinition
	to t : SysMLine!PartUsage
	extends Base{
	//SignalEventDefinition.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//SignalEventDefinition.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//SignalEventDefinition.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//SignalEventDefinition.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//SignalEventDefinition.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//SignalEventDefinition.signalRef -> EReference : signalRef
	if (s.signalRef.getEReference() != null) t.addNewReference("signalRef".clearKeyWord(), s.signalRef.getEReference());
}

@lazy
rule Signal
	transform s : DSL!Signal //bpmn2.Signal
	to t : SysMLine!PartUsage
	extends Base{
	//Signal.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//Signal.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//Signal.name -> EAttribute : name
	if (s.name.getEAttribute() != null) t.addNewAttribute("name".clearKeyWord(), s.name.getEAttribute());
	//Signal.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//Signal.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//Signal.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//Signal.structureRef -> EReference : structureRef
	if (s.structureRef.getEReference() != null) t.addNewReference("structureRef".clearKeyWord(), s.structureRef.getEReference());
}

@lazy
rule ImplicitThrowEvent
	transform s : DSL!ImplicitThrowEvent //bpmn2.ImplicitThrowEvent
	to t : SysMLine!PartUsage
	extends Base{
	//ImplicitThrowEvent.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//ImplicitThrowEvent.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//ImplicitThrowEvent.name -> EAttribute : name
	if (s.name.getEAttribute() != null) t.addNewAttribute("name".clearKeyWord(), s.name.getEAttribute());
	//ImplicitThrowEvent.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//ImplicitThrowEvent.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//ImplicitThrowEvent.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//ImplicitThrowEvent.auditing -> EReference : auditing
	if (s.auditing.getEReference() != null) t.addNewReference("auditing".clearKeyWord(), s.auditing.getEReference());
	//ImplicitThrowEvent.monitoring -> EReference : monitoring
	if (s.monitoring.getEReference() != null) t.addNewReference("monitoring".clearKeyWord(), s.monitoring.getEReference());
	//ImplicitThrowEvent.categoryValueRef -> EReference : categoryValueRef
	if (s.categoryValueRef.getEReference() != null) t.addNewReference("categoryValueRef".clearKeyWord(), s.categoryValueRef.getEReference());
	//ImplicitThrowEvent.outgoing -> EReference : outgoing
	if (s.outgoing.getEReference() != null) t.addNewReference("outgoing".clearKeyWord(), s.outgoing.getEReference());
	//ImplicitThrowEvent.incoming -> EReference : incoming
	if (s.incoming.getEReference() != null) t.addNewReference("incoming".clearKeyWord(), s.incoming.getEReference());
	//ImplicitThrowEvent.lanes -> EReference : lanes
	if (s.lanes.getEReference() != null) t.addNewReference("lanes".clearKeyWord(), s.lanes.getEReference());
	//ImplicitThrowEvent.incomingConversationLinks -> EReference : incomingConversationLinks
	if (s.incomingConversationLinks.getEReference() != null) t.addNewReference("incomingConversationLinks".clearKeyWord(), s.incomingConversationLinks.getEReference());
	//ImplicitThrowEvent.outgoingConversationLinks -> EReference : outgoingConversationLinks
	if (s.outgoingConversationLinks.getEReference() != null) t.addNewReference("outgoingConversationLinks".clearKeyWord(), s.outgoingConversationLinks.getEReference());
	//ImplicitThrowEvent.properties -> EReference : properties
	if (s.properties.getEReference() != null) t.addNewReference("properties".clearKeyWord(), s.properties.getEReference());
	//ImplicitThrowEvent.inputSet -> EReference : inputSet
	if (s.inputSet.getEReference() != null) t.addNewReference("inputSet".clearKeyWord(), s.inputSet.getEReference());
	//ImplicitThrowEvent.eventDefinitionRefs -> EReference : eventDefinitionRefs
	if (s.eventDefinitionRefs.getEReference() != null) t.addNewReference("eventDefinitionRefs".clearKeyWord(), s.eventDefinitionRefs.getEReference());
	//ImplicitThrowEvent.dataInputAssociation -> EReference : dataInputAssociation
	if (s.dataInputAssociation.getEReference() != null) t.addNewReference("dataInputAssociation".clearKeyWord(), s.dataInputAssociation.getEReference());
	//ImplicitThrowEvent.dataInputs -> EReference : dataInputs
	if (s.dataInputs.getEReference() != null) t.addNewReference("dataInputs".clearKeyWord(), s.dataInputs.getEReference());
	//ImplicitThrowEvent.eventDefinitions -> EReference : eventDefinitions
	if (s.eventDefinitions.getEReference() != null) t.addNewReference("eventDefinitions".clearKeyWord(), s.eventDefinitions.getEReference());
}

@lazy
rule DataObject
	transform s : DSL!DataObject //bpmn2.DataObject
	to t : SysMLine!PartUsage
	extends Base{
	//DataObject.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//DataObject.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//DataObject.name -> EAttribute : name
	if (s.name.getEAttribute() != null) t.addNewAttribute("name".clearKeyWord(), s.name.getEAttribute());
	//DataObject.isCollection -> EAttribute : isCollection
	if (s.isCollection.getEAttribute() != null) t.addNewAttribute("isCollection".clearKeyWord(), s.isCollection.getEAttribute());
	//DataObject.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//DataObject.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//DataObject.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//DataObject.auditing -> EReference : auditing
	if (s.auditing.getEReference() != null) t.addNewReference("auditing".clearKeyWord(), s.auditing.getEReference());
	//DataObject.monitoring -> EReference : monitoring
	if (s.monitoring.getEReference() != null) t.addNewReference("monitoring".clearKeyWord(), s.monitoring.getEReference());
	//DataObject.categoryValueRef -> EReference : categoryValueRef
	if (s.categoryValueRef.getEReference() != null) t.addNewReference("categoryValueRef".clearKeyWord(), s.categoryValueRef.getEReference());
	//DataObject.itemSubjectRef -> EReference : itemSubjectRef
	if (s.itemSubjectRef.getEReference() != null) t.addNewReference("itemSubjectRef".clearKeyWord(), s.itemSubjectRef.getEReference());
	//DataObject.dataState -> EReference : dataState
	if (s.dataState.getEReference() != null) t.addNewReference("dataState".clearKeyWord(), s.dataState.getEReference());
}

@lazy
rule DataStore
	transform s : DSL!DataStore //bpmn2.DataStore
	to t : SysMLine!PartUsage
	extends Base{
	//DataStore.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//DataStore.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//DataStore.name -> EAttribute : name
	if (s.name.getEAttribute() != null) t.addNewAttribute("name".clearKeyWord(), s.name.getEAttribute());
	//DataStore.capacity -> EAttribute : capacity
	if (s.capacity.getEAttribute() != null) t.addNewAttribute("capacity".clearKeyWord(), s.capacity.getEAttribute());
	//DataStore.isUnlimited -> EAttribute : isUnlimited
	if (s.isUnlimited.getEAttribute() != null) t.addNewAttribute("isUnlimited".clearKeyWord(), s.isUnlimited.getEAttribute());
	//DataStore.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//DataStore.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//DataStore.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//DataStore.itemSubjectRef -> EReference : itemSubjectRef
	if (s.itemSubjectRef.getEReference() != null) t.addNewReference("itemSubjectRef".clearKeyWord(), s.itemSubjectRef.getEReference());
	//DataStore.dataState -> EReference : dataState
	if (s.dataState.getEReference() != null) t.addNewReference("dataState".clearKeyWord(), s.dataState.getEReference());
}

@lazy
rule DataStoreReference
	transform s : DSL!DataStoreReference //bpmn2.DataStoreReference
	to t : SysMLine!PartUsage
	extends Base{
	//DataStoreReference.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//DataStoreReference.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//DataStoreReference.name -> EAttribute : name
	if (s.name.getEAttribute() != null) t.addNewAttribute("name".clearKeyWord(), s.name.getEAttribute());
	//DataStoreReference.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//DataStoreReference.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//DataStoreReference.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//DataStoreReference.auditing -> EReference : auditing
	if (s.auditing.getEReference() != null) t.addNewReference("auditing".clearKeyWord(), s.auditing.getEReference());
	//DataStoreReference.monitoring -> EReference : monitoring
	if (s.monitoring.getEReference() != null) t.addNewReference("monitoring".clearKeyWord(), s.monitoring.getEReference());
	//DataStoreReference.categoryValueRef -> EReference : categoryValueRef
	if (s.categoryValueRef.getEReference() != null) t.addNewReference("categoryValueRef".clearKeyWord(), s.categoryValueRef.getEReference());
	//DataStoreReference.itemSubjectRef -> EReference : itemSubjectRef
	if (s.itemSubjectRef.getEReference() != null) t.addNewReference("itemSubjectRef".clearKeyWord(), s.itemSubjectRef.getEReference());
	//DataStoreReference.dataState -> EReference : dataState
	if (s.dataState.getEReference() != null) t.addNewReference("dataState".clearKeyWord(), s.dataState.getEReference());
	//DataStoreReference.dataStoreRef -> EReference : dataStoreRef
	if (s.dataStoreRef.getEReference() != null) t.addNewReference("dataStoreRef".clearKeyWord(), s.dataStoreRef.getEReference());
}

@lazy
rule DataObjectReference
	transform s : DSL!DataObjectReference //bpmn2.DataObjectReference
	to t : SysMLine!PartUsage
	extends Base{
	//DataObjectReference.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//DataObjectReference.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//DataObjectReference.name -> EAttribute : name
	if (s.name.getEAttribute() != null) t.addNewAttribute("name".clearKeyWord(), s.name.getEAttribute());
	//DataObjectReference.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//DataObjectReference.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//DataObjectReference.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//DataObjectReference.auditing -> EReference : auditing
	if (s.auditing.getEReference() != null) t.addNewReference("auditing".clearKeyWord(), s.auditing.getEReference());
	//DataObjectReference.monitoring -> EReference : monitoring
	if (s.monitoring.getEReference() != null) t.addNewReference("monitoring".clearKeyWord(), s.monitoring.getEReference());
	//DataObjectReference.categoryValueRef -> EReference : categoryValueRef
	if (s.categoryValueRef.getEReference() != null) t.addNewReference("categoryValueRef".clearKeyWord(), s.categoryValueRef.getEReference());
	//DataObjectReference.itemSubjectRef -> EReference : itemSubjectRef
	if (s.itemSubjectRef.getEReference() != null) t.addNewReference("itemSubjectRef".clearKeyWord(), s.itemSubjectRef.getEReference());
	//DataObjectReference.dataState -> EReference : dataState
	if (s.dataState.getEReference() != null) t.addNewReference("dataState".clearKeyWord(), s.dataState.getEReference());
	//DataObjectReference.dataObjectRef -> EReference : dataObjectRef
	if (s.dataObjectRef.getEReference() != null) t.addNewReference("dataObjectRef".clearKeyWord(), s.dataObjectRef.getEReference());
}

@lazy
rule CallConversation
	transform s : DSL!CallConversation //bpmn2.CallConversation
	to t : SysMLine!PartUsage
	extends Base{
	//CallConversation.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//CallConversation.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//CallConversation.name -> EAttribute : name
	if (s.name.getEAttribute() != null) t.addNewAttribute("name".clearKeyWord(), s.name.getEAttribute());
	//CallConversation.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//CallConversation.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//CallConversation.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//CallConversation.incomingConversationLinks -> EReference : incomingConversationLinks
	if (s.incomingConversationLinks.getEReference() != null) t.addNewReference("incomingConversationLinks".clearKeyWord(), s.incomingConversationLinks.getEReference());
	//CallConversation.outgoingConversationLinks -> EReference : outgoingConversationLinks
	if (s.outgoingConversationLinks.getEReference() != null) t.addNewReference("outgoingConversationLinks".clearKeyWord(), s.outgoingConversationLinks.getEReference());
	//CallConversation.participantRefs -> EReference : participantRefs
	if (s.participantRefs.getEReference() != null) t.addNewReference("participantRefs".clearKeyWord(), s.participantRefs.getEReference());
	//CallConversation.messageFlowRefs -> EReference : messageFlowRefs
	if (s.messageFlowRefs.getEReference() != null) t.addNewReference("messageFlowRefs".clearKeyWord(), s.messageFlowRefs.getEReference());
	//CallConversation.correlationKeys -> EReference : correlationKeys
	if (s.correlationKeys.getEReference() != null) t.addNewReference("correlationKeys".clearKeyWord(), s.correlationKeys.getEReference());
	//CallConversation.calledCollaborationRef -> EReference : calledCollaborationRef
	if (s.calledCollaborationRef.getEReference() != null) t.addNewReference("calledCollaborationRef".clearKeyWord(), s.calledCollaborationRef.getEReference());
	//CallConversation.participantAssociations -> EReference : participantAssociations
	if (s.participantAssociations.getEReference() != null) t.addNewReference("participantAssociations".clearKeyWord(), s.participantAssociations.getEReference());
}

@lazy
rule Conversation
	transform s : DSL!Conversation //bpmn2.Conversation
	to t : SysMLine!PartUsage
	extends Base{
	//Conversation.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//Conversation.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//Conversation.name -> EAttribute : name
	if (s.name.getEAttribute() != null) t.addNewAttribute("name".clearKeyWord(), s.name.getEAttribute());
	//Conversation.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//Conversation.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//Conversation.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//Conversation.incomingConversationLinks -> EReference : incomingConversationLinks
	if (s.incomingConversationLinks.getEReference() != null) t.addNewReference("incomingConversationLinks".clearKeyWord(), s.incomingConversationLinks.getEReference());
	//Conversation.outgoingConversationLinks -> EReference : outgoingConversationLinks
	if (s.outgoingConversationLinks.getEReference() != null) t.addNewReference("outgoingConversationLinks".clearKeyWord(), s.outgoingConversationLinks.getEReference());
	//Conversation.participantRefs -> EReference : participantRefs
	if (s.participantRefs.getEReference() != null) t.addNewReference("participantRefs".clearKeyWord(), s.participantRefs.getEReference());
	//Conversation.messageFlowRefs -> EReference : messageFlowRefs
	if (s.messageFlowRefs.getEReference() != null) t.addNewReference("messageFlowRefs".clearKeyWord(), s.messageFlowRefs.getEReference());
	//Conversation.correlationKeys -> EReference : correlationKeys
	if (s.correlationKeys.getEReference() != null) t.addNewReference("correlationKeys".clearKeyWord(), s.correlationKeys.getEReference());
}

@lazy
rule SubConversation
	transform s : DSL!SubConversation //bpmn2.SubConversation
	to t : SysMLine!PartUsage
	extends Base{
	//SubConversation.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//SubConversation.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//SubConversation.name -> EAttribute : name
	if (s.name.getEAttribute() != null) t.addNewAttribute("name".clearKeyWord(), s.name.getEAttribute());
	//SubConversation.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//SubConversation.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//SubConversation.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//SubConversation.incomingConversationLinks -> EReference : incomingConversationLinks
	if (s.incomingConversationLinks.getEReference() != null) t.addNewReference("incomingConversationLinks".clearKeyWord(), s.incomingConversationLinks.getEReference());
	//SubConversation.outgoingConversationLinks -> EReference : outgoingConversationLinks
	if (s.outgoingConversationLinks.getEReference() != null) t.addNewReference("outgoingConversationLinks".clearKeyWord(), s.outgoingConversationLinks.getEReference());
	//SubConversation.participantRefs -> EReference : participantRefs
	if (s.participantRefs.getEReference() != null) t.addNewReference("participantRefs".clearKeyWord(), s.participantRefs.getEReference());
	//SubConversation.messageFlowRefs -> EReference : messageFlowRefs
	if (s.messageFlowRefs.getEReference() != null) t.addNewReference("messageFlowRefs".clearKeyWord(), s.messageFlowRefs.getEReference());
	//SubConversation.correlationKeys -> EReference : correlationKeys
	if (s.correlationKeys.getEReference() != null) t.addNewReference("correlationKeys".clearKeyWord(), s.correlationKeys.getEReference());
	//SubConversation.conversationNodes -> EReference : conversationNodes
	if (s.conversationNodes.getEReference() != null) t.addNewReference("conversationNodes".clearKeyWord(), s.conversationNodes.getEReference());
}

@lazy
rule GlobalConversation
	transform s : DSL!GlobalConversation //bpmn2.GlobalConversation
	to t : SysMLine!PartUsage
	extends Base{
	//GlobalConversation.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//GlobalConversation.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//GlobalConversation.name -> EAttribute : name
	if (s.name.getEAttribute() != null) t.addNewAttribute("name".clearKeyWord(), s.name.getEAttribute());
	//GlobalConversation.isClosed -> EAttribute : isClosed
	if (s.isClosed.getEAttribute() != null) t.addNewAttribute("isClosed".clearKeyWord(), s.isClosed.getEAttribute());
	//GlobalConversation.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//GlobalConversation.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//GlobalConversation.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//GlobalConversation.choreographyRef -> EReference : choreographyRef
	if (s.choreographyRef.getEReference() != null) t.addNewReference("choreographyRef".clearKeyWord(), s.choreographyRef.getEReference());
	//GlobalConversation.artifacts -> EReference : artifacts
	if (s.artifacts.getEReference() != null) t.addNewReference("artifacts".clearKeyWord(), s.artifacts.getEReference());
	//GlobalConversation.participantAssociations -> EReference : participantAssociations
	if (s.participantAssociations.getEReference() != null) t.addNewReference("participantAssociations".clearKeyWord(), s.participantAssociations.getEReference());
	//GlobalConversation.messageFlowAssociations -> EReference : messageFlowAssociations
	if (s.messageFlowAssociations.getEReference() != null) t.addNewReference("messageFlowAssociations".clearKeyWord(), s.messageFlowAssociations.getEReference());
	//GlobalConversation.conversationAssociations -> EReference : conversationAssociations
	if (s.conversationAssociations.getEReference() != null) t.addNewReference("conversationAssociations".clearKeyWord(), s.conversationAssociations.getEReference());
	//GlobalConversation.participants -> EReference : participants
	if (s.participants.getEReference() != null) t.addNewReference("participants".clearKeyWord(), s.participants.getEReference());
	//GlobalConversation.messageFlows -> EReference : messageFlows
	if (s.messageFlows.getEReference() != null) t.addNewReference("messageFlows".clearKeyWord(), s.messageFlows.getEReference());
	//GlobalConversation.correlationKeys -> EReference : correlationKeys
	if (s.correlationKeys.getEReference() != null) t.addNewReference("correlationKeys".clearKeyWord(), s.correlationKeys.getEReference());
	//GlobalConversation.conversations -> EReference : conversations
	if (s.conversations.getEReference() != null) t.addNewReference("conversations".clearKeyWord(), s.conversations.getEReference());
	//GlobalConversation.conversationLinks -> EReference : conversationLinks
	if (s.conversationLinks.getEReference() != null) t.addNewReference("conversationLinks".clearKeyWord(), s.conversationLinks.getEReference());
}

@lazy
rule PartnerEntity
	transform s : DSL!PartnerEntity //bpmn2.PartnerEntity
	to t : SysMLine!PartUsage
	extends Base{
	//PartnerEntity.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//PartnerEntity.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//PartnerEntity.name -> EAttribute : name
	if (s.name.getEAttribute() != null) t.addNewAttribute("name".clearKeyWord(), s.name.getEAttribute());
	//PartnerEntity.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//PartnerEntity.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//PartnerEntity.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//PartnerEntity.participantRef -> EReference : participantRef
	if (s.participantRef.getEReference() != null) t.addNewReference("participantRef".clearKeyWord(), s.participantRef.getEReference());
}

@lazy
rule PartnerRole
	transform s : DSL!PartnerRole //bpmn2.PartnerRole
	to t : SysMLine!PartUsage
	extends Base{
	//PartnerRole.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//PartnerRole.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//PartnerRole.name -> EAttribute : name
	if (s.name.getEAttribute() != null) t.addNewAttribute("name".clearKeyWord(), s.name.getEAttribute());
	//PartnerRole.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//PartnerRole.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//PartnerRole.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//PartnerRole.participantRef -> EReference : participantRef
	if (s.participantRef.getEReference() != null) t.addNewReference("participantRef".clearKeyWord(), s.participantRef.getEReference());
}

@lazy
rule ChoreographyActivity
	transform s : DSL!ChoreographyActivity //bpmn2.ChoreographyActivity
	to t : SysMLine!PartUsage
	extends Base{
	//ChoreographyActivity.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//ChoreographyActivity.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//ChoreographyActivity.name -> EAttribute : name
	if (s.name.getEAttribute() != null) t.addNewAttribute("name".clearKeyWord(), s.name.getEAttribute());
	//ChoreographyActivity.loopType -> EnumerationUsage : loopType
	if (s.loopType.getEEnumLiteral() != null) t.addNewEnumLiteral("loopType".clearKeyWord(), s.loopType.getEEnumLiteral());
	//ChoreographyActivity.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//ChoreographyActivity.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//ChoreographyActivity.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//ChoreographyActivity.auditing -> EReference : auditing
	if (s.auditing.getEReference() != null) t.addNewReference("auditing".clearKeyWord(), s.auditing.getEReference());
	//ChoreographyActivity.monitoring -> EReference : monitoring
	if (s.monitoring.getEReference() != null) t.addNewReference("monitoring".clearKeyWord(), s.monitoring.getEReference());
	//ChoreographyActivity.categoryValueRef -> EReference : categoryValueRef
	if (s.categoryValueRef.getEReference() != null) t.addNewReference("categoryValueRef".clearKeyWord(), s.categoryValueRef.getEReference());
	//ChoreographyActivity.outgoing -> EReference : outgoing
	if (s.outgoing.getEReference() != null) t.addNewReference("outgoing".clearKeyWord(), s.outgoing.getEReference());
	//ChoreographyActivity.incoming -> EReference : incoming
	if (s.incoming.getEReference() != null) t.addNewReference("incoming".clearKeyWord(), s.incoming.getEReference());
	//ChoreographyActivity.lanes -> EReference : lanes
	if (s.lanes.getEReference() != null) t.addNewReference("lanes".clearKeyWord(), s.lanes.getEReference());
	//ChoreographyActivity.participantRefs -> EReference : participantRefs
	if (s.participantRefs.getEReference() != null) t.addNewReference("participantRefs".clearKeyWord(), s.participantRefs.getEReference());
	//ChoreographyActivity.initiatingParticipantRef -> EReference : initiatingParticipantRef
	if (s.initiatingParticipantRef.getEReference() != null) t.addNewReference("initiatingParticipantRef".clearKeyWord(), s.initiatingParticipantRef.getEReference());
	//ChoreographyActivity.correlationKeys -> EReference : correlationKeys
	if (s.correlationKeys.getEReference() != null) t.addNewReference("correlationKeys".clearKeyWord(), s.correlationKeys.getEReference());
}

@lazy
rule CallChoreography
	transform s : DSL!CallChoreography //bpmn2.CallChoreography
	to t : SysMLine!PartUsage
	extends Base{
	//CallChoreography.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//CallChoreography.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//CallChoreography.name -> EAttribute : name
	if (s.name.getEAttribute() != null) t.addNewAttribute("name".clearKeyWord(), s.name.getEAttribute());
	//CallChoreography.loopType -> EnumerationUsage : loopType
	if (s.loopType.getEEnumLiteral() != null) t.addNewEnumLiteral("loopType".clearKeyWord(), s.loopType.getEEnumLiteral());
	//CallChoreography.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//CallChoreography.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//CallChoreography.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//CallChoreography.auditing -> EReference : auditing
	if (s.auditing.getEReference() != null) t.addNewReference("auditing".clearKeyWord(), s.auditing.getEReference());
	//CallChoreography.monitoring -> EReference : monitoring
	if (s.monitoring.getEReference() != null) t.addNewReference("monitoring".clearKeyWord(), s.monitoring.getEReference());
	//CallChoreography.categoryValueRef -> EReference : categoryValueRef
	if (s.categoryValueRef.getEReference() != null) t.addNewReference("categoryValueRef".clearKeyWord(), s.categoryValueRef.getEReference());
	//CallChoreography.outgoing -> EReference : outgoing
	if (s.outgoing.getEReference() != null) t.addNewReference("outgoing".clearKeyWord(), s.outgoing.getEReference());
	//CallChoreography.incoming -> EReference : incoming
	if (s.incoming.getEReference() != null) t.addNewReference("incoming".clearKeyWord(), s.incoming.getEReference());
	//CallChoreography.lanes -> EReference : lanes
	if (s.lanes.getEReference() != null) t.addNewReference("lanes".clearKeyWord(), s.lanes.getEReference());
	//CallChoreography.participantRefs -> EReference : participantRefs
	if (s.participantRefs.getEReference() != null) t.addNewReference("participantRefs".clearKeyWord(), s.participantRefs.getEReference());
	//CallChoreography.initiatingParticipantRef -> EReference : initiatingParticipantRef
	if (s.initiatingParticipantRef.getEReference() != null) t.addNewReference("initiatingParticipantRef".clearKeyWord(), s.initiatingParticipantRef.getEReference());
	//CallChoreography.correlationKeys -> EReference : correlationKeys
	if (s.correlationKeys.getEReference() != null) t.addNewReference("correlationKeys".clearKeyWord(), s.correlationKeys.getEReference());
	//CallChoreography.calledChoreographyRef -> EReference : calledChoreographyRef
	if (s.calledChoreographyRef.getEReference() != null) t.addNewReference("calledChoreographyRef".clearKeyWord(), s.calledChoreographyRef.getEReference());
	//CallChoreography.participantAssociations -> EReference : participantAssociations
	if (s.participantAssociations.getEReference() != null) t.addNewReference("participantAssociations".clearKeyWord(), s.participantAssociations.getEReference());
}

@lazy
rule SubChoreography
	transform s : DSL!SubChoreography //bpmn2.SubChoreography
	to t : SysMLine!PartUsage
	extends Base{
	//SubChoreography.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//SubChoreography.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//SubChoreography.name -> EAttribute : name
	if (s.name.getEAttribute() != null) t.addNewAttribute("name".clearKeyWord(), s.name.getEAttribute());
	//SubChoreography.loopType -> EnumerationUsage : loopType
	if (s.loopType.getEEnumLiteral() != null) t.addNewEnumLiteral("loopType".clearKeyWord(), s.loopType.getEEnumLiteral());
	//SubChoreography.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//SubChoreography.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//SubChoreography.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//SubChoreography.auditing -> EReference : auditing
	if (s.auditing.getEReference() != null) t.addNewReference("auditing".clearKeyWord(), s.auditing.getEReference());
	//SubChoreography.monitoring -> EReference : monitoring
	if (s.monitoring.getEReference() != null) t.addNewReference("monitoring".clearKeyWord(), s.monitoring.getEReference());
	//SubChoreography.categoryValueRef -> EReference : categoryValueRef
	if (s.categoryValueRef.getEReference() != null) t.addNewReference("categoryValueRef".clearKeyWord(), s.categoryValueRef.getEReference());
	//SubChoreography.outgoing -> EReference : outgoing
	if (s.outgoing.getEReference() != null) t.addNewReference("outgoing".clearKeyWord(), s.outgoing.getEReference());
	//SubChoreography.incoming -> EReference : incoming
	if (s.incoming.getEReference() != null) t.addNewReference("incoming".clearKeyWord(), s.incoming.getEReference());
	//SubChoreography.lanes -> EReference : lanes
	if (s.lanes.getEReference() != null) t.addNewReference("lanes".clearKeyWord(), s.lanes.getEReference());
	//SubChoreography.participantRefs -> EReference : participantRefs
	if (s.participantRefs.getEReference() != null) t.addNewReference("participantRefs".clearKeyWord(), s.participantRefs.getEReference());
	//SubChoreography.initiatingParticipantRef -> EReference : initiatingParticipantRef
	if (s.initiatingParticipantRef.getEReference() != null) t.addNewReference("initiatingParticipantRef".clearKeyWord(), s.initiatingParticipantRef.getEReference());
	//SubChoreography.correlationKeys -> EReference : correlationKeys
	if (s.correlationKeys.getEReference() != null) t.addNewReference("correlationKeys".clearKeyWord(), s.correlationKeys.getEReference());
	//SubChoreography.flowElements -> EReference : flowElements
	if (s.flowElements.getEReference() != null) t.addNewReference("flowElements".clearKeyWord(), s.flowElements.getEReference());
	//SubChoreography.laneSets -> EReference : laneSets
	if (s.laneSets.getEReference() != null) t.addNewReference("laneSets".clearKeyWord(), s.laneSets.getEReference());
	//SubChoreography.artifacts -> EReference : artifacts
	if (s.artifacts.getEReference() != null) t.addNewReference("artifacts".clearKeyWord(), s.artifacts.getEReference());
}

@lazy
rule ChoreographyTask
	transform s : DSL!ChoreographyTask //bpmn2.ChoreographyTask
	to t : SysMLine!PartUsage
	extends Base{
	//ChoreographyTask.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//ChoreographyTask.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//ChoreographyTask.name -> EAttribute : name
	if (s.name.getEAttribute() != null) t.addNewAttribute("name".clearKeyWord(), s.name.getEAttribute());
	//ChoreographyTask.loopType -> EnumerationUsage : loopType
	if (s.loopType.getEEnumLiteral() != null) t.addNewEnumLiteral("loopType".clearKeyWord(), s.loopType.getEEnumLiteral());
	//ChoreographyTask.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//ChoreographyTask.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//ChoreographyTask.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//ChoreographyTask.auditing -> EReference : auditing
	if (s.auditing.getEReference() != null) t.addNewReference("auditing".clearKeyWord(), s.auditing.getEReference());
	//ChoreographyTask.monitoring -> EReference : monitoring
	if (s.monitoring.getEReference() != null) t.addNewReference("monitoring".clearKeyWord(), s.monitoring.getEReference());
	//ChoreographyTask.categoryValueRef -> EReference : categoryValueRef
	if (s.categoryValueRef.getEReference() != null) t.addNewReference("categoryValueRef".clearKeyWord(), s.categoryValueRef.getEReference());
	//ChoreographyTask.outgoing -> EReference : outgoing
	if (s.outgoing.getEReference() != null) t.addNewReference("outgoing".clearKeyWord(), s.outgoing.getEReference());
	//ChoreographyTask.incoming -> EReference : incoming
	if (s.incoming.getEReference() != null) t.addNewReference("incoming".clearKeyWord(), s.incoming.getEReference());
	//ChoreographyTask.lanes -> EReference : lanes
	if (s.lanes.getEReference() != null) t.addNewReference("lanes".clearKeyWord(), s.lanes.getEReference());
	//ChoreographyTask.participantRefs -> EReference : participantRefs
	if (s.participantRefs.getEReference() != null) t.addNewReference("participantRefs".clearKeyWord(), s.participantRefs.getEReference());
	//ChoreographyTask.initiatingParticipantRef -> EReference : initiatingParticipantRef
	if (s.initiatingParticipantRef.getEReference() != null) t.addNewReference("initiatingParticipantRef".clearKeyWord(), s.initiatingParticipantRef.getEReference());
	//ChoreographyTask.correlationKeys -> EReference : correlationKeys
	if (s.correlationKeys.getEReference() != null) t.addNewReference("correlationKeys".clearKeyWord(), s.correlationKeys.getEReference());
	//ChoreographyTask.messageFlowRef -> EReference : messageFlowRef
	if (s.messageFlowRef.getEReference() != null) t.addNewReference("messageFlowRef".clearKeyWord(), s.messageFlowRef.getEReference());
}

@lazy
rule GlobalChoreographyTask
	transform s : DSL!GlobalChoreographyTask //bpmn2.GlobalChoreographyTask
	to t : SysMLine!PartUsage
	extends Base{
	//GlobalChoreographyTask.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//GlobalChoreographyTask.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//GlobalChoreographyTask.name -> EAttribute : name
	if (s.name.getEAttribute() != null) t.addNewAttribute("name".clearKeyWord(), s.name.getEAttribute());
	//GlobalChoreographyTask.isClosed -> EAttribute : isClosed
	if (s.isClosed.getEAttribute() != null) t.addNewAttribute("isClosed".clearKeyWord(), s.isClosed.getEAttribute());
	//GlobalChoreographyTask.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//GlobalChoreographyTask.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//GlobalChoreographyTask.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//GlobalChoreographyTask.choreographyRef -> EReference : choreographyRef
	if (s.choreographyRef.getEReference() != null) t.addNewReference("choreographyRef".clearKeyWord(), s.choreographyRef.getEReference());
	//GlobalChoreographyTask.artifacts -> EReference : artifacts
	if (s.artifacts.getEReference() != null) t.addNewReference("artifacts".clearKeyWord(), s.artifacts.getEReference());
	//GlobalChoreographyTask.participantAssociations -> EReference : participantAssociations
	if (s.participantAssociations.getEReference() != null) t.addNewReference("participantAssociations".clearKeyWord(), s.participantAssociations.getEReference());
	//GlobalChoreographyTask.messageFlowAssociations -> EReference : messageFlowAssociations
	if (s.messageFlowAssociations.getEReference() != null) t.addNewReference("messageFlowAssociations".clearKeyWord(), s.messageFlowAssociations.getEReference());
	//GlobalChoreographyTask.conversationAssociations -> EReference : conversationAssociations
	if (s.conversationAssociations.getEReference() != null) t.addNewReference("conversationAssociations".clearKeyWord(), s.conversationAssociations.getEReference());
	//GlobalChoreographyTask.participants -> EReference : participants
	if (s.participants.getEReference() != null) t.addNewReference("participants".clearKeyWord(), s.participants.getEReference());
	//GlobalChoreographyTask.messageFlows -> EReference : messageFlows
	if (s.messageFlows.getEReference() != null) t.addNewReference("messageFlows".clearKeyWord(), s.messageFlows.getEReference());
	//GlobalChoreographyTask.correlationKeys -> EReference : correlationKeys
	if (s.correlationKeys.getEReference() != null) t.addNewReference("correlationKeys".clearKeyWord(), s.correlationKeys.getEReference());
	//GlobalChoreographyTask.conversations -> EReference : conversations
	if (s.conversations.getEReference() != null) t.addNewReference("conversations".clearKeyWord(), s.conversations.getEReference());
	//GlobalChoreographyTask.conversationLinks -> EReference : conversationLinks
	if (s.conversationLinks.getEReference() != null) t.addNewReference("conversationLinks".clearKeyWord(), s.conversationLinks.getEReference());
	//GlobalChoreographyTask.flowElements -> EReference : flowElements
	if (s.flowElements.getEReference() != null) t.addNewReference("flowElements".clearKeyWord(), s.flowElements.getEReference());
	//GlobalChoreographyTask.laneSets -> EReference : laneSets
	if (s.laneSets.getEReference() != null) t.addNewReference("laneSets".clearKeyWord(), s.laneSets.getEReference());
	//GlobalChoreographyTask.initiatingParticipantRef -> EReference : initiatingParticipantRef
	if (s.initiatingParticipantRef.getEReference() != null) t.addNewReference("initiatingParticipantRef".clearKeyWord(), s.initiatingParticipantRef.getEReference());
}

@lazy
rule TextAnnotation
	transform s : DSL!TextAnnotation //bpmn2.TextAnnotation
	to t : SysMLine!PartUsage
	extends Base{
	//TextAnnotation.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//TextAnnotation.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//TextAnnotation.text -> EAttribute : text
	if (s.text.getEAttribute() != null) t.addNewAttribute("text".clearKeyWord(), s.text.getEAttribute());
	//TextAnnotation.textFormat -> EAttribute : textFormat
	if (s.textFormat.getEAttribute() != null) t.addNewAttribute("textFormat".clearKeyWord(), s.textFormat.getEAttribute());
	//TextAnnotation.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//TextAnnotation.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//TextAnnotation.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
}

@lazy
rule Group
	transform s : DSL!Group //bpmn2.Group
	to t : SysMLine!PartUsage
	extends Base{
	//Group.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//Group.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//Group.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//Group.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//Group.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//Group.categoryValueRef -> EReference : categoryValueRef
	if (s.categoryValueRef.getEReference() != null) t.addNewReference("categoryValueRef".clearKeyWord(), s.categoryValueRef.getEReference());
}

@lazy
rule Association
	transform s : DSL!Association //bpmn2.Association
	to t : SysMLine!PartUsage
	extends Base{
	//Association.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//Association.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//Association.associationDirection -> EnumerationUsage : associationDirection
	if (s.associationDirection.getEEnumLiteral() != null) t.addNewEnumLiteral("associationDirection".clearKeyWord(), s.associationDirection.getEEnumLiteral());
	//Association.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//Association.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//Association.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//Association.sourceRef -> EReference : sourceRef
	if (s.sourceRef.getEReference() != null) t.addNewReference("sourceRef".clearKeyWord(), s.sourceRef.getEReference());
	//Association.targetRef -> EReference : targetRef
	if (s.targetRef.getEReference() != null) t.addNewReference("targetRef".clearKeyWord(), s.targetRef.getEReference());
}

@lazy
rule Category
	transform s : DSL!Category //bpmn2.Category
	to t : SysMLine!PartUsage
	extends Base{
	//Category.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//Category.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//Category.name -> EAttribute : name
	if (s.name.getEAttribute() != null) t.addNewAttribute("name".clearKeyWord(), s.name.getEAttribute());
	//Category.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//Category.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//Category.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//Category.categoryValue -> EReference : categoryValue
	if (s.categoryValue.getEReference() != null) t.addNewReference("categoryValue".clearKeyWord(), s.categoryValue.getEReference());
}

@lazy
rule ServiceTask
	transform s : DSL!ServiceTask //bpmn2.ServiceTask
	to t : SysMLine!PartUsage
	extends Base{
	//ServiceTask.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//ServiceTask.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//ServiceTask.name -> EAttribute : name
	if (s.name.getEAttribute() != null) t.addNewAttribute("name".clearKeyWord(), s.name.getEAttribute());
	//ServiceTask.isForCompensation -> EAttribute : isForCompensation
	if (s.isForCompensation.getEAttribute() != null) t.addNewAttribute("isForCompensation".clearKeyWord(), s.isForCompensation.getEAttribute());
	//ServiceTask.startQuantity -> EAttribute : startQuantity
	if (s.startQuantity.getEAttribute() != null) t.addNewAttribute("startQuantity".clearKeyWord(), s.startQuantity.getEAttribute());
	//ServiceTask.completionQuantity -> EAttribute : completionQuantity
	if (s.completionQuantity.getEAttribute() != null) t.addNewAttribute("completionQuantity".clearKeyWord(), s.completionQuantity.getEAttribute());
	//ServiceTask.implementation -> EAttribute : implementation
	if (s.implementation.getEAttribute() != null) t.addNewAttribute("implementation".clearKeyWord(), s.implementation.getEAttribute());
	//ServiceTask.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//ServiceTask.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//ServiceTask.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//ServiceTask.auditing -> EReference : auditing
	if (s.auditing.getEReference() != null) t.addNewReference("auditing".clearKeyWord(), s.auditing.getEReference());
	//ServiceTask.monitoring -> EReference : monitoring
	if (s.monitoring.getEReference() != null) t.addNewReference("monitoring".clearKeyWord(), s.monitoring.getEReference());
	//ServiceTask.categoryValueRef -> EReference : categoryValueRef
	if (s.categoryValueRef.getEReference() != null) t.addNewReference("categoryValueRef".clearKeyWord(), s.categoryValueRef.getEReference());
	//ServiceTask.outgoing -> EReference : outgoing
	if (s.outgoing.getEReference() != null) t.addNewReference("outgoing".clearKeyWord(), s.outgoing.getEReference());
	//ServiceTask.incoming -> EReference : incoming
	if (s.incoming.getEReference() != null) t.addNewReference("incoming".clearKeyWord(), s.incoming.getEReference());
	//ServiceTask.lanes -> EReference : lanes
	if (s.lanes.getEReference() != null) t.addNewReference("lanes".clearKeyWord(), s.lanes.getEReference());
	//ServiceTask.incomingConversationLinks -> EReference : incomingConversationLinks
	if (s.incomingConversationLinks.getEReference() != null) t.addNewReference("incomingConversationLinks".clearKeyWord(), s.incomingConversationLinks.getEReference());
	//ServiceTask.outgoingConversationLinks -> EReference : outgoingConversationLinks
	if (s.outgoingConversationLinks.getEReference() != null) t.addNewReference("outgoingConversationLinks".clearKeyWord(), s.outgoingConversationLinks.getEReference());
	//ServiceTask.loopCharacteristics -> EReference : loopCharacteristics
	if (s.loopCharacteristics.getEReference() != null) t.addNewReference("loopCharacteristics".clearKeyWord(), s.loopCharacteristics.getEReference());
	//ServiceTask.resources -> EReference : resources
	if (s.resources.getEReference() != null) t.addNewReference("resources".clearKeyWord(), s.resources.getEReference());
	//ServiceTask.default -> EReference : default_
	if (s.`default`.getEReference() != null) t.addNewReference("default".clearKeyWord(), s.`default`.getEReference());
	//ServiceTask.properties -> EReference : properties
	if (s.properties.getEReference() != null) t.addNewReference("properties".clearKeyWord(), s.properties.getEReference());
	//ServiceTask.ioSpecification -> EReference : ioSpecification
	if (s.ioSpecification.getEReference() != null) t.addNewReference("ioSpecification".clearKeyWord(), s.ioSpecification.getEReference());
	//ServiceTask.boundaryEventRefs -> EReference : boundaryEventRefs
	if (s.boundaryEventRefs.getEReference() != null) t.addNewReference("boundaryEventRefs".clearKeyWord(), s.boundaryEventRefs.getEReference());
	//ServiceTask.dataInputAssociations -> EReference : dataInputAssociations
	if (s.dataInputAssociations.getEReference() != null) t.addNewReference("dataInputAssociations".clearKeyWord(), s.dataInputAssociations.getEReference());
	//ServiceTask.dataOutputAssociations -> EReference : dataOutputAssociations
	if (s.dataOutputAssociations.getEReference() != null) t.addNewReference("dataOutputAssociations".clearKeyWord(), s.dataOutputAssociations.getEReference());
	//ServiceTask.operationRef -> EReference : operationRef
	if (s.operationRef.getEReference() != null) t.addNewReference("operationRef".clearKeyWord(), s.operationRef.getEReference());
}

@lazy
rule SubProcess
	transform s : DSL!SubProcess //bpmn2.SubProcess
	to t : SysMLine!PartUsage
	extends Base{
	//SubProcess.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//SubProcess.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//SubProcess.name -> EAttribute : name
	if (s.name.getEAttribute() != null) t.addNewAttribute("name".clearKeyWord(), s.name.getEAttribute());
	//SubProcess.isForCompensation -> EAttribute : isForCompensation
	if (s.isForCompensation.getEAttribute() != null) t.addNewAttribute("isForCompensation".clearKeyWord(), s.isForCompensation.getEAttribute());
	//SubProcess.startQuantity -> EAttribute : startQuantity
	if (s.startQuantity.getEAttribute() != null) t.addNewAttribute("startQuantity".clearKeyWord(), s.startQuantity.getEAttribute());
	//SubProcess.completionQuantity -> EAttribute : completionQuantity
	if (s.completionQuantity.getEAttribute() != null) t.addNewAttribute("completionQuantity".clearKeyWord(), s.completionQuantity.getEAttribute());
	//SubProcess.triggeredByEvent -> EAttribute : triggeredByEvent
	if (s.triggeredByEvent.getEAttribute() != null) t.addNewAttribute("triggeredByEvent".clearKeyWord(), s.triggeredByEvent.getEAttribute());
	//SubProcess.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//SubProcess.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//SubProcess.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//SubProcess.auditing -> EReference : auditing
	if (s.auditing.getEReference() != null) t.addNewReference("auditing".clearKeyWord(), s.auditing.getEReference());
	//SubProcess.monitoring -> EReference : monitoring
	if (s.monitoring.getEReference() != null) t.addNewReference("monitoring".clearKeyWord(), s.monitoring.getEReference());
	//SubProcess.categoryValueRef -> EReference : categoryValueRef
	if (s.categoryValueRef.getEReference() != null) t.addNewReference("categoryValueRef".clearKeyWord(), s.categoryValueRef.getEReference());
	//SubProcess.outgoing -> EReference : outgoing
	if (s.outgoing.getEReference() != null) t.addNewReference("outgoing".clearKeyWord(), s.outgoing.getEReference());
	//SubProcess.incoming -> EReference : incoming
	if (s.incoming.getEReference() != null) t.addNewReference("incoming".clearKeyWord(), s.incoming.getEReference());
	//SubProcess.lanes -> EReference : lanes
	if (s.lanes.getEReference() != null) t.addNewReference("lanes".clearKeyWord(), s.lanes.getEReference());
	//SubProcess.incomingConversationLinks -> EReference : incomingConversationLinks
	if (s.incomingConversationLinks.getEReference() != null) t.addNewReference("incomingConversationLinks".clearKeyWord(), s.incomingConversationLinks.getEReference());
	//SubProcess.outgoingConversationLinks -> EReference : outgoingConversationLinks
	if (s.outgoingConversationLinks.getEReference() != null) t.addNewReference("outgoingConversationLinks".clearKeyWord(), s.outgoingConversationLinks.getEReference());
	//SubProcess.loopCharacteristics -> EReference : loopCharacteristics
	if (s.loopCharacteristics.getEReference() != null) t.addNewReference("loopCharacteristics".clearKeyWord(), s.loopCharacteristics.getEReference());
	//SubProcess.resources -> EReference : resources
	if (s.resources.getEReference() != null) t.addNewReference("resources".clearKeyWord(), s.resources.getEReference());
	//SubProcess.default -> EReference : default_
	if (s.`default`.getEReference() != null) t.addNewReference("default".clearKeyWord(), s.`default`.getEReference());
	//SubProcess.properties -> EReference : properties
	if (s.properties.getEReference() != null) t.addNewReference("properties".clearKeyWord(), s.properties.getEReference());
	//SubProcess.ioSpecification -> EReference : ioSpecification
	if (s.ioSpecification.getEReference() != null) t.addNewReference("ioSpecification".clearKeyWord(), s.ioSpecification.getEReference());
	//SubProcess.boundaryEventRefs -> EReference : boundaryEventRefs
	if (s.boundaryEventRefs.getEReference() != null) t.addNewReference("boundaryEventRefs".clearKeyWord(), s.boundaryEventRefs.getEReference());
	//SubProcess.dataInputAssociations -> EReference : dataInputAssociations
	if (s.dataInputAssociations.getEReference() != null) t.addNewReference("dataInputAssociations".clearKeyWord(), s.dataInputAssociations.getEReference());
	//SubProcess.dataOutputAssociations -> EReference : dataOutputAssociations
	if (s.dataOutputAssociations.getEReference() != null) t.addNewReference("dataOutputAssociations".clearKeyWord(), s.dataOutputAssociations.getEReference());
	//SubProcess.flowElements -> EReference : flowElements
	if (s.flowElements.getEReference() != null) t.addNewReference("flowElements".clearKeyWord(), s.flowElements.getEReference());
	//SubProcess.laneSets -> EReference : laneSets
	if (s.laneSets.getEReference() != null) t.addNewReference("laneSets".clearKeyWord(), s.laneSets.getEReference());
	//SubProcess.artifacts -> EReference : artifacts
	if (s.artifacts.getEReference() != null) t.addNewReference("artifacts".clearKeyWord(), s.artifacts.getEReference());
}

@lazy
rule MultiInstanceLoopCharacteristics
	transform s : DSL!MultiInstanceLoopCharacteristics //bpmn2.MultiInstanceLoopCharacteristics
	to t : SysMLine!PartUsage
	extends Base{
	//MultiInstanceLoopCharacteristics.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//MultiInstanceLoopCharacteristics.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//MultiInstanceLoopCharacteristics.isSequential -> EAttribute : isSequential
	if (s.isSequential.getEAttribute() != null) t.addNewAttribute("isSequential".clearKeyWord(), s.isSequential.getEAttribute());
	//MultiInstanceLoopCharacteristics.behavior -> EnumerationUsage : behavior
	if (s.behavior.getEEnumLiteral() != null) t.addNewEnumLiteral("behavior".clearKeyWord(), s.behavior.getEEnumLiteral());
	//MultiInstanceLoopCharacteristics.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//MultiInstanceLoopCharacteristics.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//MultiInstanceLoopCharacteristics.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//MultiInstanceLoopCharacteristics.loopCardinality -> EReference : loopCardinality
	if (s.loopCardinality.getEReference() != null) t.addNewReference("loopCardinality".clearKeyWord(), s.loopCardinality.getEReference());
	//MultiInstanceLoopCharacteristics.loopDataInputRef -> EReference : loopDataInputRef
	if (s.loopDataInputRef.getEReference() != null) t.addNewReference("loopDataInputRef".clearKeyWord(), s.loopDataInputRef.getEReference());
	//MultiInstanceLoopCharacteristics.loopDataOutputRef -> EReference : loopDataOutputRef
	if (s.loopDataOutputRef.getEReference() != null) t.addNewReference("loopDataOutputRef".clearKeyWord(), s.loopDataOutputRef.getEReference());
	//MultiInstanceLoopCharacteristics.inputDataItem -> EReference : inputDataItem
	if (s.inputDataItem.getEReference() != null) t.addNewReference("inputDataItem".clearKeyWord(), s.inputDataItem.getEReference());
	//MultiInstanceLoopCharacteristics.outputDataItem -> EReference : outputDataItem
	if (s.outputDataItem.getEReference() != null) t.addNewReference("outputDataItem".clearKeyWord(), s.outputDataItem.getEReference());
	//MultiInstanceLoopCharacteristics.completionCondition -> EReference : completionCondition
	if (s.completionCondition.getEReference() != null) t.addNewReference("completionCondition".clearKeyWord(), s.completionCondition.getEReference());
	//MultiInstanceLoopCharacteristics.complexBehaviorDefinition -> EReference : complexBehaviorDefinition
	if (s.complexBehaviorDefinition.getEReference() != null) t.addNewReference("complexBehaviorDefinition".clearKeyWord(), s.complexBehaviorDefinition.getEReference());
	//MultiInstanceLoopCharacteristics.oneBehaviorEventRef -> EReference : oneBehaviorEventRef
	if (s.oneBehaviorEventRef.getEReference() != null) t.addNewReference("oneBehaviorEventRef".clearKeyWord(), s.oneBehaviorEventRef.getEReference());
	//MultiInstanceLoopCharacteristics.noneBehaviorEventRef -> EReference : noneBehaviorEventRef
	if (s.noneBehaviorEventRef.getEReference() != null) t.addNewReference("noneBehaviorEventRef".clearKeyWord(), s.noneBehaviorEventRef.getEReference());
}

@lazy
rule ComplexBehaviorDefinition
	transform s : DSL!ComplexBehaviorDefinition //bpmn2.ComplexBehaviorDefinition
	to t : SysMLine!PartUsage
	extends Base{
	//ComplexBehaviorDefinition.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//ComplexBehaviorDefinition.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//ComplexBehaviorDefinition.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//ComplexBehaviorDefinition.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//ComplexBehaviorDefinition.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//ComplexBehaviorDefinition.condition -> EReference : condition
	if (s.condition.getEReference() != null) t.addNewReference("condition".clearKeyWord(), s.condition.getEReference());
	//ComplexBehaviorDefinition.event -> EReference : event
	if (s.event.getEReference() != null) t.addNewReference("event".clearKeyWord(), s.event.getEReference());
}

@lazy
rule StandardLoopCharacteristics
	transform s : DSL!StandardLoopCharacteristics //bpmn2.StandardLoopCharacteristics
	to t : SysMLine!PartUsage
	extends Base{
	//StandardLoopCharacteristics.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//StandardLoopCharacteristics.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//StandardLoopCharacteristics.testBefore -> EAttribute : testBefore
	if (s.testBefore.getEAttribute() != null) t.addNewAttribute("testBefore".clearKeyWord(), s.testBefore.getEAttribute());
	//StandardLoopCharacteristics.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//StandardLoopCharacteristics.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//StandardLoopCharacteristics.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//StandardLoopCharacteristics.loopCondition -> EReference : loopCondition
	if (s.loopCondition.getEReference() != null) t.addNewReference("loopCondition".clearKeyWord(), s.loopCondition.getEReference());
	//StandardLoopCharacteristics.loopMaximum -> EReference : loopMaximum
	if (s.loopMaximum.getEReference() != null) t.addNewReference("loopMaximum".clearKeyWord(), s.loopMaximum.getEReference());
}

@lazy
rule CallActivity
	transform s : DSL!CallActivity //bpmn2.CallActivity
	to t : SysMLine!PartUsage
	extends Base{
	//CallActivity.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//CallActivity.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//CallActivity.name -> EAttribute : name
	if (s.name.getEAttribute() != null) t.addNewAttribute("name".clearKeyWord(), s.name.getEAttribute());
	//CallActivity.isForCompensation -> EAttribute : isForCompensation
	if (s.isForCompensation.getEAttribute() != null) t.addNewAttribute("isForCompensation".clearKeyWord(), s.isForCompensation.getEAttribute());
	//CallActivity.startQuantity -> EAttribute : startQuantity
	if (s.startQuantity.getEAttribute() != null) t.addNewAttribute("startQuantity".clearKeyWord(), s.startQuantity.getEAttribute());
	//CallActivity.completionQuantity -> EAttribute : completionQuantity
	if (s.completionQuantity.getEAttribute() != null) t.addNewAttribute("completionQuantity".clearKeyWord(), s.completionQuantity.getEAttribute());
	//CallActivity.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//CallActivity.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//CallActivity.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//CallActivity.auditing -> EReference : auditing
	if (s.auditing.getEReference() != null) t.addNewReference("auditing".clearKeyWord(), s.auditing.getEReference());
	//CallActivity.monitoring -> EReference : monitoring
	if (s.monitoring.getEReference() != null) t.addNewReference("monitoring".clearKeyWord(), s.monitoring.getEReference());
	//CallActivity.categoryValueRef -> EReference : categoryValueRef
	if (s.categoryValueRef.getEReference() != null) t.addNewReference("categoryValueRef".clearKeyWord(), s.categoryValueRef.getEReference());
	//CallActivity.outgoing -> EReference : outgoing
	if (s.outgoing.getEReference() != null) t.addNewReference("outgoing".clearKeyWord(), s.outgoing.getEReference());
	//CallActivity.incoming -> EReference : incoming
	if (s.incoming.getEReference() != null) t.addNewReference("incoming".clearKeyWord(), s.incoming.getEReference());
	//CallActivity.lanes -> EReference : lanes
	if (s.lanes.getEReference() != null) t.addNewReference("lanes".clearKeyWord(), s.lanes.getEReference());
	//CallActivity.incomingConversationLinks -> EReference : incomingConversationLinks
	if (s.incomingConversationLinks.getEReference() != null) t.addNewReference("incomingConversationLinks".clearKeyWord(), s.incomingConversationLinks.getEReference());
	//CallActivity.outgoingConversationLinks -> EReference : outgoingConversationLinks
	if (s.outgoingConversationLinks.getEReference() != null) t.addNewReference("outgoingConversationLinks".clearKeyWord(), s.outgoingConversationLinks.getEReference());
	//CallActivity.loopCharacteristics -> EReference : loopCharacteristics
	if (s.loopCharacteristics.getEReference() != null) t.addNewReference("loopCharacteristics".clearKeyWord(), s.loopCharacteristics.getEReference());
	//CallActivity.resources -> EReference : resources
	if (s.resources.getEReference() != null) t.addNewReference("resources".clearKeyWord(), s.resources.getEReference());
	//CallActivity.default -> EReference : default_
	if (s.`default`.getEReference() != null) t.addNewReference("default".clearKeyWord(), s.`default`.getEReference());
	//CallActivity.properties -> EReference : properties
	if (s.properties.getEReference() != null) t.addNewReference("properties".clearKeyWord(), s.properties.getEReference());
	//CallActivity.ioSpecification -> EReference : ioSpecification
	if (s.ioSpecification.getEReference() != null) t.addNewReference("ioSpecification".clearKeyWord(), s.ioSpecification.getEReference());
	//CallActivity.boundaryEventRefs -> EReference : boundaryEventRefs
	if (s.boundaryEventRefs.getEReference() != null) t.addNewReference("boundaryEventRefs".clearKeyWord(), s.boundaryEventRefs.getEReference());
	//CallActivity.dataInputAssociations -> EReference : dataInputAssociations
	if (s.dataInputAssociations.getEReference() != null) t.addNewReference("dataInputAssociations".clearKeyWord(), s.dataInputAssociations.getEReference());
	//CallActivity.dataOutputAssociations -> EReference : dataOutputAssociations
	if (s.dataOutputAssociations.getEReference() != null) t.addNewReference("dataOutputAssociations".clearKeyWord(), s.dataOutputAssociations.getEReference());
	//CallActivity.calledElementRef -> EReference : calledElementRef
	if (s.calledElementRef.getEReference() != null) t.addNewReference("calledElementRef".clearKeyWord(), s.calledElementRef.getEReference());
}

@lazy
rule SendTask
	transform s : DSL!SendTask //bpmn2.SendTask
	to t : SysMLine!PartUsage
	extends Base{
	//SendTask.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//SendTask.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//SendTask.name -> EAttribute : name
	if (s.name.getEAttribute() != null) t.addNewAttribute("name".clearKeyWord(), s.name.getEAttribute());
	//SendTask.isForCompensation -> EAttribute : isForCompensation
	if (s.isForCompensation.getEAttribute() != null) t.addNewAttribute("isForCompensation".clearKeyWord(), s.isForCompensation.getEAttribute());
	//SendTask.startQuantity -> EAttribute : startQuantity
	if (s.startQuantity.getEAttribute() != null) t.addNewAttribute("startQuantity".clearKeyWord(), s.startQuantity.getEAttribute());
	//SendTask.completionQuantity -> EAttribute : completionQuantity
	if (s.completionQuantity.getEAttribute() != null) t.addNewAttribute("completionQuantity".clearKeyWord(), s.completionQuantity.getEAttribute());
	//SendTask.implementation -> EAttribute : implementation
	if (s.implementation.getEAttribute() != null) t.addNewAttribute("implementation".clearKeyWord(), s.implementation.getEAttribute());
	//SendTask.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//SendTask.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//SendTask.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//SendTask.auditing -> EReference : auditing
	if (s.auditing.getEReference() != null) t.addNewReference("auditing".clearKeyWord(), s.auditing.getEReference());
	//SendTask.monitoring -> EReference : monitoring
	if (s.monitoring.getEReference() != null) t.addNewReference("monitoring".clearKeyWord(), s.monitoring.getEReference());
	//SendTask.categoryValueRef -> EReference : categoryValueRef
	if (s.categoryValueRef.getEReference() != null) t.addNewReference("categoryValueRef".clearKeyWord(), s.categoryValueRef.getEReference());
	//SendTask.outgoing -> EReference : outgoing
	if (s.outgoing.getEReference() != null) t.addNewReference("outgoing".clearKeyWord(), s.outgoing.getEReference());
	//SendTask.incoming -> EReference : incoming
	if (s.incoming.getEReference() != null) t.addNewReference("incoming".clearKeyWord(), s.incoming.getEReference());
	//SendTask.lanes -> EReference : lanes
	if (s.lanes.getEReference() != null) t.addNewReference("lanes".clearKeyWord(), s.lanes.getEReference());
	//SendTask.incomingConversationLinks -> EReference : incomingConversationLinks
	if (s.incomingConversationLinks.getEReference() != null) t.addNewReference("incomingConversationLinks".clearKeyWord(), s.incomingConversationLinks.getEReference());
	//SendTask.outgoingConversationLinks -> EReference : outgoingConversationLinks
	if (s.outgoingConversationLinks.getEReference() != null) t.addNewReference("outgoingConversationLinks".clearKeyWord(), s.outgoingConversationLinks.getEReference());
	//SendTask.loopCharacteristics -> EReference : loopCharacteristics
	if (s.loopCharacteristics.getEReference() != null) t.addNewReference("loopCharacteristics".clearKeyWord(), s.loopCharacteristics.getEReference());
	//SendTask.resources -> EReference : resources
	if (s.resources.getEReference() != null) t.addNewReference("resources".clearKeyWord(), s.resources.getEReference());
	//SendTask.default -> EReference : default_
	if (s.`default`.getEReference() != null) t.addNewReference("default".clearKeyWord(), s.`default`.getEReference());
	//SendTask.properties -> EReference : properties
	if (s.properties.getEReference() != null) t.addNewReference("properties".clearKeyWord(), s.properties.getEReference());
	//SendTask.ioSpecification -> EReference : ioSpecification
	if (s.ioSpecification.getEReference() != null) t.addNewReference("ioSpecification".clearKeyWord(), s.ioSpecification.getEReference());
	//SendTask.boundaryEventRefs -> EReference : boundaryEventRefs
	if (s.boundaryEventRefs.getEReference() != null) t.addNewReference("boundaryEventRefs".clearKeyWord(), s.boundaryEventRefs.getEReference());
	//SendTask.dataInputAssociations -> EReference : dataInputAssociations
	if (s.dataInputAssociations.getEReference() != null) t.addNewReference("dataInputAssociations".clearKeyWord(), s.dataInputAssociations.getEReference());
	//SendTask.dataOutputAssociations -> EReference : dataOutputAssociations
	if (s.dataOutputAssociations.getEReference() != null) t.addNewReference("dataOutputAssociations".clearKeyWord(), s.dataOutputAssociations.getEReference());
	//SendTask.operationRef -> EReference : operationRef
	if (s.operationRef.getEReference() != null) t.addNewReference("operationRef".clearKeyWord(), s.operationRef.getEReference());
	//SendTask.messageRef -> EReference : messageRef
	if (s.messageRef.getEReference() != null) t.addNewReference("messageRef".clearKeyWord(), s.messageRef.getEReference());
}

@lazy
rule ReceiveTask
	transform s : DSL!ReceiveTask //bpmn2.ReceiveTask
	to t : SysMLine!PartUsage
	extends Base{
	//ReceiveTask.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//ReceiveTask.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//ReceiveTask.name -> EAttribute : name
	if (s.name.getEAttribute() != null) t.addNewAttribute("name".clearKeyWord(), s.name.getEAttribute());
	//ReceiveTask.isForCompensation -> EAttribute : isForCompensation
	if (s.isForCompensation.getEAttribute() != null) t.addNewAttribute("isForCompensation".clearKeyWord(), s.isForCompensation.getEAttribute());
	//ReceiveTask.startQuantity -> EAttribute : startQuantity
	if (s.startQuantity.getEAttribute() != null) t.addNewAttribute("startQuantity".clearKeyWord(), s.startQuantity.getEAttribute());
	//ReceiveTask.completionQuantity -> EAttribute : completionQuantity
	if (s.completionQuantity.getEAttribute() != null) t.addNewAttribute("completionQuantity".clearKeyWord(), s.completionQuantity.getEAttribute());
	//ReceiveTask.implementation -> EAttribute : implementation
	if (s.implementation.getEAttribute() != null) t.addNewAttribute("implementation".clearKeyWord(), s.implementation.getEAttribute());
	//ReceiveTask.instantiate -> EAttribute : instantiate
	if (s.instantiate.getEAttribute() != null) t.addNewAttribute("instantiate".clearKeyWord(), s.instantiate.getEAttribute());
	//ReceiveTask.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//ReceiveTask.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//ReceiveTask.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//ReceiveTask.auditing -> EReference : auditing
	if (s.auditing.getEReference() != null) t.addNewReference("auditing".clearKeyWord(), s.auditing.getEReference());
	//ReceiveTask.monitoring -> EReference : monitoring
	if (s.monitoring.getEReference() != null) t.addNewReference("monitoring".clearKeyWord(), s.monitoring.getEReference());
	//ReceiveTask.categoryValueRef -> EReference : categoryValueRef
	if (s.categoryValueRef.getEReference() != null) t.addNewReference("categoryValueRef".clearKeyWord(), s.categoryValueRef.getEReference());
	//ReceiveTask.outgoing -> EReference : outgoing
	if (s.outgoing.getEReference() != null) t.addNewReference("outgoing".clearKeyWord(), s.outgoing.getEReference());
	//ReceiveTask.incoming -> EReference : incoming
	if (s.incoming.getEReference() != null) t.addNewReference("incoming".clearKeyWord(), s.incoming.getEReference());
	//ReceiveTask.lanes -> EReference : lanes
	if (s.lanes.getEReference() != null) t.addNewReference("lanes".clearKeyWord(), s.lanes.getEReference());
	//ReceiveTask.incomingConversationLinks -> EReference : incomingConversationLinks
	if (s.incomingConversationLinks.getEReference() != null) t.addNewReference("incomingConversationLinks".clearKeyWord(), s.incomingConversationLinks.getEReference());
	//ReceiveTask.outgoingConversationLinks -> EReference : outgoingConversationLinks
	if (s.outgoingConversationLinks.getEReference() != null) t.addNewReference("outgoingConversationLinks".clearKeyWord(), s.outgoingConversationLinks.getEReference());
	//ReceiveTask.loopCharacteristics -> EReference : loopCharacteristics
	if (s.loopCharacteristics.getEReference() != null) t.addNewReference("loopCharacteristics".clearKeyWord(), s.loopCharacteristics.getEReference());
	//ReceiveTask.resources -> EReference : resources
	if (s.resources.getEReference() != null) t.addNewReference("resources".clearKeyWord(), s.resources.getEReference());
	//ReceiveTask.default -> EReference : default_
	if (s.`default`.getEReference() != null) t.addNewReference("default".clearKeyWord(), s.`default`.getEReference());
	//ReceiveTask.properties -> EReference : properties
	if (s.properties.getEReference() != null) t.addNewReference("properties".clearKeyWord(), s.properties.getEReference());
	//ReceiveTask.ioSpecification -> EReference : ioSpecification
	if (s.ioSpecification.getEReference() != null) t.addNewReference("ioSpecification".clearKeyWord(), s.ioSpecification.getEReference());
	//ReceiveTask.boundaryEventRefs -> EReference : boundaryEventRefs
	if (s.boundaryEventRefs.getEReference() != null) t.addNewReference("boundaryEventRefs".clearKeyWord(), s.boundaryEventRefs.getEReference());
	//ReceiveTask.dataInputAssociations -> EReference : dataInputAssociations
	if (s.dataInputAssociations.getEReference() != null) t.addNewReference("dataInputAssociations".clearKeyWord(), s.dataInputAssociations.getEReference());
	//ReceiveTask.dataOutputAssociations -> EReference : dataOutputAssociations
	if (s.dataOutputAssociations.getEReference() != null) t.addNewReference("dataOutputAssociations".clearKeyWord(), s.dataOutputAssociations.getEReference());
	//ReceiveTask.operationRef -> EReference : operationRef
	if (s.operationRef.getEReference() != null) t.addNewReference("operationRef".clearKeyWord(), s.operationRef.getEReference());
	//ReceiveTask.messageRef -> EReference : messageRef
	if (s.messageRef.getEReference() != null) t.addNewReference("messageRef".clearKeyWord(), s.messageRef.getEReference());
}

@lazy
rule ScriptTask
	transform s : DSL!ScriptTask //bpmn2.ScriptTask
	to t : SysMLine!PartUsage
	extends Base{
	//ScriptTask.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//ScriptTask.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//ScriptTask.name -> EAttribute : name
	if (s.name.getEAttribute() != null) t.addNewAttribute("name".clearKeyWord(), s.name.getEAttribute());
	//ScriptTask.isForCompensation -> EAttribute : isForCompensation
	if (s.isForCompensation.getEAttribute() != null) t.addNewAttribute("isForCompensation".clearKeyWord(), s.isForCompensation.getEAttribute());
	//ScriptTask.startQuantity -> EAttribute : startQuantity
	if (s.startQuantity.getEAttribute() != null) t.addNewAttribute("startQuantity".clearKeyWord(), s.startQuantity.getEAttribute());
	//ScriptTask.completionQuantity -> EAttribute : completionQuantity
	if (s.completionQuantity.getEAttribute() != null) t.addNewAttribute("completionQuantity".clearKeyWord(), s.completionQuantity.getEAttribute());
	//ScriptTask.scriptFormat -> EAttribute : scriptFormat
	if (s.scriptFormat.getEAttribute() != null) t.addNewAttribute("scriptFormat".clearKeyWord(), s.scriptFormat.getEAttribute());
	//ScriptTask.script -> EAttribute : script
	if (s.script.getEAttribute() != null) t.addNewAttribute("script".clearKeyWord(), s.script.getEAttribute());
	//ScriptTask.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//ScriptTask.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//ScriptTask.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//ScriptTask.auditing -> EReference : auditing
	if (s.auditing.getEReference() != null) t.addNewReference("auditing".clearKeyWord(), s.auditing.getEReference());
	//ScriptTask.monitoring -> EReference : monitoring
	if (s.monitoring.getEReference() != null) t.addNewReference("monitoring".clearKeyWord(), s.monitoring.getEReference());
	//ScriptTask.categoryValueRef -> EReference : categoryValueRef
	if (s.categoryValueRef.getEReference() != null) t.addNewReference("categoryValueRef".clearKeyWord(), s.categoryValueRef.getEReference());
	//ScriptTask.outgoing -> EReference : outgoing
	if (s.outgoing.getEReference() != null) t.addNewReference("outgoing".clearKeyWord(), s.outgoing.getEReference());
	//ScriptTask.incoming -> EReference : incoming
	if (s.incoming.getEReference() != null) t.addNewReference("incoming".clearKeyWord(), s.incoming.getEReference());
	//ScriptTask.lanes -> EReference : lanes
	if (s.lanes.getEReference() != null) t.addNewReference("lanes".clearKeyWord(), s.lanes.getEReference());
	//ScriptTask.incomingConversationLinks -> EReference : incomingConversationLinks
	if (s.incomingConversationLinks.getEReference() != null) t.addNewReference("incomingConversationLinks".clearKeyWord(), s.incomingConversationLinks.getEReference());
	//ScriptTask.outgoingConversationLinks -> EReference : outgoingConversationLinks
	if (s.outgoingConversationLinks.getEReference() != null) t.addNewReference("outgoingConversationLinks".clearKeyWord(), s.outgoingConversationLinks.getEReference());
	//ScriptTask.loopCharacteristics -> EReference : loopCharacteristics
	if (s.loopCharacteristics.getEReference() != null) t.addNewReference("loopCharacteristics".clearKeyWord(), s.loopCharacteristics.getEReference());
	//ScriptTask.resources -> EReference : resources
	if (s.resources.getEReference() != null) t.addNewReference("resources".clearKeyWord(), s.resources.getEReference());
	//ScriptTask.default -> EReference : default_
	if (s.`default`.getEReference() != null) t.addNewReference("default".clearKeyWord(), s.`default`.getEReference());
	//ScriptTask.properties -> EReference : properties
	if (s.properties.getEReference() != null) t.addNewReference("properties".clearKeyWord(), s.properties.getEReference());
	//ScriptTask.ioSpecification -> EReference : ioSpecification
	if (s.ioSpecification.getEReference() != null) t.addNewReference("ioSpecification".clearKeyWord(), s.ioSpecification.getEReference());
	//ScriptTask.boundaryEventRefs -> EReference : boundaryEventRefs
	if (s.boundaryEventRefs.getEReference() != null) t.addNewReference("boundaryEventRefs".clearKeyWord(), s.boundaryEventRefs.getEReference());
	//ScriptTask.dataInputAssociations -> EReference : dataInputAssociations
	if (s.dataInputAssociations.getEReference() != null) t.addNewReference("dataInputAssociations".clearKeyWord(), s.dataInputAssociations.getEReference());
	//ScriptTask.dataOutputAssociations -> EReference : dataOutputAssociations
	if (s.dataOutputAssociations.getEReference() != null) t.addNewReference("dataOutputAssociations".clearKeyWord(), s.dataOutputAssociations.getEReference());
}

@lazy
rule BusinessRuleTask
	transform s : DSL!BusinessRuleTask //bpmn2.BusinessRuleTask
	to t : SysMLine!PartUsage
	extends Base{
	//BusinessRuleTask.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//BusinessRuleTask.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//BusinessRuleTask.name -> EAttribute : name
	if (s.name.getEAttribute() != null) t.addNewAttribute("name".clearKeyWord(), s.name.getEAttribute());
	//BusinessRuleTask.isForCompensation -> EAttribute : isForCompensation
	if (s.isForCompensation.getEAttribute() != null) t.addNewAttribute("isForCompensation".clearKeyWord(), s.isForCompensation.getEAttribute());
	//BusinessRuleTask.startQuantity -> EAttribute : startQuantity
	if (s.startQuantity.getEAttribute() != null) t.addNewAttribute("startQuantity".clearKeyWord(), s.startQuantity.getEAttribute());
	//BusinessRuleTask.completionQuantity -> EAttribute : completionQuantity
	if (s.completionQuantity.getEAttribute() != null) t.addNewAttribute("completionQuantity".clearKeyWord(), s.completionQuantity.getEAttribute());
	//BusinessRuleTask.implementation -> EAttribute : implementation
	if (s.implementation.getEAttribute() != null) t.addNewAttribute("implementation".clearKeyWord(), s.implementation.getEAttribute());
	//BusinessRuleTask.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//BusinessRuleTask.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//BusinessRuleTask.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//BusinessRuleTask.auditing -> EReference : auditing
	if (s.auditing.getEReference() != null) t.addNewReference("auditing".clearKeyWord(), s.auditing.getEReference());
	//BusinessRuleTask.monitoring -> EReference : monitoring
	if (s.monitoring.getEReference() != null) t.addNewReference("monitoring".clearKeyWord(), s.monitoring.getEReference());
	//BusinessRuleTask.categoryValueRef -> EReference : categoryValueRef
	if (s.categoryValueRef.getEReference() != null) t.addNewReference("categoryValueRef".clearKeyWord(), s.categoryValueRef.getEReference());
	//BusinessRuleTask.outgoing -> EReference : outgoing
	if (s.outgoing.getEReference() != null) t.addNewReference("outgoing".clearKeyWord(), s.outgoing.getEReference());
	//BusinessRuleTask.incoming -> EReference : incoming
	if (s.incoming.getEReference() != null) t.addNewReference("incoming".clearKeyWord(), s.incoming.getEReference());
	//BusinessRuleTask.lanes -> EReference : lanes
	if (s.lanes.getEReference() != null) t.addNewReference("lanes".clearKeyWord(), s.lanes.getEReference());
	//BusinessRuleTask.incomingConversationLinks -> EReference : incomingConversationLinks
	if (s.incomingConversationLinks.getEReference() != null) t.addNewReference("incomingConversationLinks".clearKeyWord(), s.incomingConversationLinks.getEReference());
	//BusinessRuleTask.outgoingConversationLinks -> EReference : outgoingConversationLinks
	if (s.outgoingConversationLinks.getEReference() != null) t.addNewReference("outgoingConversationLinks".clearKeyWord(), s.outgoingConversationLinks.getEReference());
	//BusinessRuleTask.loopCharacteristics -> EReference : loopCharacteristics
	if (s.loopCharacteristics.getEReference() != null) t.addNewReference("loopCharacteristics".clearKeyWord(), s.loopCharacteristics.getEReference());
	//BusinessRuleTask.resources -> EReference : resources
	if (s.resources.getEReference() != null) t.addNewReference("resources".clearKeyWord(), s.resources.getEReference());
	//BusinessRuleTask.default -> EReference : default_
	if (s.`default`.getEReference() != null) t.addNewReference("default".clearKeyWord(), s.`default`.getEReference());
	//BusinessRuleTask.properties -> EReference : properties
	if (s.properties.getEReference() != null) t.addNewReference("properties".clearKeyWord(), s.properties.getEReference());
	//BusinessRuleTask.ioSpecification -> EReference : ioSpecification
	if (s.ioSpecification.getEReference() != null) t.addNewReference("ioSpecification".clearKeyWord(), s.ioSpecification.getEReference());
	//BusinessRuleTask.boundaryEventRefs -> EReference : boundaryEventRefs
	if (s.boundaryEventRefs.getEReference() != null) t.addNewReference("boundaryEventRefs".clearKeyWord(), s.boundaryEventRefs.getEReference());
	//BusinessRuleTask.dataInputAssociations -> EReference : dataInputAssociations
	if (s.dataInputAssociations.getEReference() != null) t.addNewReference("dataInputAssociations".clearKeyWord(), s.dataInputAssociations.getEReference());
	//BusinessRuleTask.dataOutputAssociations -> EReference : dataOutputAssociations
	if (s.dataOutputAssociations.getEReference() != null) t.addNewReference("dataOutputAssociations".clearKeyWord(), s.dataOutputAssociations.getEReference());
}

@lazy
rule AdHocSubProcess
	transform s : DSL!AdHocSubProcess //bpmn2.AdHocSubProcess
	to t : SysMLine!PartUsage
	extends Base{
	//AdHocSubProcess.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//AdHocSubProcess.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//AdHocSubProcess.name -> EAttribute : name
	if (s.name.getEAttribute() != null) t.addNewAttribute("name".clearKeyWord(), s.name.getEAttribute());
	//AdHocSubProcess.isForCompensation -> EAttribute : isForCompensation
	if (s.isForCompensation.getEAttribute() != null) t.addNewAttribute("isForCompensation".clearKeyWord(), s.isForCompensation.getEAttribute());
	//AdHocSubProcess.startQuantity -> EAttribute : startQuantity
	if (s.startQuantity.getEAttribute() != null) t.addNewAttribute("startQuantity".clearKeyWord(), s.startQuantity.getEAttribute());
	//AdHocSubProcess.completionQuantity -> EAttribute : completionQuantity
	if (s.completionQuantity.getEAttribute() != null) t.addNewAttribute("completionQuantity".clearKeyWord(), s.completionQuantity.getEAttribute());
	//AdHocSubProcess.triggeredByEvent -> EAttribute : triggeredByEvent
	if (s.triggeredByEvent.getEAttribute() != null) t.addNewAttribute("triggeredByEvent".clearKeyWord(), s.triggeredByEvent.getEAttribute());
	//AdHocSubProcess.ordering -> EnumerationUsage : ordering
	if (s.ordering.getEEnumLiteral() != null) t.addNewEnumLiteral("ordering".clearKeyWord(), s.ordering.getEEnumLiteral());
	//AdHocSubProcess.cancelRemainingInstances -> EAttribute : cancelRemainingInstances
	if (s.cancelRemainingInstances.getEAttribute() != null) t.addNewAttribute("cancelRemainingInstances".clearKeyWord(), s.cancelRemainingInstances.getEAttribute());
	//AdHocSubProcess.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//AdHocSubProcess.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//AdHocSubProcess.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//AdHocSubProcess.auditing -> EReference : auditing
	if (s.auditing.getEReference() != null) t.addNewReference("auditing".clearKeyWord(), s.auditing.getEReference());
	//AdHocSubProcess.monitoring -> EReference : monitoring
	if (s.monitoring.getEReference() != null) t.addNewReference("monitoring".clearKeyWord(), s.monitoring.getEReference());
	//AdHocSubProcess.categoryValueRef -> EReference : categoryValueRef
	if (s.categoryValueRef.getEReference() != null) t.addNewReference("categoryValueRef".clearKeyWord(), s.categoryValueRef.getEReference());
	//AdHocSubProcess.outgoing -> EReference : outgoing
	if (s.outgoing.getEReference() != null) t.addNewReference("outgoing".clearKeyWord(), s.outgoing.getEReference());
	//AdHocSubProcess.incoming -> EReference : incoming
	if (s.incoming.getEReference() != null) t.addNewReference("incoming".clearKeyWord(), s.incoming.getEReference());
	//AdHocSubProcess.lanes -> EReference : lanes
	if (s.lanes.getEReference() != null) t.addNewReference("lanes".clearKeyWord(), s.lanes.getEReference());
	//AdHocSubProcess.incomingConversationLinks -> EReference : incomingConversationLinks
	if (s.incomingConversationLinks.getEReference() != null) t.addNewReference("incomingConversationLinks".clearKeyWord(), s.incomingConversationLinks.getEReference());
	//AdHocSubProcess.outgoingConversationLinks -> EReference : outgoingConversationLinks
	if (s.outgoingConversationLinks.getEReference() != null) t.addNewReference("outgoingConversationLinks".clearKeyWord(), s.outgoingConversationLinks.getEReference());
	//AdHocSubProcess.loopCharacteristics -> EReference : loopCharacteristics
	if (s.loopCharacteristics.getEReference() != null) t.addNewReference("loopCharacteristics".clearKeyWord(), s.loopCharacteristics.getEReference());
	//AdHocSubProcess.resources -> EReference : resources
	if (s.resources.getEReference() != null) t.addNewReference("resources".clearKeyWord(), s.resources.getEReference());
	//AdHocSubProcess.default -> EReference : default_
	if (s.`default`.getEReference() != null) t.addNewReference("default".clearKeyWord(), s.`default`.getEReference());
	//AdHocSubProcess.properties -> EReference : properties
	if (s.properties.getEReference() != null) t.addNewReference("properties".clearKeyWord(), s.properties.getEReference());
	//AdHocSubProcess.ioSpecification -> EReference : ioSpecification
	if (s.ioSpecification.getEReference() != null) t.addNewReference("ioSpecification".clearKeyWord(), s.ioSpecification.getEReference());
	//AdHocSubProcess.boundaryEventRefs -> EReference : boundaryEventRefs
	if (s.boundaryEventRefs.getEReference() != null) t.addNewReference("boundaryEventRefs".clearKeyWord(), s.boundaryEventRefs.getEReference());
	//AdHocSubProcess.dataInputAssociations -> EReference : dataInputAssociations
	if (s.dataInputAssociations.getEReference() != null) t.addNewReference("dataInputAssociations".clearKeyWord(), s.dataInputAssociations.getEReference());
	//AdHocSubProcess.dataOutputAssociations -> EReference : dataOutputAssociations
	if (s.dataOutputAssociations.getEReference() != null) t.addNewReference("dataOutputAssociations".clearKeyWord(), s.dataOutputAssociations.getEReference());
	//AdHocSubProcess.flowElements -> EReference : flowElements
	if (s.flowElements.getEReference() != null) t.addNewReference("flowElements".clearKeyWord(), s.flowElements.getEReference());
	//AdHocSubProcess.laneSets -> EReference : laneSets
	if (s.laneSets.getEReference() != null) t.addNewReference("laneSets".clearKeyWord(), s.laneSets.getEReference());
	//AdHocSubProcess.artifacts -> EReference : artifacts
	if (s.artifacts.getEReference() != null) t.addNewReference("artifacts".clearKeyWord(), s.artifacts.getEReference());
	//AdHocSubProcess.completionCondition -> EReference : completionCondition
	if (s.completionCondition.getEReference() != null) t.addNewReference("completionCondition".clearKeyWord(), s.completionCondition.getEReference());
}

@lazy
rule Transaction
	transform s : DSL!Transaction //bpmn2.Transaction
	to t : SysMLine!PartUsage
	extends Base{
	//Transaction.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//Transaction.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//Transaction.name -> EAttribute : name
	if (s.name.getEAttribute() != null) t.addNewAttribute("name".clearKeyWord(), s.name.getEAttribute());
	//Transaction.isForCompensation -> EAttribute : isForCompensation
	if (s.isForCompensation.getEAttribute() != null) t.addNewAttribute("isForCompensation".clearKeyWord(), s.isForCompensation.getEAttribute());
	//Transaction.startQuantity -> EAttribute : startQuantity
	if (s.startQuantity.getEAttribute() != null) t.addNewAttribute("startQuantity".clearKeyWord(), s.startQuantity.getEAttribute());
	//Transaction.completionQuantity -> EAttribute : completionQuantity
	if (s.completionQuantity.getEAttribute() != null) t.addNewAttribute("completionQuantity".clearKeyWord(), s.completionQuantity.getEAttribute());
	//Transaction.triggeredByEvent -> EAttribute : triggeredByEvent
	if (s.triggeredByEvent.getEAttribute() != null) t.addNewAttribute("triggeredByEvent".clearKeyWord(), s.triggeredByEvent.getEAttribute());
	//Transaction.protocol -> EAttribute : protocol
	if (s.protocol.getEAttribute() != null) t.addNewAttribute("protocol".clearKeyWord(), s.protocol.getEAttribute());
	//Transaction.method -> EAttribute : method
	if (s.method.getEAttribute() != null) t.addNewAttribute("method".clearKeyWord(), s.method.getEAttribute());
	//Transaction.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//Transaction.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//Transaction.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//Transaction.auditing -> EReference : auditing
	if (s.auditing.getEReference() != null) t.addNewReference("auditing".clearKeyWord(), s.auditing.getEReference());
	//Transaction.monitoring -> EReference : monitoring
	if (s.monitoring.getEReference() != null) t.addNewReference("monitoring".clearKeyWord(), s.monitoring.getEReference());
	//Transaction.categoryValueRef -> EReference : categoryValueRef
	if (s.categoryValueRef.getEReference() != null) t.addNewReference("categoryValueRef".clearKeyWord(), s.categoryValueRef.getEReference());
	//Transaction.outgoing -> EReference : outgoing
	if (s.outgoing.getEReference() != null) t.addNewReference("outgoing".clearKeyWord(), s.outgoing.getEReference());
	//Transaction.incoming -> EReference : incoming
	if (s.incoming.getEReference() != null) t.addNewReference("incoming".clearKeyWord(), s.incoming.getEReference());
	//Transaction.lanes -> EReference : lanes
	if (s.lanes.getEReference() != null) t.addNewReference("lanes".clearKeyWord(), s.lanes.getEReference());
	//Transaction.incomingConversationLinks -> EReference : incomingConversationLinks
	if (s.incomingConversationLinks.getEReference() != null) t.addNewReference("incomingConversationLinks".clearKeyWord(), s.incomingConversationLinks.getEReference());
	//Transaction.outgoingConversationLinks -> EReference : outgoingConversationLinks
	if (s.outgoingConversationLinks.getEReference() != null) t.addNewReference("outgoingConversationLinks".clearKeyWord(), s.outgoingConversationLinks.getEReference());
	//Transaction.loopCharacteristics -> EReference : loopCharacteristics
	if (s.loopCharacteristics.getEReference() != null) t.addNewReference("loopCharacteristics".clearKeyWord(), s.loopCharacteristics.getEReference());
	//Transaction.resources -> EReference : resources
	if (s.resources.getEReference() != null) t.addNewReference("resources".clearKeyWord(), s.resources.getEReference());
	//Transaction.default -> EReference : default_
	if (s.`default`.getEReference() != null) t.addNewReference("default".clearKeyWord(), s.`default`.getEReference());
	//Transaction.properties -> EReference : properties
	if (s.properties.getEReference() != null) t.addNewReference("properties".clearKeyWord(), s.properties.getEReference());
	//Transaction.ioSpecification -> EReference : ioSpecification
	if (s.ioSpecification.getEReference() != null) t.addNewReference("ioSpecification".clearKeyWord(), s.ioSpecification.getEReference());
	//Transaction.boundaryEventRefs -> EReference : boundaryEventRefs
	if (s.boundaryEventRefs.getEReference() != null) t.addNewReference("boundaryEventRefs".clearKeyWord(), s.boundaryEventRefs.getEReference());
	//Transaction.dataInputAssociations -> EReference : dataInputAssociations
	if (s.dataInputAssociations.getEReference() != null) t.addNewReference("dataInputAssociations".clearKeyWord(), s.dataInputAssociations.getEReference());
	//Transaction.dataOutputAssociations -> EReference : dataOutputAssociations
	if (s.dataOutputAssociations.getEReference() != null) t.addNewReference("dataOutputAssociations".clearKeyWord(), s.dataOutputAssociations.getEReference());
	//Transaction.flowElements -> EReference : flowElements
	if (s.flowElements.getEReference() != null) t.addNewReference("flowElements".clearKeyWord(), s.flowElements.getEReference());
	//Transaction.laneSets -> EReference : laneSets
	if (s.laneSets.getEReference() != null) t.addNewReference("laneSets".clearKeyWord(), s.laneSets.getEReference());
	//Transaction.artifacts -> EReference : artifacts
	if (s.artifacts.getEReference() != null) t.addNewReference("artifacts".clearKeyWord(), s.artifacts.getEReference());
}

@lazy
rule GlobalScriptTask
	transform s : DSL!GlobalScriptTask //bpmn2.GlobalScriptTask
	to t : SysMLine!PartUsage
	extends Base{
	//GlobalScriptTask.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//GlobalScriptTask.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//GlobalScriptTask.name -> EAttribute : name
	if (s.name.getEAttribute() != null) t.addNewAttribute("name".clearKeyWord(), s.name.getEAttribute());
	//GlobalScriptTask.scriptLanguage -> EAttribute : scriptLanguage
	if (s.scriptLanguage.getEAttribute() != null) t.addNewAttribute("scriptLanguage".clearKeyWord(), s.scriptLanguage.getEAttribute());
	//GlobalScriptTask.script -> EAttribute : script
	if (s.script.getEAttribute() != null) t.addNewAttribute("script".clearKeyWord(), s.script.getEAttribute());
	//GlobalScriptTask.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//GlobalScriptTask.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//GlobalScriptTask.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//GlobalScriptTask.ioSpecification -> EReference : ioSpecification
	if (s.ioSpecification.getEReference() != null) t.addNewReference("ioSpecification".clearKeyWord(), s.ioSpecification.getEReference());
	//GlobalScriptTask.supportedInterfaceRefs -> EReference : supportedInterfaceRefs
	if (s.supportedInterfaceRefs.getEReference() != null) t.addNewReference("supportedInterfaceRefs".clearKeyWord(), s.supportedInterfaceRefs.getEReference());
	//GlobalScriptTask.ioBinding -> EReference : ioBinding
	if (s.ioBinding.getEReference() != null) t.addNewReference("ioBinding".clearKeyWord(), s.ioBinding.getEReference());
	//GlobalScriptTask.resources -> EReference : resources
	if (s.resources.getEReference() != null) t.addNewReference("resources".clearKeyWord(), s.resources.getEReference());
}

@lazy
rule GlobalBusinessRuleTask
	transform s : DSL!GlobalBusinessRuleTask //bpmn2.GlobalBusinessRuleTask
	to t : SysMLine!PartUsage
	extends Base{
	//GlobalBusinessRuleTask.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//GlobalBusinessRuleTask.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//GlobalBusinessRuleTask.name -> EAttribute : name
	if (s.name.getEAttribute() != null) t.addNewAttribute("name".clearKeyWord(), s.name.getEAttribute());
	//GlobalBusinessRuleTask.implementation -> EAttribute : implementation
	if (s.implementation.getEAttribute() != null) t.addNewAttribute("implementation".clearKeyWord(), s.implementation.getEAttribute());
	//GlobalBusinessRuleTask.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//GlobalBusinessRuleTask.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//GlobalBusinessRuleTask.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//GlobalBusinessRuleTask.ioSpecification -> EReference : ioSpecification
	if (s.ioSpecification.getEReference() != null) t.addNewReference("ioSpecification".clearKeyWord(), s.ioSpecification.getEReference());
	//GlobalBusinessRuleTask.supportedInterfaceRefs -> EReference : supportedInterfaceRefs
	if (s.supportedInterfaceRefs.getEReference() != null) t.addNewReference("supportedInterfaceRefs".clearKeyWord(), s.supportedInterfaceRefs.getEReference());
	//GlobalBusinessRuleTask.ioBinding -> EReference : ioBinding
	if (s.ioBinding.getEReference() != null) t.addNewReference("ioBinding".clearKeyWord(), s.ioBinding.getEReference());
	//GlobalBusinessRuleTask.resources -> EReference : resources
	if (s.resources.getEReference() != null) t.addNewReference("resources".clearKeyWord(), s.resources.getEReference());
}

@lazy
rule Definitions
	transform s : DSL!Definitions //bpmn2.Definitions
	to t : SysMLine!PartUsage
	extends Base{
	//Definitions.id -> EAttribute : id
	if (s.id.getEAttribute() != null) t.addNewAttribute("id".clearKeyWord(), s.id.getEAttribute());
	//Definitions.description -> EAttribute : description
	if (s.description.getEAttribute() != null) t.addNewAttribute("description".clearKeyWord(), s.description.getEAttribute());
	//Definitions.name -> EAttribute : name
	if (s.name.getEAttribute() != null) t.addNewAttribute("name".clearKeyWord(), s.name.getEAttribute());
	//Definitions.targetNamespace -> EAttribute : targetNamespace
	if (s.targetNamespace.getEAttribute() != null) t.addNewAttribute("targetNamespace".clearKeyWord(), s.targetNamespace.getEAttribute());
	//Definitions.expressionLanguage -> EAttribute : expressionLanguage
	if (s.expressionLanguage.getEAttribute() != null) t.addNewAttribute("expressionLanguage".clearKeyWord(), s.expressionLanguage.getEAttribute());
	//Definitions.typeLanguage -> EAttribute : typeLanguage
	if (s.typeLanguage.getEAttribute() != null) t.addNewAttribute("typeLanguage".clearKeyWord(), s.typeLanguage.getEAttribute());
	//Definitions.exporter -> EAttribute : exporter
	if (s.exporter.getEAttribute() != null) t.addNewAttribute("exporter".clearKeyWord(), s.exporter.getEAttribute());
	//Definitions.exporterVersion -> EAttribute : exporterVersion
	if (s.exporterVersion.getEAttribute() != null) t.addNewAttribute("exporterVersion".clearKeyWord(), s.exporterVersion.getEAttribute());
	//Definitions.extensionDefinitions -> EReference : extensionDefinitions
	if (s.extensionDefinitions.getEReference() != null) t.addNewReference("extensionDefinitions".clearKeyWord(), s.extensionDefinitions.getEReference());
	//Definitions.extensionValues -> EReference : extensionValues
	if (s.extensionValues.getEReference() != null) t.addNewReference("extensionValues".clearKeyWord(), s.extensionValues.getEReference());
	//Definitions.documentation -> EReference : documentation
	if (s.documentation.getEReference() != null) t.addNewReference("documentation".clearKeyWord(), s.documentation.getEReference());
	//Definitions.imports -> EReference : imports
	if (s.imports.getEReference() != null) t.addNewReference("imports".clearKeyWord(), s.imports.getEReference());
	//Definitions.extensions -> EReference : extensions
	if (s.extensions.getEReference() != null) t.addNewReference("extensions".clearKeyWord(), s.extensions.getEReference());
	//Definitions.relationships -> EReference : relationships
	if (s.relationships.getEReference() != null) t.addNewReference("relationships".clearKeyWord(), s.relationships.getEReference());
	//Definitions.rootElements -> EReference : rootElements
	if (s.rootElements.getEReference() != null) t.addNewReference("rootElements".clearKeyWord(), s.rootElements.getEReference());
	//Definitions.diagrams -> EReference : diagrams
	if (s.diagrams.getEReference() != null) t.addNewReference("diagrams".clearKeyWord(), s.diagrams.getEReference());
}


// bpmdi.ecore
@lazy
rule BPMNPlane
	transform s : DSL!BPMNPlane //bpmdi.BPMNPlane
	to t : SysMLine!PartUsage
	extends Base{
	//BPMNPlane.owningDiagram -> EReference : owningDiagram
	if (s.owningDiagram.getEReference() != null) t.addNewReference("owningDiagram".clearKeyWord(), s.owningDiagram.getEReference());
	//BPMNPlane.owningElement -> EReference : owningElement
	if (s.owningElement.getEReference() != null) t.addNewReference("owningElement".clearKeyWord(), s.owningElement.getEReference());
	//BPMNPlane.ownedElement -> EReference : ownedElement
	if (s.ownedElement.getEReference() != null) t.addNewReference("ownedElement".clearKeyWord(), s.ownedElement.getEReference());
	//BPMNPlane.modelElement -> EReference : modelElement
	if (s.modelElement.getEReference() != null) t.addNewReference("modelElement".clearKeyWord(), s.modelElement.getEReference());
	//BPMNPlane.style -> EReference : style
	if (s.style.getEReference() != null) t.addNewReference("style".clearKeyWord(), s.style.getEReference());
	//BPMNPlane.planeElement -> EReference : planeElement
	if (s.planeElement.getEReference() != null) t.addNewReference("planeElement".clearKeyWord(), s.planeElement.getEReference());
	//BPMNPlane.bpmnElement -> EReference : bpmnElement
	if (s.bpmnElement.getEReference() != null) t.addNewReference("bpmnElement".clearKeyWord(), s.bpmnElement.getEReference());
}

@lazy
rule BPMNShape
	transform s : DSL!BPMNShape //bpmdi.BPMNShape
	to t : SysMLine!PartUsage
	extends Base{
	//BPMNShape.isHorizontal -> EAttribute : isHorizontal
	if (s.isHorizontal.getEAttribute() != null) t.addNewAttribute("isHorizontal".clearKeyWord(), s.isHorizontal.getEAttribute());
	//BPMNShape.isExpanded -> EAttribute : isExpanded
	if (s.isExpanded.getEAttribute() != null) t.addNewAttribute("isExpanded".clearKeyWord(), s.isExpanded.getEAttribute());
	//BPMNShape.isMarkerVisible -> EAttribute : isMarkerVisible
	if (s.isMarkerVisible.getEAttribute() != null) t.addNewAttribute("isMarkerVisible".clearKeyWord(), s.isMarkerVisible.getEAttribute());
	//BPMNShape.isMessageVisible -> EAttribute : isMessageVisible
	if (s.isMessageVisible.getEAttribute() != null) t.addNewAttribute("isMessageVisible".clearKeyWord(), s.isMessageVisible.getEAttribute());
	//BPMNShape.participantBandKind -> EnumerationUsage : participantBandKind
	if (s.participantBandKind.getEEnumLiteral() != null) t.addNewEnumLiteral("participantBandKind".clearKeyWord(), s.participantBandKind.getEEnumLiteral());
	//BPMNShape.owningDiagram -> EReference : owningDiagram
	if (s.owningDiagram.getEReference() != null) t.addNewReference("owningDiagram".clearKeyWord(), s.owningDiagram.getEReference());
	//BPMNShape.owningElement -> EReference : owningElement
	if (s.owningElement.getEReference() != null) t.addNewReference("owningElement".clearKeyWord(), s.owningElement.getEReference());
	//BPMNShape.ownedElement -> EReference : ownedElement
	if (s.ownedElement.getEReference() != null) t.addNewReference("ownedElement".clearKeyWord(), s.ownedElement.getEReference());
	//BPMNShape.modelElement -> EReference : modelElement
	if (s.modelElement.getEReference() != null) t.addNewReference("modelElement".clearKeyWord(), s.modelElement.getEReference());
	//BPMNShape.style -> EReference : style
	if (s.style.getEReference() != null) t.addNewReference("style".clearKeyWord(), s.style.getEReference());
	//BPMNShape.bounds -> EReference : bounds
	if (s.bounds.getEReference() != null) t.addNewReference("bounds".clearKeyWord(), s.bounds.getEReference());
	//BPMNShape.ownedLabel -> EReference : ownedLabel
	if (s.ownedLabel.getEReference() != null) t.addNewReference("ownedLabel".clearKeyWord(), s.ownedLabel.getEReference());
	//BPMNShape.bpmnElement -> EReference : bpmnElement
	if (s.bpmnElement.getEReference() != null) t.addNewReference("bpmnElement".clearKeyWord(), s.bpmnElement.getEReference());
	//BPMNShape.label -> EReference : label
	if (s.label.getEReference() != null) t.addNewReference("label".clearKeyWord(), s.label.getEReference());
	//BPMNShape.choreographyActivityShape -> EReference : choreographyActivityShape
	if (s.choreographyActivityShape.getEReference() != null) t.addNewReference("choreographyActivityShape".clearKeyWord(), s.choreographyActivityShape.getEReference());
}

@lazy
rule BPMNLabel
	transform s : DSL!BPMNLabel //bpmdi.BPMNLabel
	to t : SysMLine!PartUsage
	extends Base{
	//BPMNLabel.owningDiagram -> EReference : owningDiagram
	if (s.owningDiagram.getEReference() != null) t.addNewReference("owningDiagram".clearKeyWord(), s.owningDiagram.getEReference());
	//BPMNLabel.owningElement -> EReference : owningElement
	if (s.owningElement.getEReference() != null) t.addNewReference("owningElement".clearKeyWord(), s.owningElement.getEReference());
	//BPMNLabel.ownedElement -> EReference : ownedElement
	if (s.ownedElement.getEReference() != null) t.addNewReference("ownedElement".clearKeyWord(), s.ownedElement.getEReference());
	//BPMNLabel.modelElement -> EReference : modelElement
	if (s.modelElement.getEReference() != null) t.addNewReference("modelElement".clearKeyWord(), s.modelElement.getEReference());
	//BPMNLabel.style -> EReference : style
	if (s.style.getEReference() != null) t.addNewReference("style".clearKeyWord(), s.style.getEReference());
	//BPMNLabel.bounds -> EReference : bounds
	if (s.bounds.getEReference() != null) t.addNewReference("bounds".clearKeyWord(), s.bounds.getEReference());
	//BPMNLabel.labelStyle -> EReference : labelStyle
	if (s.labelStyle.getEReference() != null) t.addNewReference("labelStyle".clearKeyWord(), s.labelStyle.getEReference());
}

@lazy
rule BPMNLabelStyle
	transform s : DSL!BPMNLabelStyle //bpmdi.BPMNLabelStyle
	to t : SysMLine!PartUsage
	extends Base{
	//BPMNLabelStyle.font -> EReference : font
	if (s.font.getEReference() != null) t.addNewReference("font".clearKeyWord(), s.font.getEReference());
}

@lazy
rule BPMNEdge
	transform s : DSL!BPMNEdge //bpmdi.BPMNEdge
	to t : SysMLine!PartUsage
	extends Base{
	//BPMNEdge.messageVisibleKind -> EnumerationUsage : messageVisibleKind
	if (s.messageVisibleKind.getEEnumLiteral() != null) t.addNewEnumLiteral("messageVisibleKind".clearKeyWord(), s.messageVisibleKind.getEEnumLiteral());
	//BPMNEdge.owningDiagram -> EReference : owningDiagram
	if (s.owningDiagram.getEReference() != null) t.addNewReference("owningDiagram".clearKeyWord(), s.owningDiagram.getEReference());
	//BPMNEdge.owningElement -> EReference : owningElement
	if (s.owningElement.getEReference() != null) t.addNewReference("owningElement".clearKeyWord(), s.owningElement.getEReference());
	//BPMNEdge.ownedElement -> EReference : ownedElement
	if (s.ownedElement.getEReference() != null) t.addNewReference("ownedElement".clearKeyWord(), s.ownedElement.getEReference());
	//BPMNEdge.modelElement -> EReference : modelElement
	if (s.modelElement.getEReference() != null) t.addNewReference("modelElement".clearKeyWord(), s.modelElement.getEReference());
	//BPMNEdge.style -> EReference : style
	if (s.style.getEReference() != null) t.addNewReference("style".clearKeyWord(), s.style.getEReference());
	//BPMNEdge.source -> EReference : source
	if (s.source.getEReference() != null) t.addNewReference("source".clearKeyWord(), s.source.getEReference());
	//BPMNEdge.target -> EReference : target
	if (s.target.getEReference() != null) t.addNewReference("target".clearKeyWord(), s.target.getEReference());
	//BPMNEdge.waypoint -> EReference : waypoint
	if (s.waypoint.getEReference() != null) t.addNewReference("waypoint".clearKeyWord(), s.waypoint.getEReference());
	//BPMNEdge.ownedLabel -> EReference : ownedLabel
	if (s.ownedLabel.getEReference() != null) t.addNewReference("ownedLabel".clearKeyWord(), s.ownedLabel.getEReference());
	//BPMNEdge.label -> EReference : label
	if (s.label.getEReference() != null) t.addNewReference("label".clearKeyWord(), s.label.getEReference());
	//BPMNEdge.bpmnElement -> EReference : bpmnElement
	if (s.bpmnElement.getEReference() != null) t.addNewReference("bpmnElement".clearKeyWord(), s.bpmnElement.getEReference());
	//BPMNEdge.sourceElement -> EReference : sourceElement
	if (s.sourceElement.getEReference() != null) t.addNewReference("sourceElement".clearKeyWord(), s.sourceElement.getEReference());
	//BPMNEdge.targetElement -> EReference : targetElement
	if (s.targetElement.getEReference() != null) t.addNewReference("targetElement".clearKeyWord(), s.targetElement.getEReference());
}

@lazy
rule BPMNDiagram
	transform s : DSL!BPMNDiagram //bpmdi.BPMNDiagram
	to t : SysMLine!PartUsage
	extends Base{
	//BPMNDiagram.name -> EAttribute : name
	if (s.name.getEAttribute() != null) t.addNewAttribute("name".clearKeyWord(), s.name.getEAttribute());
	//BPMNDiagram.documentation -> EAttribute : documentation
	if (s.documentation.getEAttribute() != null) t.addNewAttribute("documentation".clearKeyWord(), s.documentation.getEAttribute());
	//BPMNDiagram.resolution -> EAttribute : resolution
	if (s.resolution.getEAttribute() != null) t.addNewAttribute("resolution".clearKeyWord(), s.resolution.getEAttribute());
	//BPMNDiagram.ownedStyle -> EReference : ownedStyle
	if (s.ownedStyle.getEReference() != null) t.addNewReference("ownedStyle".clearKeyWord(), s.ownedStyle.getEReference());
	//BPMNDiagram.rootElement -> EReference : rootElement
	if (s.rootElement.getEReference() != null) t.addNewReference("rootElement".clearKeyWord(), s.rootElement.getEReference());
	//BPMNDiagram.plane -> EReference : plane
	if (s.plane.getEReference() != null) t.addNewReference("plane".clearKeyWord(), s.plane.getEReference());
	//BPMNDiagram.labelStyle -> EReference : labelStyle
	if (s.labelStyle.getEReference() != null) t.addNewReference("labelStyle".clearKeyWord(), s.labelStyle.getEReference());
}


