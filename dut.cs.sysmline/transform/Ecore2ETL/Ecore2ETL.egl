[%var fileName = root.name;%]
[%root.name.println("[gen-ETL] root Package >> ");%]
[%for (epackage in Ecore!EPackage.all){%]
[%if (root.name != epackage.name){%]
[%epackage.name.println("[gen-ETL] referenced Package>> ");%]
[%}%]
[%}%]
[%var KeyWords = Sequence{"default", "import", "from", "to"};%]
import "DSL2SysMLine-util.eol";

pre{
	var eObjectSequence = new Sequence;
	var KeyWords = baseKeyWords();
	init_[%=fileName%]();
	main_[%=fileName%]();
}

post{
	("[ETL] [%=fileName%]2SysMLine >> " + SysMLine!Package.all.first().declaredName + ".sysmline").println();
}

operation main_[%=fileName%](){
	var rootEcore = DSL!EObject.all.first();
	var rootSysMLine = new SysMLine!Namespace;
	var rootPackage = new SysMLine!Package;
	rootPackage.declaredName = "[%=fileName%]_model";
	rootSysMLine.body.add(rootPackage);
	[%for (epackage in Ecore!EPackage.all){%]
	rootPackage.addNamespaceImport("[%=epackage.name%]");
	[%}%]
	rootEcore.addNodeTo(rootPackage);
}

operation init_[%=fileName%](){
	[%for (epackage in Ecore!EPackage.all){%]
	[%for (eClass in epackage.eClassifiers.select(s|s.type().name == "EClass")){%]
	//[%=epackage.name%].[%=eClass.name%] -> Instantiation
	var id[%=eClass.name%] = 0;
	for (e[%=eClass.name%] in DSL!EObject.all.select(s|s.isTypeOf(DSL![%=eClass.name%]))){
		var e[%=eClass.name%]Tuple = Tuple{"key"=e[%=eClass.name%].type().name.asString()+"_"+(id[%=eClass.name%]++).asString(),"value"= e[%=eClass.name%]};
		eObjectSequence.add(e[%=eClass.name%]Tuple);
	}
	[%}%]
	[%}%]
}

@abstract
rule Base
	transform s : DSL!EObject
	to t : SysMLine!ItemUsage{
	t.declaredName = s.getDeclaredName();
	t.featureNote.add(":");
	t.featureSpecialization.add(s.getfeatureSpecialization());
	if (s.eContainingFeature != null and s.eContainingFeature.name != null){
		t.featureNote.add(":>");
		t.featureSpecialization.add(s.eContainingFeature().name);
	}
}

[%for (epackage in Ecore!EPackage.all){%]
// [%=epackage.name%].ecore
[%=epackage.main()%]
[%}%]
[% operation Ecore!EClass writeEClass(){%]
@lazy
rule [%=self.name%]
	transform s : DSL![%=self.name%]
	to t : SysMLine!ItemUsage
	extends Base{
	[%	for (eAttribute in self.eAllAttributes){%]
	//[%=self.name%].[%=self.name%] -> EAttribute : [%=eAttribute.name%]
	if (s.[%=eAttribute.name%].getEAttribute() != null){
		var [%=eAttribute.name%] = new SysMLine!AttributeUsage;
		[%=eAttribute.name%].featureNote.add(":>>");
		[%=eAttribute.name%].featureSpecialization.add("[%=eAttribute.name%]");
		[%=eAttribute.name%].valuePart = s.[%=eAttribute.name%].getEAttribute();
		t.body.add([%=eAttribute.name%]);
	}
	[%}%]
	[%	for (eReference in self.eAllReferences){%]
	//[%=self.name%].[%=self.name%] -> EReference : [%=eReference.name.clearKeyWord(0)%]
	if (s.[%=eReference.name.clearKeyWord(2)%].getEReference() != null){
		var [%=eReference.name.clearKeyWord(0)%] = new SysMLine!ItemUsage;
		[%=eReference.name.clearKeyWord(0)%].isReference = true;
		[%=eReference.name.clearKeyWord(0)%].featureNote.add(":>");
		[%=eReference.name.clearKeyWord(0)%].featureSpecialization.add("[%=eReference.name.clearKeyWord(1)%]");
		[%=eReference.name.clearKeyWord(0)%].valuePart = s.[%=eReference.name.clearKeyWord(0)%].getEReference();
		t.body.add([%=eReference.name.clearKeyWord(0)%]);
	}
	[%}%]
}

[%}%]

[%
operation Ecore!EPackage main(){ 
	var eClassSequence = self.eClassifiers.select(s|s.type().name == "EClass");
	for (eClass in eClassSequence){
		eClass.writeEClass();
	} 
}

operation String clearKeyWord(i){
	if (KeyWords.includes(self) and i == 0){
		return self+"_";
	}
	else if (KeyWords.includes(self) and i == 1){
		return "'"+self+"'";
	}
	else if (KeyWords.includes(self) and i == 2){
		return "~"+self;
	}
	else{
		return self;
	}
}
%]
