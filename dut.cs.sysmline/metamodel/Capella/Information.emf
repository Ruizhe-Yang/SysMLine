@"http://www.polarsys.org/kitalpha/emde/1.0.0/extension"(trackResourceModification="true", useUUIDs="false", useIDAttributes="true", extensibleProviderFactory="true", childCreationExtenders="true")
@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="Information aims at defining the data transmission language (named Information due to the namespacing strange effects if it would have been named Data). It includes the notion of data as well as the different data communication means.
[source: Capella study]", "usage guideline"="none", "used in levels"="operational,system,logical,physical,epbs", "usage examples"="none", constraints="This package depends on the model CapellaCore.ecore", "comment/notes"="none", "reference documentation"="n/a")
@"http://www.polarsys.org/capella/semantic"
@namespace(uri="http://www.polarsys.org/capella/core/information/7.0.0", prefix="org.polarsys.capella.core.data.information")
package information;

import "platform:/resource/dut.cs.sysmline/metamodel/Capella/CapellaCore.ecore";
import "platform:/resource/dut.cs.sysmline/metamodel/Capella/Behavior.ecore";
import "platform:/resource/dut.cs.sysmline/metamodel/Capella/ModellingCore.ecore";
import "platform:/resource/dut.cs.sysmline/metamodel/Capella/Interaction.ecore";
import "platform:/resource/dut.cs.sysmline/metamodel/Capella/CapellaCommon.ecore";
import "platform:/resource/dut.cs.sysmline/metamodel/Capella/CompositeStructure.ecore";

@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="AbstractInstance")
@"http://www.polarsys.org/capella/2007/UML2Mapping"(metaclass="Property")
@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="Base class used to derive specific types of instances of classifiers (e.g very high-level/generic class)
[source: Capella study]", "usage guideline"="n/a (Abstract)", "used in levels"="n/a", "usage examples"="n/a", constraints="none", "comment/notes"="none", "reference documentation"="none")
@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", "base metaclass in UML/SysML profile "="", explanation="uml::Property", constraints="none")
abstract class AbstractInstance extends Property {

	@"http://www.polarsys.org/capella/derived"(viatra.variant="opposite", viatra.expression="representedInstance")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="keyword::none", explanation="Derived and transient", constraints="none")
	readonly volatile transient derived ref interaction.InstanceRole[*] representingInstanceRoles;
}

@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="AggregationKind")
@"http://www.polarsys.org/capella/2007/UML2Mapping"("enum"="AggregationKind")
@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="defines the specific kind of a relationship, as per UML definitions
[source: Capella study]", constraints="none", "comment/notes"="none")
@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="uml::AggregationKind", explanation="none", constraints="none")
@"http://www.polarsys.org/capella/semantic"
enum AggregationKind {

	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="used when value is not defined by the user
[source: Capella study]", constraints="none", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="This enumeration literal has no UML-SysML equivalence")
	UNSET = 0;

	@"http://www.polarsys.org/capella/2007/UML2Mapping"(enumLiteral="NONE")
	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="An association specifies a semantic relationship that can occur between typed instances. It has at least two ends
represented by properties, each of which is connected to the type of the end. More than one end of the association may
have the same type.
[source: UML superstructure v2.2]

Indicates that the property has no aggregation.
[source: UML superstructure v2.2]", constraints="none", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="uml::AggregationKind::none", explanation="", constraints="none")
	ASSOCIATION = 1;

	@"http://www.polarsys.org/capella/2007/UML2Mapping"(enumLiteral="SHARED")
	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="An aggregation specifies a semantic relationship between a part and a whole. The part has a lifecycle of its own, and is potentially shared among several aggregators
[source: Capella study]

Indicates that the property has a shared aggregation.
[source: UML superstructure v2.2]", constraints="none", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="uml::AggregationKind::shared", explanation="none", constraints="none")
	AGGREGATION = 2;

	@"http://www.polarsys.org/capella/2007/UML2Mapping"(enumLiteral="COMPOSITE")
	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="A composition specifies a semantic relationship between whole and its parts. The parts lifecycles are tied to that of the whole, and they are not shared with any other aggregator.
[source: Capella study]

Indicates that the property is aggregated compositely, i.e., the composite object has responsibility for the existence
and storage of the composed objects.
[source: UML superstructure v2.2]", constraints="none", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="uml::AggregationKind::composite", explanation="none", constraints="none")
	COMPOSITION = 3;
}

@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="AssociationPkg")
@"http://www.polarsys.org/capella/2007/UML2Mapping"(metaclass="Package")
@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="A container for Association elements
[source: Capella study]", "usage guideline"="n/a (Abstract)", "used in levels"="n/a", "usage examples"="n/a", constraints="none", "comment/notes"="none", "reference documentation"="none")
@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", "base metaclass in UML/SysML profile "="", explanation="none", constraints="none")
abstract class AssociationPkg extends capellacore.Structure {

	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="Determines where the NamedElement appears within different Namespaces within the overall model, and its
accessibility.
[source: UML superstructure v2.2]", constraints="none", type="refer to VisibilityKind description", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="uml::NamedElement::visibility", explanation="none", constraints="none")
	@"http://www.polarsys.org/capella/semantic"
	attr capellacore.VisibilityKind visibility;

	@"http://www.polarsys.org/capella/2007/UML2Mapping"(featureName="packagedElement", featureOwner="Package")
	@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="ownedAssociations")
	@"http://www.polarsys.org/capella/2007/ImpactAnalysis/Segment"
	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="the Associations elements contained in this package
[source: Capella study]", constraints="none", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="uml::Package::packagedElement", explanation="none", constraints="uml::Package::packagedElement elements on which Association stereotype or any stereotype that inherits from it is applied
Order must be computed")
	@"http://www.polarsys.org/capella/semantic"
	!resolve val Association[*] ownedAssociations;
}

@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="Association")
@"http://www.polarsys.org/capella/2007/UML2Mapping"(metaclass="Association", stereotype="eng.Association")
@"http://www.polarsys.org/capella/2007/ImpactAnalysis/Ignore"
@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="An association specifies a semantic relationship that can occur between typed instances. It has at least two ends
represented by properties, each of which is connected to the type of the end. More than one end of the association may
have the same type.
An end property of an association that is owned by an end class or that is a navigable owned end of the association
indicates that the association is navigable from the opposite ends; otherwise, the association is not navigable from the
opposite ends.
[source: UML superstructure v2.2]", "usage guideline"="n/a", "used in levels"="n/a", "usage examples"="n/a", constraints="- An association specializing another association has the same number of ends as the other association.
self.parents()->forAll(p | p.memberEnd.size() = self.memberEnd.size())
- When an association specializes another association, every end of the specific association corresponds to an end of the
general association, and the specific end reaches the same type or a subtype of the more general end.
- endType is derived from the types of the member ends.
self.endType = self.memberEnd->collect(e | e.type)
- Only binary associations can be aggregations.
self.memberEnd->exists(aggregation <> Aggregation::none) implies self.memberEnd->size() = 2
- Association ends of associations with more than two ends must be owned by the association.
if memberEnd->size() > 2 then ownedEnd->includesAll(memberEnd)
[source: UML superstructure v2.2]", "comment/notes"="none", "reference documentation"="none")
@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", "base metaclass in UML/SysML profile "="uml::Association", explanation="none", constraints="none")
@"http://www.polarsys.org/capella/semantic"
class Association extends capellacore.NamedRelationship {

	@"http://www.polarsys.org/capella/2007/UML2Mapping"(featureName="memberEnd", featureOwner="Association")
	@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="members")
	@"http://www.polarsys.org/capella/2007/ImpactAnalysis/Segment"
	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="Each end represents participation of instances of the classifier connected to the end in links of the association.
[source: UML superstructure v2.2]", constraints="none", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="uml::Association::ownedEnd, uml::Association::memberEnd", explanation="none", constraints="Multiplicity must be [2..2]")
	@"http://www.polarsys.org/capella/semantic"
	val Property[0..2] ownedMembers;

	@"http://www.polarsys.org/capella/2007/UML2Mapping"(featureName="navigableOwnedEnd", featureOwner="Association")
	@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="navigable")
	@"http://www.polarsys.org/capella/2007/ImpactAnalysis/Segment"
	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="The navigable ends that are owned by the association itself
[source: UML superstructure v2.2]", constraints="none", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="uml::Association::navigableOwnedEnd", explanation="none", constraints="Order must be computed")
	@"http://www.polarsys.org/capella/semantic"
	ref Property[0..2] navigableMembers;
}

@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="Class")
@"http://www.polarsys.org/capella/2007/UML2Mapping"(metaclass="Class", stereotype="eng.Class")
@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="A class describes a set of objects that share the same specifications of features, constraints, and semantics
[source: UML superstructure v2.2]", "usage guideline"="n/a (Abstract)", "used in levels"="n/a", "usage examples"="n/a", constraints="none", "comment/notes"="none", "reference documentation"="none")
@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", "base metaclass in UML/SysML profile "="uml::Class", explanation="none", constraints="none")
@"http://www.polarsys.org/capella/semantic"
class Class extends capellacore.GeneralClass {

	@"http://www.polarsys.org/capella/2007/UML2Mapping"(featureName="isPrimitive", featureOwner="eng.Class", fromStereotype="true")
	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="indicates whether or not the class inherits from a parent class.
[source: Capella study]", constraints="none", type="\"true\" means that there is no super class that this class inherits from.", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
	@"http://www.polarsys.org/capella/semantic"
	attr boolean isPrimitive;

	@"http://www.polarsys.org/capella/2007/UML2Mapping"(featureName="clientDependency", featureOwner="NamedElement")
	@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="keyParts")
	@"http://www.polarsys.org/capella/2007/ImpactAnalysis/Segment"
	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="The KeyPart elements owned by this class
[source: Capella study]", constraints="none", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="uml::NamedElement::clientDependency", explanation="none", constraints="uml::NamedElement::clientDependency elements on which KeyPart stereotype or any stereotype that inherits from it is applied
Order must be computed")
	@"http://www.polarsys.org/capella/semantic"
	ref KeyPart[*] keyParts;

	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="the state machines associated to this class, supporting the characterization of its dynamic behavior
[source: Capella study]", constraints="none", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="uml::Class::nestedClassifier", explanation="none", constraints="uml::Class::nestedClassifier elements on which StateMachine stereotype or any stereotype that inherits from it is applied
Order must be computed")
	@"http://www.polarsys.org/capella/semantic"
	val capellacommon.StateMachine[*] ownedStateMachines;

	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="the list of DataValue elements owned by this class
[source: Capella study]", constraints="none", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="keyword::specific", explanation="Elements are contained in the nearest possible parent container.", constraints="uml::NamedElement::clientDependency elements on which DataValue stereotype or any stereotype that inherits from it is applied")
	@"http://www.polarsys.org/capella/semantic"
	val datavalue.DataValue[*] ownedDataValues;

	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
	val InformationRealization[*] ownedInformationRealizations;

	@"http://www.polarsys.org/capella/derived"(viatra.variant="patternbody", viatra.expression="Class.outgoingTraces(self, ir);
InformationRealization.targetElement(ir, target); ")
	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="class(es) realized by this class", constraints="none", "comment/notes"="none")
	@"http://www.polarsys.org/capella/semantic"
	readonly volatile transient derived ref Class[*]#realizingClasses realizedClasses;

	@"http://www.polarsys.org/capella/derived"(viatra.variant="patternbody", viatra.expression="Class.incomingTraces(self, ir);
InformationRealization.sourceElement(ir, target); ")
	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="class(es) realizing this class", constraints="none", "comment/notes"="none")
	@"http://www.polarsys.org/capella/semantic"(excludefrom="xmlpivot")
	readonly volatile transient derived ref Class[*]#realizedClasses realizingClasses;
}

@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="Collection")
@"http://www.polarsys.org/capella/2007/UML2Mapping"(metaclass="Component", stereotype="eng.Collection")
@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="A set of items of a given type.
[source: Capella study]", "usage guideline"="n/a", "used in levels"="n/a", "usage examples"="n/a", constraints="none", "comment/notes"="none", "reference documentation"="none")
@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", "base metaclass in UML/SysML profile "="uml::DataType", explanation="DataType chosen because it has a containment reference to Operations, which is required to simplify the transformation of Collection::operations derived reference", constraints="none")
@"http://www.polarsys.org/capella/semantic"
class Collection extends capellacore.Classifier, MultiplicityElement, datavalue.DataValueContainer, modellingcore.FinalizableElement {

	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="indicates whether this collection is a first level assembly using native types, or if it is using previously defined Collections 
[source: Capella study]", constraints="none", type="true if the Collection is not assembling other Collections", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
	@"http://www.polarsys.org/capella/semantic"
	attr boolean isPrimitive;

	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="specifies the visibility status for this collection
[source: Capella study]", constraints="none", type="Refer to VisibilityKind definition", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="uml::NamedElement::visibility", explanation="none", constraints="none")
	@"http://www.polarsys.org/capella/semantic"
	attr capellacore.VisibilityKind visibility;

	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="specifies the kind status for this collection", constraints="none", type="Refer to CollectionKind definition", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
	@"http://www.polarsys.org/capella/semantic"
	attr CollectionKind kind;

	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="Specifies the kind of aggregation that applies to the Collection", constraints="none", type="none", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
	@"http://www.polarsys.org/capella/semantic"
	attr AggregationKind aggregationKind;

	@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="type")
	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="the type of the elements being collected
[source: Capella study]", constraints="none", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
	@"http://www.polarsys.org/capella/semantic"
	ref capellacore.Type type;

	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="index pointing to a specific part of this collection 
[source: Capella study]", constraints="none", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
	@"http://www.polarsys.org/capella/semantic"
	!unique ref ~datatype.DataType[*] index;

	@"http://www.polarsys.org/capella/2007/UML2Mapping"(featureName="ownedOperation", featureOwner="Class")
	@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="operations")
	@"http://www.polarsys.org/capella/2007/ImpactAnalysis/Segment"
	@"http://www.polarsys.org/capella/derived"(viatra.variant="alias", viatra.expression="ownedFeatures")
	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="The operations associated to this collection
[source: Capella study]", constraints="none", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="uml::DataType::ownedOperation", explanation="none", constraints="none")
	@"http://www.polarsys.org/capella/semantic"(feature="ownedFeatures")
	readonly volatile transient derived !resolve ref Operation[*] containedOperations;
}

@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="Base class for defining type-specific collection values
[source: Capella light-light study]
", "usage guideline"="n/a", "used in levels"="n/a", "usage examples"="n/a", constraints="none", "comment/notes"="none", "reference documentation"="none")
@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", "base metaclass in UML/SysML profile "="", explanation="none", constraints="none")
abstract class AbstractCollectionValue extends datavalue.DataValue {
}

@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="Caracterizes a value that represents a collection of elements
[source: Capella study]", "usage guideline"="n/a", "used in levels"="n/a", "usage examples"="n/a", constraints="none", "comment/notes"="none", "reference documentation"="none")
@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", "base metaclass in UML/SysML profile "="", explanation="", constraints="none")
@"http://www.polarsys.org/capella/semantic"
class CollectionValue extends AbstractCollectionValue {

	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="n/a", "usage guideline"="n/a", "used in levels"="n/a", "usage examples"="n/a", constraints="none", "comment/notes"="none", "reference documentation"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", "base metaclass in UML/SysML profile "="", explanation="", constraints="none")
	@"http://www.polarsys.org/capella/semantic"
	val datavalue.DataValue[*] ownedElements;

	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="n/a", "usage guideline"="n/a", "used in levels"="n/a", "usage examples"="n/a", constraints="none", "comment/notes"="none", "reference documentation"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", "base metaclass in UML/SysML profile "="", explanation="", constraints="none")
	@"http://www.polarsys.org/capella/semantic"
	val datavalue.DataValue ownedDefaultElement;
}

@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="A reference to a collection value, allowing the reuse of collection values across data value structures
[source: Capella study]", "usage guideline"="n/a", "used in levels"="operational,system,logical,physical", "usage examples"="n/a", constraints="none", "comment/notes"="none", "reference documentation"="none")
@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", "base metaclass in UML/SysML profile "="", explanation="none", constraints="none")
@"http://www.polarsys.org/capella/semantic"
class CollectionValueReference extends AbstractCollectionValue {

	@"http://www.polarsys.org/capella/2007/UML2Mapping"(featureName="clientDependency", featureOwner="NamedElement")
	@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="reference")
	@"http://www.polarsys.org/capella/2007/ImpactAnalysis/Segment"
	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="the collection value that this reference points to
[source: Capella study]", constraints="none", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
	@"http://www.polarsys.org/capella/semantic"
	ref AbstractCollectionValue referencedValue;

	@"http://www.polarsys.org/capella/2007/UML2Mapping"(featureName="clientDependency", featureOwner="NamedElement")
	@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="reference")
	@"http://www.polarsys.org/capella/2007/ImpactAnalysis/Segment"
	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="the property that is using this reference
[source: Capella study]", constraints="none", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
	@"http://www.polarsys.org/capella/semantic"
	ref Property referencedProperty;
}

@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="DataPkg")
@"http://www.polarsys.org/capella/2007/UML2Mapping"(metaclass="Package", stereotype="eng.DataPkg")
@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="A container for data structures
[source: Capella study]", "usage guideline"="n/a (Abstract)", "used in levels"="n/a", "usage examples"="n/a", constraints="none", "comment/notes"="none", "reference documentation"="none")
@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", "base metaclass in UML/SysML profile "="uml::Package", explanation="none", constraints="none")
@"http://www.polarsys.org/capella/semantic"
class DataPkg extends capellacore.AbstractDependenciesPkg, capellacore.AbstractExchangeItemPkg, AssociationPkg, datavalue.DataValueContainer, communication.MessageReferencePkg {

	@"http://www.polarsys.org/capella/2007/UML2Mapping"(featureName="packagedElement", featureOwner="Package")
	@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="ownedDataPkgs")
	@"http://www.polarsys.org/capella/2007/ImpactAnalysis/Segment"
	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="Sub data packages contained in this data package
[source: Capella study]", constraints="none", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="uml::Package::nestedPackage#uml::Package::packagedElement", explanation="none", constraints="uml::Package::nestedPackage elements on which DataPkg stereotype or any stereotype that inherits from it is applied
Order must be computed")
	@"http://www.polarsys.org/capella/semantic"
	val DataPkg[*] ownedDataPkgs;

	@"http://www.polarsys.org/capella/2007/UML2Mapping"(featureName="packagedElement", featureOwner="Package")
	@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="ownedClasses")
	@"http://www.polarsys.org/capella/2007/ImpactAnalysis/Segment"
	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="the class elements contained in the package", constraints="none", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="uml::Package::packagedElement", explanation="none", constraints="uml::Package::packagedElement elements on which Class stereotype or any stereotype that inherits from it is applied
Order must be computed")
	@"http://www.polarsys.org/capella/semantic"
	val Class[*] ownedClasses;

	@"http://www.polarsys.org/capella/2007/UML2Mapping"(featureName="packagedElement", featureOwner="Package")
	@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="ownedKeyParts")
	@"http://www.polarsys.org/capella/2007/ImpactAnalysis/Segment"
	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="KeyPart elements contained in this package
[source: Capella study]", constraints="none", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="uml::Package::packagedElement", explanation="none", constraints="uml::Package::packagedElement elements on which KeyPart stereotype or any stereotype that inherits from it is applied
Order must be computed")
	@"http://www.polarsys.org/capella/semantic"
	!resolve val KeyPart[*] ownedKeyParts;

	@"http://www.polarsys.org/capella/2007/UML2Mapping"(featureName="packagedElement", featureOwner="Package")
	@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="ownedCollections")
	@"http://www.polarsys.org/capella/2007/ImpactAnalysis/Segment"
	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="Collection elements contained in this package
[source: Capella study]", constraints="none", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="uml::Package::packagedElement", explanation="none", constraints="uml::Package::packagedElement elements on which Collectionstereotype or any stereotype that inherits from it is applied
Order must be computed")
	@"http://www.polarsys.org/capella/semantic"
	!resolve val Collection[*] ownedCollections;

	@"http://www.polarsys.org/capella/2007/UML2Mapping"(featureName="packagedElement", featureOwner="Package")
	@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="ownedUnits")
	@"http://www.polarsys.org/capella/2007/ImpactAnalysis/Segment"
	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="the Unit elements contained in the package
[source: Capella study]", constraints="none", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="uml::Package::packagedElement", explanation="none", constraints="uml::Package::packagedElement elements on which Unit stereotype or any stereotype that inherits from it is applied")
	@"http://www.polarsys.org/capella/semantic"
	!resolve val Unit[*] ownedUnits;

	@"http://www.polarsys.org/capella/2007/UML2Mapping"(featureName="packagedElement", featureOwner="Package")
	@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="ownedDataTypes")
	@"http://www.polarsys.org/capella/2007/ImpactAnalysis/Segment"
	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="Data types contained in this package
[source: Capella study]", constraints="none", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="uml::Package::packagedElement", explanation="none", constraints="uml::Package::packagedElement elements on which DataType stereotype or any stereotype that inherits from it is applied
Order must be computed")
	@"http://www.polarsys.org/capella/semantic"
	!resolve val ~datatype.DataType[*] ownedDataTypes;

	@"http://www.polarsys.org/capella/2007/UML2Mapping"(featureName="packagedElement", featureOwner="Package")
	@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="ownedSignals")
	@"http://www.polarsys.org/capella/2007/ImpactAnalysis/Segment"
	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="the Signal elements contained in the package
[source: Capella study]", constraints="none", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="uml::Package::packagedElement", explanation="none", constraints="uml::Package::packagedElement elements on which Signal stereotype or any stereotype that inherits from it is applied
Order must be computed")
	@"http://www.polarsys.org/capella/semantic"
	!resolve val communication.Signal[*] ownedSignals;

	@"http://www.polarsys.org/capella/2007/UML2Mapping"(featureName="packagedElement", featureOwner="Package")
	@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="ownedMessages")
	@"http://www.polarsys.org/capella/2007/ImpactAnalysis/Segment"
	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="the Messages contained in this Message package
[source: Capella study]", constraints="none", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="uml::Package::packagedElement", explanation="none", constraints="uml::Package::packagedElement elements on which Message stereotype or any stereotype that inherits from it is applied
Order must be computed")
	@"http://www.polarsys.org/capella/semantic"
	!resolve val communication.Message[*] ownedMessages;

	@"http://www.polarsys.org/capella/2007/UML2Mapping"(featureName="packagedElement", featureOwner="Package")
	@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="ownedExceptions")
	@"http://www.polarsys.org/capella/2007/ImpactAnalysis/Segment"
	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="the Exception elements contained in this package
[source: Capella study]", constraints="none", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="uml::Package::packagedElement", explanation="none", constraints="uml::Package::packagedElement elements on which Excpetion stereotype or any stereotype that inherits from it is applied
Order must be computed")
	@"http://www.polarsys.org/capella/semantic"
	!resolve val communication.Exception[*] ownedExceptions;

	@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="ownedStateEvents")
	@"http://www.polarsys.org/capella/2007/ImpactAnalysis/Segment"
	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="the StateEvent elements contained in the package
[source: Capella study]", constraints="none", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
	@"http://www.polarsys.org/capella/semantic"
	!resolve val capellacommon.StateEvent[*] ownedStateEvents;
}

@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="DomainElement")
@"http://www.polarsys.org/capella/2007/UML2Mapping"(metaclass="Class", stereotype="eng.DomainElement")
@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="A reinterpretable representation of information in a formalized manner suitable for communication, interpretation, or processing.
[source: Open Archival Information System (OAIS), IEC]", "usage guideline"="n/a (Abstract)", "used in levels"="n/a", "usage examples"="n/a", constraints="none", "comment/notes"="not used/implemented as of Capella 1.0.3", "reference documentation"="none")
@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", "base metaclass in UML/SysML profile "="", explanation="uml::Class", constraints="none")
@"http://www.polarsys.org/capella/semantic"
class DomainElement extends Class {
}

@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="KeyPart")
@"http://www.polarsys.org/capella/2007/UML2Mapping"(metaclass="Dependency", stereotype="eng.KeyPart")
@"http://www.polarsys.org/capella/2007/ImpactAnalysis/Ignore"
@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="The relationship of a Part with something that it serves as a key for
[source: Capella study]", "usage guideline"="n/a", "used in levels"="physical", "usage examples"="n/a", constraints="none", "comment/notes"="none", "reference documentation"="none")
@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", "base metaclass in UML/SysML profile "="uml::Dependency", explanation="none", constraints="none")
@"http://www.polarsys.org/capella/semantic"
class KeyPart extends capellacore.Relationship {

	@"http://www.polarsys.org/capella/2007/UML2Mapping"(featureName="supplier", featureOwner="Dependency")
	@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="property")
	@"http://www.polarsys.org/capella/2007/ImpactAnalysis/Segment"
	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="the Part/Property being declared as the key to access some other element
[source: Capella study]", constraints="none", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="uml::Dependency::supplier", explanation="none", constraints="Multiplicity must be [1..1]")
	@"http://www.polarsys.org/capella/semantic"
	ref Property[1] property;
}

@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="A MultiplicityElement is an abstract metaclass that includes optional attributes for defining the bounds of a multiplicity.
A MultiplicityElement also includes specifications of whether the values in an instantiation of this element must be
unique or ordered.
[source: UML superstructure v2.2]", "usage guideline"="n/a (Abstract)", "used in levels"="n/a", "usage examples"="n/a", constraints="These constraints must handle situations where the upper bound may be specified by an expression not computable in the
model.
- A multiplicity must define at least one valid cardinality that is greater than zero.
upperBound()->notEmpty() implies upperBound() > 0
- The lower bound must be a non-negative integer literal.
lowerBound()->notEmpty() implies lowerBound() >= 0
- The upper bound must be greater than or equal to the lower bound.
(upperBound()->notEmpty() and lowerBound()->notEmpty()) implies upperBound() >= lowerBound()
- If a non-literal ValueSpecification is used for the lower or upper bound, then evaluating that specification must not have
side effects.
Cannot be expressed in OCL.
- If a non-literal ValueSpecification is used for the lower or upper bound, then that specification must be a constant
expression.
Cannot be expressed in OCL.
- The derived lower attribute must equal the lowerBound.
lower = lowerBound()
- The derived upper attribute must equal the upperBound.
[source: UML superstructure v2.2]
upper = upperBound()", "comment/notes"="none", "reference documentation"="none")
@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", "base metaclass in UML/SysML profile "="", explanation="uml::MultiplicityElement", constraints="none")
abstract class MultiplicityElement extends capellacore.CapellaElement {

	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="For a multivalued multiplicity, this attribute specifies whether the values in an instantiation of this element are
sequentially ordered
[source: UML superstructure v2.2]", constraints="none", type="n/a", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
	@"http://www.polarsys.org/capella/semantic"
	attr boolean ~ordered;

	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="specifies whether or not this element is unique
[source: Capella study]", constraints="none", type="true is element is unique", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
	@"http://www.polarsys.org/capella/semantic"
	attr boolean ~unique;

	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="specifies whether the min value of the range is included or not
[source: Capella light-light study]", constraints="none", type="n/a", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
	@"http://www.polarsys.org/capella/semantic"
	attr boolean minInclusive;

	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="specifies whether the max value of the range is included or not
[source: Capella light-light study]", constraints="none", type="n/a", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
	@"http://www.polarsys.org/capella/semantic"
	attr boolean maxInclusive;

	@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="Default Value")
	@"http://www.polarsys.org/capella/2007/ImpactAnalysis/Segment"
	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="the value assigned by default to this multiplicity element
[source: Capella study]", constraints="none", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="keyword::specific", explanation="none", constraints="Elements on which DataValue stereotype or any stereotype that inherits from it is applied")
	@"http://www.polarsys.org/capella/semantic"
	!resolve val datavalue.DataValue ownedDefaultValue;

	@"http://www.polarsys.org/capella/2007/UML2Mapping"(featureName="lowerValue", featureOwner="MultiplicityElement")
	@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="Min Value")
	@"http://www.polarsys.org/capella/2007/ImpactAnalysis/Segment"
	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="minimum specified value for this element
[source: Capella study]", constraints="none", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="keyword::specific", explanation="none", constraints="none")
	@"http://www.polarsys.org/capella/semantic"
	!resolve val datavalue.DataValue ownedMinValue;

	@"http://www.polarsys.org/capella/2007/UML2Mapping"(featureName="upperValue", featureOwner="MultiplicityElement")
	@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="Max Value")
	@"http://www.polarsys.org/capella/2007/ImpactAnalysis/Segment"
	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="specified max value for this element
[source: Capella study]", constraints="none", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="keyword::specific", explanation="none", constraints="none")
	@"http://www.polarsys.org/capella/semantic"
	!resolve val datavalue.DataValue ownedMaxValue;

	@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="Null value")
	@"http://www.polarsys.org/capella/2007/ImpactAnalysis/Segment"
	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="the reference to the null value among the set of values contained in this MultiplicityElement
[source: Capella study]", constraints="none", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="keyword::specific", explanation="none", constraints="Elements on which DataValue stereotype or any stereotype that inherits from it is applied")
	@"http://www.polarsys.org/capella/semantic"
	!resolve val datavalue.DataValue ownedNullValue;

	@"http://www.polarsys.org/capella/2007/UML2Mapping"(featureName="lowerValue", featureOwner="MultiplicityElement")
	@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="Min Card")
	@"http://www.polarsys.org/capella/2007/ImpactAnalysis/Segment"
	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="Specifies the lower bound of the multiplicity interval, if it is expressed as an integer
[source: UML superstructure v2.2]", constraints="none", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="keyword::specific", explanation="none", constraints="none")
	@"http://www.polarsys.org/capella/semantic"
	!resolve val datavalue.NumericValue ownedMinCard;

	@"http://www.polarsys.org/capella/2007/UML2Mapping"(featureName="lowerValue", featureOwner="MultiplicityElement")
	@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="Min Length")
	@"http://www.polarsys.org/capella/2007/ImpactAnalysis/Segment"
	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="Specified minimum length for this element
[source: Capella study]", constraints="none", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="keyword::specific", explanation="none", constraints="Elements on which NumericValue stereotype or any stereotype that inherits from it is applied")
	@"http://www.polarsys.org/capella/semantic"
	!resolve val datavalue.NumericValue ownedMinLength;

	@"http://www.polarsys.org/capella/2007/UML2Mapping"(featureName="upperValue", featureOwner="MultiplicityElement")
	@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="Max Card")
	@"http://www.polarsys.org/capella/2007/ImpactAnalysis/Segment"
	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="Specifies the upper bound of the multiplicity interval, if it is expressed as an unlimited natural
[source: UML superstructure v2.2]", constraints="none", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="keyword::specific", explanation="none", constraints="none")
	@"http://www.polarsys.org/capella/semantic"
	!resolve val datavalue.NumericValue ownedMaxCard;

	@"http://www.polarsys.org/capella/2007/UML2Mapping"(featureName="upperValue", featureOwner="MultiplicityElement")
	@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="Max Length")
	@"http://www.polarsys.org/capella/2007/ImpactAnalysis/Segment"
	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="Specified max length for this element
[source: Capella study]", constraints="none", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="keyword::specific", explanation="none", constraints="Elements on which NumericValue stereotype or any stereotype that inherits from it is applied")
	@"http://www.polarsys.org/capella/semantic"
	!resolve val datavalue.NumericValue ownedMaxLength;
}

@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="Operation")
@"http://www.polarsys.org/capella/2007/UML2Mapping"(metaclass="Operation")
@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="An operation is a behavioral feature of a classifier that specifies the name, type, parameters, and constraints for invoking
an associated behavior
[source: UML superstructure v2.2]", "usage guideline"="n/a (Abstract)", "used in levels"="n/a", "usage examples"="../img/usage_examples/operation_parameters.png", constraints="- An operation can have at most one return parameter (i.e., an owned parameter with the direction set to \"return\").
ownedParameter->select(par | par.direction = #return)->size() <= 1
- If this operation has a return parameter, isOrdered equals the value of isOrdered for that parameter; otherwise, isOrdered
is false.
isOrdered = if returnResult()->notEmpty() then returnResult()->any().isOrdered else false endif
- If this operation has a return parameter, isUnique equals the value of isUnique for that parameter; otherwise, isUnique is
true.
isUnique = if returnResult()->notEmpty() then returnResult()->any().isUnique else true endif
- If this operation has a return parameter, lower equals the value of lower for that parameter; otherwise, lower is not
defined.
lower = if returnResult()->notEmpty() then returnResult()->any().lower else Set{} endif
- If this operation has a return parameter, upper equals the value of upper for that parameter; otherwise, upper is not
defined.
upper = if returnResult()->notEmpty() then returnResult()->any().upper else Set{} endif
- If this operation has a return parameter, type equals the value of type for that parameter; otherwise, type is not defined.
type = if returnResult()->notEmpty() then returnResult()->any().type else Set{} endif
- A bodyCondition can only be specified for a query operation.
bodyCondition->notEmpty() implies isQuery
[source: UML superstructure v2.2]", "comment/notes"="none", "reference documentation"="none")
@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", "base metaclass in UML/SysML profile "="", explanation="uml::Operation", constraints="none")
abstract class Operation extends capellacore.Feature, behavior.AbstractEvent, AbstractEventOperation {

	@"http://www.polarsys.org/capella/2007/UML2Mapping"(featureName="ownedParameter", featureOwner="BehavioralFeature")
	@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="parameters")
	@"http://www.polarsys.org/capella/2007/ImpactAnalysis/Segment"
	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="the parameters associated to this operation
[source: Capella study]", constraints="none", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="uml::Operation::ownedParameter", explanation="none", constraints="none")
	@"http://www.polarsys.org/capella/semantic"
	!resolve val Parameter[*] ownedParameters;

	@"http://www.polarsys.org/capella/derived"(viatra.variant="patternbody", viatra.expression="Operation.incomingTraces(self, oa);
OperationAllocation.allocatingOperation(oa, target); ")
	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="(automatically computed) the operation allocation relationships that point to this Operation
[source: Capella study]", constraints="none", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="keyword::none", explanation="Derived and transient", constraints="none")
	@"http://www.polarsys.org/capella/semantic"(excludefrom="xmlpivot")
	readonly volatile transient derived ref Operation[*]#allocatedOperations allocatingOperations;

	@"http://www.polarsys.org/capella/derived"(viatra.variant="patternbody", viatra.expression="Operation.outgoingTraces(self, oa);
OperationAllocation.allocatedOperation(oa, target); ")
	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="(automatically computed) the operation allocation relationships that start from this Operation
[source: Capella study]", constraints="none", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="keyword::none", explanation="Derived and transient", constraints="none")
	@"http://www.polarsys.org/capella/semantic"
	readonly volatile transient derived ref Operation[*]#allocatingOperations allocatedOperations;

	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="list of the allocations of this operation to/from other operations.
[source: Capella study]", constraints="none", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="keyword::nearestpackage", explanation="Elements are contained in the nearest possible parent container.", constraints="Some elements on which OperationAlllocation stereotype or any stereotype that inherits from it is applied")
	val OperationAllocation[*] ownedOperationAllocation;

	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="list of the exchange items that the operation is realizing
[source: Capella study]", constraints="none", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="keyword::nearestpackage", explanation="Elements are contained in the nearest possible parent container.", constraints="Some elements on which ExchangeItemRealization stereotype or any stereotype that inherits from it is applied")
	val ExchangeItemRealization[*] ownedExchangeItemRealizations;

	@"http://www.polarsys.org/capella/derived"(viatra.variant="patternbody", viatra.expression="Operation.outgoingTraces(self, eir);
ExchangeItemRealization.realizedItem(eir, target); ")
	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="class(es) realized by this class", constraints="none", "comment/notes"="none")
	@"http://www.polarsys.org/capella/semantic"
	readonly volatile transient derived ref ExchangeItem[*]#realizingOperations realizedExchangeItems;
}

@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="Operation Allocation")
@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="Mediator class supporting the implementation of the allocation link between two Operations
[source: Capella study]", "usage guideline"="n/a", "used in levels"="n/a", "usage examples"="n/a", constraints="none", "comment/notes"="none", "reference documentation"="none")
@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", "base metaclass in UML/SysML profile "="SysML::Allocations::Allocate", explanation="none", constraints="none")
class OperationAllocation extends capellacore.Allocation {

	@"http://www.polarsys.org/capella/derived"(viatra.variant="alias", viatra.expression="targetElement")
	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="contains the \"target\" of the allocation link
[source: Capella study]", constraints="none", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="keyword::none", explanation="Derived and transient", constraints="none")
	readonly volatile transient derived ref Operation[1] allocatedOperation;

	@"http://www.polarsys.org/capella/derived"(viatra.variant="alias", viatra.expression="sourceElement")
	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="contains the \"source\" of the allocation link
[source: Capella study]", constraints="none", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="keyword::none", explanation="Derived and transient", constraints="none")
	readonly volatile transient derived ref Operation[1] allocatingOperation;
}

@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="Parameter")
@"http://www.polarsys.org/capella/2007/UML2Mapping"(metaclass="Parameter", stereotype="eng.Parameter")
@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="A parameter is a specification of an argument used to pass information into or out of an invocation of a behavioral
feature.
[source: UML superstructure v2.2]", "usage guideline"="n/a", "used in levels"="system,logical,physical,epbs", "usage examples"="../img/usage_examples/operation_parameters.png", constraints="none", "comment/notes"="none", "reference documentation"="none")
@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", "base metaclass in UML/SysML profile "="uml::Parameter", explanation="none", constraints="none")
@"http://www.polarsys.org/capella/semantic"
class Parameter extends capellacore.TypedElement, MultiplicityElement, modellingcore.AbstractParameter {

	@"http://www.polarsys.org/capella/2007/UML2Mapping"(featureName="direction", featureOwner="Parameter")
	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="specifies whether the parameter is an input, an output, or both.
[source: Capella study]", constraints="none", type="see ParameterDirection definition", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="uml::Parameter::direction", explanation="none", constraints="none")
	@"http://www.polarsys.org/capella/semantic"
	attr ParameterDirection direction;

	@"http://www.polarsys.org/capella/2007/UML2Mapping"(featureName="passingMode", fromStereotype="true", featureOwner="eng.Parameter")
	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="specifies the way the parameter is passed along from the caller to the callee
[source: Capella study]", constraints="none", type="see PassingMode enumeration definition for possible values", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
	@"http://www.polarsys.org/capella/semantic"
	attr PassingMode passingMode;
}

@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="ParameterDirection")
@"http://www.polarsys.org/capella/2007/UML2Mapping"("enum"="ParameterDirectionKind")
@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="specifies the direction in which data is passed along through a parameter 
[source: Capella study]", constraints="none", "comment/notes"="could be renamed ParameterDirectionKind to match UML")
@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="uml::ParameterDirectionKind", explanation="none", constraints="none")
@"http://www.polarsys.org/capella/semantic"
enum ParameterDirection {

	@"http://www.polarsys.org/capella/2007/UML2Mapping"(enumLiteral="IN")
	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="used when the parameter represents an input of the operation it is used in
[source: Capella study]", constraints="none", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="uml::ParameterDirectionKind::in", explanation="none", constraints="none")
	IN = 0;

	@"http://www.polarsys.org/capella/2007/UML2Mapping"(enumLiteral="OUT")
	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="used when the parameter represents an output of the operation it is used in
[source: Capella study]", constraints="none", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="uml::ParameterDirectionKind::out", explanation="none", constraints="none")
	OUT = 1;

	@"http://www.polarsys.org/capella/2007/UML2Mapping"(enumLiteral="INOUT")
	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="used when the parameter represents both an input and on output of the operation it is used in
[source: Capella study]", constraints="none", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="uml::ParameterDirectionKind::inout", explanation="none", constraints="none")
	INOUT = 2;

	@"http://www.polarsys.org/capella/2007/UML2Mapping"(enumLiteral="RETURN")
	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="used when the parameter represents the return value of the operation it is used in
[source: Capella study]", constraints="none", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="uml::ParameterDirectionKind::return", explanation="none", constraints="none")
	RETURN = 3;

	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="the parameter is like an exception", constraints="none", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
	EXCEPTION = 4;

	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="used when the CommunicationLink protocol is not yet set", constraints="none", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
	UNSET = 5;
}

@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="PassingMode")
@"http://www.polarsys.org/capella/2007/UML2Mapping"("enum"="PassingMode")
@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="specifies the data passing mechanism for parameters of an operation
[source: Capella study]", constraints="none", "comment/notes"="none")
@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
@"http://www.polarsys.org/capella/semantic"
enum PassingMode {

	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="used when the data passing mechanism is not precised
[source: Capella study]", constraints="none", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
	UNSET = 0;

	@"http://www.polarsys.org/capella/2007/UML2Mapping"(enumLiteral="BY_REF")
	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="used when the data is being passed by reference to the operation
[source: Capella study]", constraints="none", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
	BY_REF = 1;

	@"http://www.polarsys.org/capella/2007/UML2Mapping"(enumLiteral="BY_VALUE")
	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="used when the data is being passed by value to the operation
[source: Capella study]", constraints="none", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
	BY_VALUE = 2;
}

@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="Property")
@"http://www.polarsys.org/capella/2007/UML2Mapping"(metaclass="Property", stereotype="eng.Property")
@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="A property is a structural feature.
A property related to a classifier by ownedAttribute represents an attribute, and it may also represent an association end.
It relates an instance of the class to a value or collection of values of the type of the attribute.
A property related to an Association by memberEnd or its specializations represents an end of the association. The type
of property is the type of the end of the association.
[source: UML superstructure v2.2]", "usage guideline"="n/a", "used in levels"="operational,system,logical,physical,epbs", "usage examples"="n/a", constraints="- If this property is owned by a class associated with a binary association, and the other end of the association is also owned by a class, then opposite gives the other end.
- A multiplicity on an aggregate end of a composite aggregation must not have an upper bound greater than 1.
- Subsetting may only occur when the context of the subsetting property conforms to the context of the subsetted property.
- A redefined property must be inherited from a more general classifier containing the redefining property.
- A subsetting property may strengthen the type of the subsetted property, and its upper bound may be less.
- Only a navigable property can be marked as readOnly.
- A derived union is derived.
- A derived union is read only.
- The value of isComposite is true only if aggregation is composite.
-  A Property cannot be subset by a Property with the same name
[source: UML superstructure v2.2]", "comment/notes"="none", "reference documentation"="none")
@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", "base metaclass in UML/SysML profile "="uml::Property", explanation="none", constraints="none")
@"http://www.polarsys.org/capella/semantic"
class Property extends capellacore.Feature, capellacore.TypedElement, MultiplicityElement, modellingcore.FinalizableElement {

	@"http://www.polarsys.org/capella/2007/UML2Mapping"(featureName="aggregation", featureOwner="Property")
	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="Specifies the kind of aggregation that applies to the Property
[source: UML superstructure v2.2]", constraints="none", type="none", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="uml::Property::aggregation", explanation="none", constraints="none")
	@"http://www.polarsys.org/capella/semantic"
	attr AggregationKind aggregationKind = "UNSET";

	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="Specifies whether the Property is derived, i.e., whether its value or values can be computed from other information
[source: UML superstructure v2.2]", constraints="none", type="n/a", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="uml::Property::isDerived", explanation="none", constraints="none")
	@"http://www.polarsys.org/capella/semantic"
	attr boolean isDerived;

	@"http://www.polarsys.org/capella/2007/UML2Mapping"(featureName="isReadOnly", featureOwner="StructuralFeature")
	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="If true, the attribute may only be read, and not written
[source: UML superstructure v2.2]", constraints="none", type="n/a", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="uml::Property::isReadOnly", explanation="none", constraints="none")
	@"http://www.polarsys.org/capella/semantic"
	attr boolean isReadOnly;

	@"http://www.polarsys.org/capella/2007/UML2Mapping"(featureName="isPartOfKey", featureOwner="eng.Property", fromStereotype="true")
	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="specifies whether this Property is involved as a key to a table of values
[source: Capella study]", constraints="none", type="\"true\" if the Property is used as a key", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
	@"http://www.polarsys.org/capella/semantic"
	attr boolean isPartOfKey;

	@"http://www.polarsys.org/capella/2007/UML2Mapping"(featureName="association", featureOwner="Property")
	@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="association")
	@"http://www.polarsys.org/capella/2007/ImpactAnalysis/Segment"
	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="an association relationship related to this Property
[source: Capella study]

References the association of which this property is a member, if any.
[source: UML superstructure v2.2]", constraints="none", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="uml::Property::owningAssociation, uml::Property::association", explanation="none", constraints="none")
	@"http://www.polarsys.org/capella/derived"(viatra.variant="opposite", viatra.expression="navigableMembers")
	readonly volatile transient derived ref Association association;
}

@"http://www.polarsys.org/capella/2007/UML2Mapping"("enum"="SynchronismKind")
@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="specifies the synchronicity of an operation invocation
[source: Capella study]", constraints="none", "comment/notes"="none")
@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="No equivalent enum on uml Operations. The two other candidates (CallOperationAction::isSynchronous or Message::messageSort) are not appropriate (different semantics)", constraints="none")
@"http://www.polarsys.org/capella/semantic"
enum SynchronismKind {

	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="used when the synchronicity of the operation is not precised
[source: Capella study]", constraints="none", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
	UNSET = 0;

	@"http://www.polarsys.org/capella/2007/UML2Mapping"(enumLiteral="SYNCHRONOUS")
	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="used to specify that the invocation of the operation is synchronous, e.g. does not complete before the actions performed by the operation are complete
[source: Capella study]", constraints="none", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
	SYNCHRONOUS = 1;

	@"http://www.polarsys.org/capella/2007/UML2Mapping"(enumLiteral="ASYNCHRONOUS")
	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="used to specify that the invocation of the operation is asynchronous, i.e. it is potentially completed before the actions performed in the operation are completed
[source: Capella study]", constraints="none", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
	ASYNCHRONOUS = 2;
}

@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="Service")
@"http://www.polarsys.org/capella/2007/UML2Mapping"(metaclass="Operation", stereotype="eng.Service")
@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="Specification of an action to be performed by a class, to fulfill a predefined need.
[source: Capella study]", "usage guideline"="n/a", "used in levels"="system,logical,physical,epbs", "usage examples"="../img/usage_examples/operation_parameters.png", constraints="none", "comment/notes"="none", "reference documentation"="none")
@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", "base metaclass in UML/SysML profile "="uml::Operation", explanation="none", constraints="none")
@"http://www.polarsys.org/capella/semantic"
class Service extends Operation {

	@"http://www.polarsys.org/capella/2007/UML2Mapping"(featureName="synchronismKind", fromStereotype="true", featureOwner="eng.Service")
	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="specifies the synchronicity of the service call
[source: Capella study]", constraints="none", type="see SynchronismKind definition", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="_todo_ Study the link with CallOperationAction::isSynchronous or Message::messageSort", constraints="none")
	@"http://www.polarsys.org/capella/semantic"
	attr SynchronismKind synchronismKind;

	@"http://www.polarsys.org/capella/2007/UML2Mapping"(featureName="raisedException", featureOwner="BehavioralFeature")
	@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="thrownExceptions")
	@"http://www.polarsys.org/capella/2007/ImpactAnalysis/Segment"
	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="list of exceptions that can be raised by this service
[source: Capella study]", constraints="none", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="uml::Operation::raisedException", explanation="Exception should extend uml::Type", constraints="Order must be computed")
	@"http://www.polarsys.org/capella/semantic"
	ref communication.Exception[*] thrownExceptions;

	@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="messages")
	@"http://www.polarsys.org/capella/2007/ImpactAnalysis/Segment"
	@"http://www.polarsys.org/capella/derived"(viatra.variant="alias", viatra.expression="messageReferences.message")
	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="(automatically computed) the Messages involving this Service
[source: Capella study]", constraints="none", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="keyword::none", explanation="Derived and transient", constraints="none")
	readonly volatile transient derived ref communication.Message[*] messages;

	@"http://www.polarsys.org/capella/2007/UML2Mapping"(featureName="clientDependency", featureOwner="NamedElement")
	@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="messageReferences")
	@"http://www.polarsys.org/capella/2007/ImpactAnalysis/Segment"
	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="the reference objects to the Messages involving this Service
[source: Capella study]", constraints="none", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="uml::NamedElement::clientDependency", explanation="none", constraints="uml::NamedElement::clientDependency elements on which MessageReference stereotype or any stereotype that inherits from it is applied
Order must be computed")
	ref communication.MessageReference[*] messageReferences;
}

@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="Union")
@"http://www.polarsys.org/capella/2007/UML2Mapping"(metaclass="Class", stereotype="eng.Union")
@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="(not used)", "usage guideline"="n/a", "used in levels"="n/a", "usage examples"="n/a", constraints="n/a", "comment/notes"="not used/implemented as of Capella", "reference documentation"="n/a")
@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", "base metaclass in UML/SysML profile "="", explanation="uml::Class", constraints="none")
@"http://www.polarsys.org/capella/semantic"
class Union extends Class {

	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="specifies the type of the union
[source: Capella study]", constraints="none", type="see UnionKind definition", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
	@"http://www.polarsys.org/capella/semantic"
	attr UnionKind kind;

	@"http://www.polarsys.org/capella/2007/UML2Mapping"(featureName="clientDependency", featureOwner="NamedElement")
	@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="discriminant")
	@"http://www.polarsys.org/capella/2007/ImpactAnalysis/Segment"
	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="Link to the discriminant union property", constraints="n/a", "comment/notes"="n/a")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
	@"http://www.polarsys.org/capella/semantic"
	ref UnionProperty discriminant;

	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="Link to the default union property", constraints="n/a", "comment/notes"="n/a")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
	@"http://www.polarsys.org/capella/semantic"
	ref UnionProperty defaultProperty;

	@"http://www.polarsys.org/capella/derived"(viatra.variant="alias", viatra.expression="ownedFeatures")
	@"http://www.polarsys.org/capella/semantic"(feature="ownedFeatures")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="keyword::none", explanation="Derived and transient", constraints="none")
	readonly volatile transient derived ref UnionProperty[*] containedUnionProperties;
}

@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="defines the specific kind of a Union structure
[source: Capella study]", constraints="none", "comment/notes"="none")
@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
@"http://www.polarsys.org/capella/semantic"
enum UnionKind {

	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="used when the structure represents a union 
[source: Capella study]", constraints="none", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
	UNION = 0;

	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="used when the structure represents possible variants of the same data
[source: Capella study]", constraints="none", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
	VARIANT = 1;
}

@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="UnionProperty")
@"http://www.polarsys.org/capella/2007/UML2Mapping"(metaclass="Property", stereotype="eng.UnionProperty")
@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="(not used)", "usage guideline"="n/a", "used in levels"="n/a", "usage examples"="n/a", constraints="n/a", "comment/notes"="not used/implemented as of Capella", "reference documentation"="none")
@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", "base metaclass in UML/SysML profile "="", explanation="uml::Property", constraints="none")
@"http://www.polarsys.org/capella/semantic"
class UnionProperty extends Property {

	@"http://www.polarsys.org/capella/2007/UML2Mapping"(featureName="clientDependency", featureOwner="NamedElement")
	@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="qualifier")
	@"http://www.polarsys.org/capella/2007/ImpactAnalysis/Segment"
	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="(not used)", constraints="n/a", "comment/notes"="n/a")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="Order must be computed")
	@"http://www.polarsys.org/capella/semantic"
	ref datavalue.DataValue[*] qualifier;
}

@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="Unit")
@"http://www.polarsys.org/capella/2007/UML2Mapping"(metaclass="Class", stereotype="eng.Unit")
@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="A Unit is a quantity in terms of which the magnitudes of other quantities that have the same dimension can be stated. A
unit often relies on precise and reproducible ways to measure the unit. For example, a unit of length such as meter may
be specified as a multiple of a particular wavelength of light. A unit may also specify less stable or precise ways to
express some value, such as a cost expressed in some currency, or a severity rating measured by a numerical scale
[source: SysML specification v1.1]
", "usage guideline"="a unit is typically associated to a physical dimension element", "used in levels"="system/logical/physical", "usage examples"="n/a", constraints="none", "comment/notes"="none", "reference documentation"="none")
@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", "base metaclass in UML/SysML profile "="SysML::Blocks::Unit", explanation="none", constraints="none")
@"http://www.polarsys.org/capella/semantic"
class Unit extends capellacore.NamedElement {
}

@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="Port")
@"http://www.polarsys.org/capella/2007/UML2Mapping"(metaclass="Port")
@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="A port is an interaction point between a block or part and its environment that
is connected with other ports via connectors
[source: SysML specification v1.1]", "usage guideline"="n/a (Abstract)", "used in levels"="operational,system,logical,physical", arcardia_description="The connection point of an exchange on an entity is called a port.", "usage examples"="../img/usage_examples/ports_exchanges.png", constraints="none", "comment/notes"="none", "reference documentation"="none")
@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", "base metaclass in UML/SysML profile "="", explanation="uml::Port", constraints="none")
abstract class Port extends capellacore.NamedElement {

	@"http://www.polarsys.org/capella/derived"(viatra.variant="alias", viatra.expression="incomingTraces")
	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="contains the list of port realization link(s) pointing from other (typically lower level) port(s) to this port
[source: Capella study]", constraints="none", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="keyword::none", explanation="Derived and transient", constraints="none")
	readonly volatile transient derived ref PortRealization[*]#realizedPort incomingPortRealizations;

	@"http://www.polarsys.org/capella/derived"(viatra.variant="alias", viatra.expression="outgoingTraces")
	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="(automatically computed) list of port realization links starting from this port, and pointing to other (typically higher-level) ports.
[source: Capella study]", constraints="none", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="keyword::none", explanation="Derived and transient", constraints="none")
	readonly volatile transient derived ref PortRealization[*]#realizingPort outgoingPortRealizations;

	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="allows to associate state machines to this port, specifying the communication protocol of incoming data
[source: Capella study]", constraints="none", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="keyword::specific", explanation="Elements are contained in the nearest possible parent container.", constraints="none")
	@"http://www.polarsys.org/capella/semantic"
	val capellacommon.StateMachine[*] ownedProtocols;

	@"http://www.polarsys.org/capella/derived"(viatra.variant="alias", viatra.expression="incomingTraces")
	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="(automatically computed) list of allocation links pointing from other model elements, to this port
[source: Capella study]", constraints="none", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="keyword::none", explanation="Derived and transient", constraints="none")
	readonly volatile transient derived ref PortAllocation[*]#allocatedPort incomingPortAllocations;

	@"http://www.polarsys.org/capella/derived"(viatra.variant="alias", viatra.expression="outgoingTraces")
	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="(automatically computed) list of allocations links, starting from this port towards other model elements to which this port needs to be allocated
[source: Capella study]", constraints="none", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="keyword::none", explanation="Derived and transient", constraints="none")
	readonly volatile transient derived ref PortAllocation[*]#allocatingPort outgoingPortAllocations;

	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="lists the Interfaces that are provided through this port
[source: Capella study]", constraints="none", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
	@"http://www.polarsys.org/capella/semantic"
	ref cs.Interface[*] providedInterfaces;

	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="lists the Interfaces that are required by this port
[source: Capella study]", constraints="none", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
	@"http://www.polarsys.org/capella/semantic"
	ref cs.Interface[*] requiredInterfaces;

	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="the port realizations links that are owned/contained in this Port
[source: Capella study]", constraints="none", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="keyword::nearestpackage", explanation="Elements are contained in the nearest possible parent container.", constraints="Some elements on which PortRealization stereotype or any stereotype that inherits from it is applied")
	val PortRealization[*] ownedPortRealizations;

	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="the port allocation links that are owned/contained in this Port
[source: Capella study]", constraints="none", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="keyword::nearestpackage", explanation="Elements are contained in the nearest possible parent container.", constraints="Some elements on which PortAllocation stereotype or any stereotype that inherits from it is applied")
	val PortAllocation[*] ownedPortAllocations;
}

@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="a PortRealization is a specific kind of allocation link between two Ports (typically of different design levels, or of different nature)
[source: Capella study]", "usage guideline"="n/a", "used in levels"="operational,system,logical,physical", "usage examples"="../img/usage_examples/port_realization.png", constraints="none", "comment/notes"="none", "reference documentation"="none")
@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", "base metaclass in UML/SysML profile "="uml::Realization", explanation="none", constraints="none")
class PortRealization extends capellacore.Allocation {

	@"http://www.polarsys.org/capella/derived"(viatra.variant="alias", viatra.expression="targetElement")
	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="destiniation of the port realization : the port that is being realized
[source: Capella study]", constraints="none", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="keyword::none", explanation="Derived and transient", constraints="none")
	readonly volatile transient derived ref Port[1]#incomingPortRealizations realizedPort;

	@"http://www.polarsys.org/capella/derived"(viatra.variant="alias", viatra.expression="sourceElement")
	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="the source of the Port realization : the port that is realizing another port
[source: Capella study]", constraints="none", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="keyword::none", explanation="Derived and transient", constraints="none")
	readonly volatile transient derived ref Port[1]#outgoingPortRealizations realizingPort;
}

@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="specific kind of allocation link, between two Ports.
[source: Capella study]", "usage guideline"="n/a", "used in levels"="operational,system,logical,physical", "usage examples"="n/a", constraints="none", "comment/notes"="none", "reference documentation"="none")
@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", "base metaclass in UML/SysML profile "="SysML::Allocations::Allocate", explanation="none", constraints="none")
class PortAllocation extends capellacore.Allocation {

	@"http://www.polarsys.org/capella/derived"(viatra.variant="alias", viatra.expression="targetElement")
	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="the \"destination\" of the allocation link : the port that is being allocated by another port
[source: Capella study]", constraints="none", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="keyword::none", explanation="Derived and transient", constraints="none")
	readonly volatile transient derived ref Port#incomingPortAllocations allocatedPort;

	@"http://www.polarsys.org/capella/derived"(viatra.variant="alias", viatra.expression="sourceElement")
	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="the \"source\" of the allocation link : the port that is allocating the other port
[source: Capella study]", constraints="none", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="keyword::none", explanation="Derived and transient", constraints="none")
	readonly volatile transient derived ref Port#outgoingPortAllocations allocatingPort;
}

@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="Defined by functional characteristics that exist at a common boundary with co-functioning items and allow systems equipment to be compatible. 
An exchange item describes a required or produced data.
An exchange item has an exchange mechanism
[source:ARCADIA encyclopedia v0.8.0]", "usage guideline"="an exchange item should be created whenever there is a need to group data type elements that are bound by an applicative meaning, and should be treated as a whole", "used in levels"="operational,system,logical,physical,epbs", "usage examples"="n/a", constraints="none", "comment/notes"="none", "reference documentation"="none")
@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", "base metaclass in UML/SysML profile "="uml::Operation", explanation="none", constraints="none")
@"http://www.polarsys.org/capella/semantic"
class ExchangeItem extends modellingcore.AbstractExchangeItem, behavior.AbstractEvent, behavior.AbstractSignal, modellingcore.FinalizableElement, capellacore.GeneralizableElement {

	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="Communication principle associated to this exchange item
[source:ARCADIA encyclopedia v0.8.0]", constraints="none", type="refer to ExchangeMechanism definition", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
	@"http://www.polarsys.org/capella/semantic"
	attr ExchangeMechanism[1] exchangeMechanism;

	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="Set of exchange item elements that form the structure of the structured exchange item
[source:Capella study]", constraints="none", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="uml::Operation::ownedParameter", explanation="none", constraints="uml::Operation::ownedParameter elements on which ExchangeItemElement stereotype or any stereotype that inherits from it is applied")
	@"http://www.polarsys.org/capella/semantic"
	val ExchangeItemElement[*] ownedElements;

	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
	val InformationRealization[*] ownedInformationRealizations;

	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
	@"http://www.polarsys.org/capella/semantic"
	val ExchangeItemInstance[*] ownedExchangeItemInstances;

	@"http://www.polarsys.org/capella/derived"(viatra.variant="patternbody", viatra.expression="ExchangeItemAllocation.allocatedItem(eia, self);
ExchangeItemAllocation.allocatingInterface(eia, target);")
	@"http://www.polarsys.org/capella/semantic"(excludefrom="xmlpivot")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="keyword::none", explanation="Derived and transient", constraints="none")
	readonly volatile transient derived ref cs.Interface[*] allocatorInterfaces;

	@"http://www.polarsys.org/capella/derived"(viatra.variant="patternbody", viatra.expression="ExchangeItem.outgoingTraces(self, ir);
InformationRealization.targetElement(ir, target); ")
	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="class(es) realized by this class", constraints="none", "comment/notes"="none")
	@"http://www.polarsys.org/capella/semantic"
	readonly volatile transient derived ref ExchangeItem[*]#realizingExchangeItems realizedExchangeItems;

	@"http://www.polarsys.org/capella/derived"(viatra.variant="patternbody", viatra.expression="ExchangeItem.incomingTraces(self, ir);
InformationRealization.sourceElement(ir, target); ")
	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="class(es) realizing this class", constraints="none", "comment/notes"="none")
	@"http://www.polarsys.org/capella/semantic"(excludefrom="xmlpivot")
	readonly volatile transient derived ref ExchangeItem[*]#realizedExchangeItems realizingExchangeItems;

	@"http://www.polarsys.org/capella/derived"(viatra.variant="patternbody", viatra.expression="ExchangeItem.incomingTraces(self, eir);
ExchangeItemRealization.realizingOperation(eir, target); ")
	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="class(es) realizing this class", constraints="none", "comment/notes"="none")
	@"http://www.polarsys.org/capella/semantic"(excludefrom="xmlpivot")
	readonly volatile transient derived ref Operation[*]#realizedExchangeItems realizingOperations;
}

@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="a part of a structured exchange item
[source: Capella study]", "usage guideline"="n/a", "used in levels"="operational, system, logical, physical, epbs", "usage examples"="n/a", constraints="none", "comment/notes"="none", "reference documentation"="none")
@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", "base metaclass in UML/SysML profile "="uml::Parameter", explanation="none", constraints="none")
@"http://www.polarsys.org/capella/semantic"
class ExchangeItemElement extends capellacore.NamedElement, MultiplicityElement, capellacore.TypedElement {

	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="refer to ElementKind description", constraints="none", type="refer to ElementKind definition", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
	@"http://www.polarsys.org/capella/semantic"
	attr ElementKind kind;

	@"http://www.polarsys.org/capella/2007/UML2Mapping"(featureName="direction", featureOwner="Parameter")
	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="specifies whether the parameter is an input, an output, or both.
[source: Capella study]", constraints="none", type="see ParameterDirection definition", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="uml::Parameter::direction", explanation="none", constraints="none")
	@"http://www.polarsys.org/capella/semantic"
	attr ParameterDirection direction;

	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="n/a", constraints="none", type="none", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
	@"http://www.polarsys.org/capella/semantic"
	attr boolean composite;

	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="n/a", constraints="none", type="none", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
	@"http://www.polarsys.org/capella/semantic"
	ref Property[*] referencedProperties;
}

@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", "base metaclass in UML/SysML profile "="", explanation="none", constraints="none")
@"http://www.polarsys.org/capella/semantic"
class ExchangeItemInstance extends AbstractInstance {
}

@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="Realization link between two information items", "usage guideline"="_todo_reviewed: To complete once documentation about extension process will be done", "used in levels"="n/a", "usage examples"="n/a", constraints="none", "comment/notes"="none", "reference documentation"="none")
@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", "base metaclass in UML/SysML profile "="", explanation="uml::Comment", constraints="none")
class InformationRealization extends capellacore.Allocation {
}

@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="Enumeration of the different exchange mechanisms
[source:Capella study]", constraints="none", "comment/notes"="none")
@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
@"http://www.polarsys.org/capella/semantic"
enum ExchangeMechanism {

	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="Exchange mechanism not defined", constraints="none", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
	UNSET = 0;

	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="Continuous supply of a data
[Capella study]", constraints="none", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
	FLOW = 1;

	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="Sporadic supply of a data with a returned data
[Capella study]", constraints="none", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
	OPERATION = 2;

	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="Asynchronous information that is taken into account rapidly
[Capella study]", constraints="none", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
	EVENT = 3;

	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="Data taken into account (reading or writing) without taking care of producers or consumers
[Capella study]", constraints="none", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
	SHARED_DATA = 4;
}

@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="enumeration listing the various possibilities regarding the visibility of a feature of a class
[source: Capella study]", constraints="none", "comment/notes"="none")
@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
@"http://www.polarsys.org/capella/semantic"
enum ElementKind {

	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="used when ExchangeItemElement is described as a type for its ExchangeItem", constraints="none", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
	TYPE = 0;

	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="used when ExchangeItemElement is described as a member for its ExchangeItem", constraints="none", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
	MEMBER = 1;
}

@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="defines the specific kind of a Collection structure
[source: Capella study]", constraints="none", "comment/notes"="none")
@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
@"http://www.polarsys.org/capella/semantic"
enum CollectionKind {

	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="used when the collection is to be considered as an array of elements
[source: Capella study]", constraints="none", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="This enumeration literal has no UML-SysML equivalence")
	ARRAY = 0;

	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="used when the collection is to be considered as a sequence (list) of elements
[source: Capella study]", constraints="none", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="This enumeration literal has no UML-SysML equivalence")
	SEQUENCE = 1;
}

@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="Allocation link between exchange items and operation(s) of an interface that support them
[source: Capella study]", "usage guideline"="n/a", "used in levels"="operational,system,logical,physical", "usage examples"="n/a", constraints="none", "comment/notes"="none", "reference documentation"="none")
@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", "base metaclass in UML/SysML profile "="uml::Realization", explanation="none", constraints="none")
class ExchangeItemRealization extends capellacore.Allocation {

	@"http://www.polarsys.org/capella/derived"(viatra.variant="alias", viatra.expression="targetElement")
	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="the exchange item that is being realized by the operation
[source: Capella study]", constraints="none", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="keyword::none", explanation="Derived and transient", constraints="none")
	readonly volatile transient derived ref modellingcore.AbstractExchangeItem realizedItem;

	@"http://www.polarsys.org/capella/derived"(viatra.variant="alias", viatra.expression="sourceElement")
	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="the interface's operation that realizes the given exchange item
[source: Capella study]", constraints="none", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="keyword::none", explanation="Derived and transient", constraints="none")
	readonly volatile transient derived ref Operation realizingOperation;
}

@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="the element triggered by the reception of the event", constraints="none", "comment/notes"="none")
@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="uml::ReceiveOperationEvent::operation
uml::SentOperationEvent::operation", "base metaclass in UML/SysML profile "="", explanation="none", constraints="none")
abstract class AbstractEventOperation extends capellacore.NamedElement {

	@"http://www.polarsys.org/capella/derived"(viatra.variant="patternbody", viatra.expression="SequenceMessage.receivingEnd.event(target, ero);
	EventReceiptOperation.operation(ero, self);
} or {
	SequenceMessage.sendingEnd.event(target, eso);
	EventSentOperation.operation(eso, self);")
	@"http://www.polarsys.org/capella/semantic"(excludefrom="xmlpivot")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="keyword::none", explanation="Derived and transient", constraints="none")
	readonly volatile transient derived ref interaction.SequenceMessage[*] invokingSequenceMessages;
}

@"http://www.polarsys.org/kitalpha/emde/1.0.0/extension"(trackResourceModification="true", useUUIDs="false", useIDAttributes="true", extensibleProviderFactory="true", childCreationExtenders="true")
@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="sub-package containing the elements invovled in communication between elements (messages, signals, ...)
[source: Capella study]", "usage guideline"="none", "used in levels"="system,logical,physical", "usage examples"="none", constraints="none", "comment/notes"="none", "reference documentation"="n/a")
@"http://www.polarsys.org/capella/semantic"
@namespace(uri="http://www.polarsys.org/capella/core/information/communication/7.0.0", prefix="org.polarsys.capella.core.data.information.communication")
package communication {
	@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="CommunicationItem")
	@"http://www.polarsys.org/capella/2007/UML2Mapping"(metaclass="Classifier")
	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="Generic class serving as a common parent for dedicated communication artifacts
[source: Capella study]", "usage guideline"="n/a (Abstract)", "used in levels"="n/a", "usage examples"="n/a", constraints="none", "comment/notes"="none", "reference documentation"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", "base metaclass in UML/SysML profile "="", explanation="none", constraints="none")
	abstract class CommunicationItem extends capellacore.Classifier, datavalue.DataValueContainer {

		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="refer to VisibilityKind description
[source: Capella study]", constraints="none", type="refer to VisibilityKind definition
[source: Capella study]", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="uml::NamedElement::visibility", explanation="none", constraints="none")
		@"http://www.polarsys.org/capella/semantic"
		attr capellacore.VisibilityKind visibility;

		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="state machines associated to this communication item, as a mean to specify communication protocols
[source: Capella study]", constraints="none", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="keyword::specific", explanation="Elements are contained in the nearest possible parent container.", constraints="Elements on which StateMachine stereotype or any stereotype that inherits from it is applied")
		@"http://www.polarsys.org/capella/semantic"
		val capellacommon.StateMachine[*] ownedStateMachines;

		@"http://www.polarsys.org/capella/2007/UML2Mapping"(featureName="ownedAttribute", featureOwner="StructuredClassifier")
		@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="properties")
		@"http://www.polarsys.org/capella/2007/ImpactAnalysis/Segment"
		@"http://www.polarsys.org/capella/derived"(viatra.variant="alias", viatra.expression="ownedFeatures")
		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="attributes of the communication item
[source: Capella study]", constraints="none", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="keyword::specific", explanation="no found equivalent since the three children (Exception, Signal, Message) have different hierarchies. The specific rule should  create a package, stored the Properties in this package, and finally create a packageImport under the NamedElement reference for the element", constraints="elements inside the imported package on which a Property stereotype or any stereotype that inherits from it  is applied")
		readonly volatile transient derived !resolve ref Property[*] properties;
	}

	@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="Exception")
	@"http://www.polarsys.org/capella/2007/UML2Mapping"(metaclass="Class", stereotype="eng.Exception")
	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="A piece of  information raised (typically by an operation) to mention the occurence of an abnormal condition
[source: Capella study]", "usage guideline"="n/a", "used in levels"="system,logical,physical", "usage examples"="n/a", constraints="none", "comment/notes"="not used/implemented as of Capella 1.0.3", "reference documentation"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", "base metaclass in UML/SysML profile "="uml::Class", explanation="none", constraints="none")
	@"http://www.polarsys.org/capella/semantic"
	class Exception extends CommunicationItem {
	}

	@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="Message")
	@"http://www.polarsys.org/capella/2007/UML2Mapping"(metaclass="Class", stereotype="eng.Message")
	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="A piece of information flowing between two model elements
[source: Capella study]", "usage guideline"="n/a", "used in levels"="system,logical,physical", "usage examples"="n/a", constraints="none", "comment/notes"="none", "reference documentation"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", "base metaclass in UML/SysML profile "="uml::Message", explanation="none", constraints="none")
	@"http://www.polarsys.org/capella/semantic"
	class Message extends CommunicationItem {
	}

	@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="MessageReference")
	@"http://www.polarsys.org/capella/2007/UML2Mapping"(metaclass="Dependency", stereotype="eng.MessageReference")
	@"http://www.polarsys.org/capella/2007/ImpactAnalysis/Ignore"
	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="Implementation class supporting the referencing of a Message element
[source: Capella study]", "usage guideline"="n/a", "used in levels"="n/a", "usage examples"="n/a", constraints="none", "comment/notes"="none", "reference documentation"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", "base metaclass in UML/SysML profile "="uml::Dependency", explanation="none", constraints="none")
	@"http://www.polarsys.org/capella/semantic"
	class MessageReference extends capellacore.Relationship {

		@"http://www.polarsys.org/capella/2007/UML2Mapping"(featureName="supplier", featureOwner="Dependency")
		@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="message")
		@"http://www.polarsys.org/capella/2007/ImpactAnalysis/Segment"
		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="The message being referenced
[source: Capella study]", constraints="none", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="uml::Dependency::supplier", explanation="none", constraints="Multiplicity must be [1..1]")
		@"http://www.polarsys.org/capella/semantic"
		ref Message[1] message;
	}

	@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="MessageReferencePkg")
	@"http://www.polarsys.org/capella/2007/UML2Mapping"(metaclass="Package")
	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="a container for message references elements
[source: Capella study]", "usage guideline"="n/a", "used in levels"="n/a", "usage examples"="n/a", constraints="none", "comment/notes"="none", "reference documentation"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", "base metaclass in UML/SysML profile "="", explanation="none", constraints="none")
	abstract class MessageReferencePkg extends capellacore.Structure {

		@"http://www.polarsys.org/capella/2007/UML2Mapping"(featureName="packagedElement", featureOwner="Package")
		@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="ownedMessageReferences")
		@"http://www.polarsys.org/capella/2007/ImpactAnalysis/Segment"
		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="the list of MessageReference elements contained in this package
[source: Capella study]", constraints="none", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="uml::Package::packagedElement", explanation="none", constraints="uml::Package::packagedElement elements on which MessageReference stereotype or any stereotype that inherits from it is applied
Order must be computed")
		@"http://www.polarsys.org/capella/semantic"
		!resolve val MessageReference[*] ownedMessageReferences;
	}

	@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="Signal")
	@"http://www.polarsys.org/capella/2007/UML2Mapping"(metaclass="Signal", stereotype="eng.Signal")
	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="A signal is a specification of send request instances communicated between objects. The receiving object handles the
received request instances as specified by its receptions. The data carried by a send request (which was passed to it by the
send invocation occurrence that caused that request) are represented as attributes of the signal. A signal is defined
independently of the classifiers handling the signal occurrence
[source: UML superstructure v2.2]", "usage guideline"="n/a", "used in levels"="system,logical,physical", "usage examples"="n/a", constraints="none", "comment/notes"="none", "reference documentation"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", "base metaclass in UML/SysML profile "="uml::Signal", explanation="none", constraints="none")
	@"http://www.polarsys.org/capella/semantic"
	class Signal extends CommunicationItem, behavior.AbstractSignal {

		@"http://www.polarsys.org/capella/2007/UML2Mapping"(featureName="ownedAttribute", featureOwner="Signal")
		@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="signalInstances")
		@"http://www.polarsys.org/capella/2007/ImpactAnalysis/Segment"
		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="list of signal instances associated with this Signal
[source: Capella study]", constraints="none", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="uml::Signal::ownedAttribute", explanation="none", constraints="uml::Signal::ownedAttribute elements on which SignalInstance stereotype or any stereotype that inherits from it is applied")
		@"http://www.polarsys.org/capella/semantic"
		val SignalInstance[*] signalInstances;
	}

	@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="SignalInstance")
	@"http://www.polarsys.org/capella/2007/UML2Mapping"(metaclass="Property", stereotype="eng.SignalInstance")
	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="instance of a Signal element
[source: Capella study]", "usage guideline"="n/a", "used in levels"="n/a", "usage examples"="n/a", constraints="none", "comment/notes"="none", "reference documentation"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", "base metaclass in UML/SysML profile "="", explanation="uml::Property", constraints="none")
	@"http://www.polarsys.org/capella/semantic"
	class SignalInstance extends AbstractInstance {
	}

	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="enumeration listing the various possibilities of communication links
[source: Capella study]", constraints="none", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
	@"http://www.polarsys.org/capella/semantic"
	enum CommunicationLinkKind {

		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="used when the CommunicationLink protocol is not yet set", constraints="none", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
		UNSET = 0;

		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="used when the CommunicationLink is used to describe a production of ExchangeItem", constraints="none", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
		PRODUCE = 1;

		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="used when the CommunicationLink is used to describe a comsumption of ExchangeItem", constraints="none", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
		CONSUME = 2;

		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="used when the CommunicationLink is used to describe a sending of ExchangeItem", constraints="none", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
		SEND = 3;

		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="used when the CommunicationLink is used to describe a reception of ExchangeItem", constraints="none", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
		RECEIVE = 4;

		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="used when the CommunicationLink is used to describe a call of ExchangeItem", constraints="none", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
		CALL = 5;

		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="used when the CommunicationLink is used to describe an execution of ExchangeItem", constraints="none", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
		EXECUTE = 6;

		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="used when the CommunicationLink is used to describe a writing of ExchangeItem", constraints="none", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
		WRITE = 7;

		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="used when the CommunicationLink is used to describe an access to the ExchangeItem", constraints="none", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
		ACCESS = 8;

		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="used when the CommunicationLink is used to describe an acquisition of ExchangeItem", constraints="none", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
		ACQUIRE = 9;

		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="used when the CommunicationLink is used to describe a transmission of ExchangeItem", constraints="none", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
		TRANSMIT = 10;
	}

	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="enumeration listing the various possibilities for the protocol of the communication link", constraints="none", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
	@"http://www.polarsys.org/capella/semantic"
	enum CommunicationLinkProtocol {

		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="used when the CommunicationLink protocol is not yet set", constraints="none", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
		UNSET = 0;

		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="used when the CommunicationLink is used to describe a sending of ExchangeItem using the unicast protocol", constraints="none", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
		UNICAST = 1;

		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="used when the CommunicationLink is used to describe a sending of ExchangeItem using the multicast protocol", constraints="none", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
		MULTICAST = 2;

		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="used when the CommunicationLink is used to describe a sending of ExchangeItem using the broadcast protocol", constraints="none", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
		BROADCAST = 3;

		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="used when the CommunicationLink is used to describe a call of ExchangeItem using the synchronous protocol", constraints="none", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
		SYNCHRONOUS = 4;

		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="used when the CommunicationLink is used to describe a call of ExchangeItem using the asynchronous protocol", constraints="none", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
		ASYNCHRONOUS = 5;

		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="used when the CommunicationLink is used to describe a access to the ExchangeItem by reading it", constraints="none", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
		READ = 6;

		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="used when the CommunicationLink is used to describe a access to the ExchangeItem by accepting it", constraints="none", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
		ACCEPT = 7;
	}

	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="describes a link of communication using exchange items", constraints="none", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", "base metaclass in UML/SysML profile "="", explanation="none", constraints="none")
	@"http://www.polarsys.org/capella/semantic"
	class CommunicationLink extends capellacore.CapellaElement {

		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="refer to CommunicationLinkKind description", constraints="none", type="refer to CommunicationLinkKind definition", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
		@"http://www.polarsys.org/capella/semantic"
		attr CommunicationLinkKind kind;

		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="refer to CommunicationLinkProtocol description", constraints="none", type="refer to CommunicationLinkProtocol definition", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
		@"http://www.polarsys.org/capella/semantic"
		attr CommunicationLinkProtocol protocol;

		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="describes the exchange item related to the link", constraints="none", type="refer to CommunicationLinkProtocol definition", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
		@"http://www.polarsys.org/capella/semantic"
		ref ExchangeItem exchangeItem;
	}

	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="describes an element which can communicate using ExchangeItems", constraints="none", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
	abstract class CommunicationLinkExchanger {

		@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="ownedCommunicationLinks")
		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="list of all communication links owned by the communication exchanger", constraints="none", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
		@"http://www.polarsys.org/capella/semantic"
		val CommunicationLink[*] ownedCommunicationLinks;

		@"http://www.polarsys.org/capella/derived"(viatra.variant="patternbody", viatra.expression="CommunicationLinkExchanger.ownedCommunicationLinks(self, target);
CommunicationLink.kind(target, ::PRODUCE);")
		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="(automatically computed) list of all production CommunicationLinks", constraints="none", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
		readonly volatile transient derived ref CommunicationLink[*] produce;

		@"http://www.polarsys.org/capella/derived"(viatra.variant="patternbody", viatra.expression="CommunicationLinkExchanger.ownedCommunicationLinks(self, target);
CommunicationLink.kind(target, ::CONSUME);")
		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="(automatically computed) list of all consumption CommunicationLinks", constraints="none", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
		readonly volatile transient derived ref CommunicationLink[*] consume;

		@"http://www.polarsys.org/capella/derived"(viatra.variant="patternbody", viatra.expression="CommunicationLinkExchanger.ownedCommunicationLinks(self, target);
CommunicationLink.kind(target, ::SEND);")
		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="(automatically computed) list of all sending CommunicationLinks", constraints="none", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
		readonly volatile transient derived ref CommunicationLink[*] send;

		@"http://www.polarsys.org/capella/derived"(viatra.variant="patternbody", viatra.expression="CommunicationLinkExchanger.ownedCommunicationLinks(self, target);
CommunicationLink.kind(target, ::RECEIVE);")
		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="(automatically computed) list of all receiving CommunicationLinks", constraints="none", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
		readonly volatile transient derived ref CommunicationLink[*] receive;

		@"http://www.polarsys.org/capella/derived"(viatra.variant="patternbody", viatra.expression="CommunicationLinkExchanger.ownedCommunicationLinks(self, target);
CommunicationLink.kind(target, ::CALL);")
		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="(automatically computed) list of all calling CommunicationLinks", constraints="none", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
		readonly volatile transient derived ref CommunicationLink[*] call;

		@"http://www.polarsys.org/capella/derived"(viatra.variant="patternbody", viatra.expression="CommunicationLinkExchanger.ownedCommunicationLinks(self, target);
CommunicationLink.kind(target, ::EXECUTE);")
		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="(automatically computed) list of all execution CommunicationLinks", constraints="none", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
		readonly volatile transient derived ref CommunicationLink[*] execute;

		@"http://www.polarsys.org/capella/derived"(viatra.variant="patternbody", viatra.expression="CommunicationLinkExchanger.ownedCommunicationLinks(self, target);
CommunicationLink.kind(target, ::WRITE);")
		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="(automatically computed) list of all writing CommunicationLinks", constraints="none", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
		readonly volatile transient derived ref CommunicationLink[*] write;

		@"http://www.polarsys.org/capella/derived"(viatra.variant="patternbody", viatra.expression="CommunicationLinkExchanger.ownedCommunicationLinks(self, target);
CommunicationLink.kind(target, ::ACCESS);")
		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="(automatically computed) list of all accessing CommunicationLinks", constraints="none", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
		readonly volatile transient derived ref CommunicationLink[*] access;

		@"http://www.polarsys.org/capella/derived"(viatra.variant="patternbody", viatra.expression="CommunicationLinkExchanger.ownedCommunicationLinks(self, target);
CommunicationLink.kind(target, ::ACQUIRE);")
		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="(automatically computed) list of all acquiring CommunicationLinks", constraints="none", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
		readonly volatile transient derived ref CommunicationLink[*] acquire;

		@"http://www.polarsys.org/capella/derived"(viatra.variant="patternbody", viatra.expression="CommunicationLinkExchanger.ownedCommunicationLinks(self, target);
CommunicationLink.kind(target, ::TRANSMIT);")
		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="(automatically computed) list of all transmitting CommunicationLinks", constraints="none", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
		readonly volatile transient derived ref CommunicationLink[*] transmit;
	}

}

@"http://www.polarsys.org/kitalpha/emde/1.0.0/extension"(trackResourceModification="true", useUUIDs="false", useIDAttributes="true", extensibleProviderFactory="true", childCreationExtenders="true")
@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="sub-package containing the definition of the predefined data types
[source: Capella study]", "usage guideline"="none", "used in levels"="system,logical,physical", "usage examples"="none", constraints="none", "comment/notes"="none", "reference documentation"="n/a")
@"http://www.polarsys.org/capella/semantic"
@namespace(uri="http://www.polarsys.org/capella/core/information/datatype/7.0.0", prefix="org.polarsys.capella.core.data.information.datatype")
package ~datatype {
	@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="DataType")
	@"http://www.polarsys.org/capella/2007/UML2Mapping"(metaclass="DataType", stereotype="eng.DataType")
	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="A data type is a type whose instances are identified only by their value. A DataType may contain attributes to support the
modeling of structured data types
[source: UML superstructure v2.2]", "usage guideline"="DataTypes should be created for every grouping of data in the system that makes sense from an application standpoint.
It is especially valuable to avoid redondancy of data structure definitions, and to breakdown the complexity of data structures into manageable bits.", "used in levels"="operational,system,logical,physical", "usage examples"="n/a", constraints="none", "comment/notes"="none", "reference documentation"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", "base metaclass in UML/SysML profile "="", explanation="uml::DataType", constraints="none")
	abstract class DataType extends capellacore.GeneralizableElement, datavalue.DataValueContainer, modellingcore.FinalizableElement {

		@"http://www.polarsys.org/capella/2007/UML2Mapping"(featureName="isDiscreet", featureOwner="eng.DataType", fromStereotype="true")
		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="specifies whether or not this data type characterizes a discrete value (versus continuous value)
[source: Capella study]", constraints="none", type="n/a", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
		@"http://www.polarsys.org/capella/semantic"
		attr boolean discrete = true;

		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="none", constraints="none", type="n/a", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
		@"http://www.polarsys.org/capella/semantic"
		attr boolean minInclusive = true;

		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="none", constraints="none", type="n/a", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
		@"http://www.polarsys.org/capella/semantic"
		attr boolean maxInclusive = true;

		@"http://www.polarsys.org/capella/2007/UML2Mapping"(featureName="constraint", featureOwner="eng.DataType", fromStereotype="true")
		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="textual specification of a constraint associated to this data type
[source: Capella study]", constraints="none", type="n/a", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
		@"http://www.polarsys.org/capella/semantic"
		attr String pattern;

		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="refer to VisibilityKind description
[source: Capella study]", constraints="none", type="refer to VisibilityKind definition", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="uml::NamedElement:visibility", explanation="none", constraints="none")
		@"http://www.polarsys.org/capella/semantic"
		attr capellacore.VisibilityKind visibility;

		@"http://www.polarsys.org/capella/derived"(viatra.variant="patternbody", viatra.expression="BooleanType.ownedDefaultValue(self, target);
} or {
	StringType.ownedDefaultValue(self, target);
} or {
	Enumeration.ownedDefaultValue(self, target);
} or {
	NumericType.ownedDefaultValue(self, target);
} or {
	PhysicalQuantity.ownedDefaultValue(self, target);

")
		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="allows to specify a default value for this data type
[source: Capella study]", constraints="none", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="keyword::none", explanation="Derived and transient", constraints="none")
		@"http://www.polarsys.org/capella/semantic"
		readonly volatile transient derived ref datavalue.DataValue defaultValue;

		@"http://www.polarsys.org/capella/derived"(viatra.variant="patternbody", viatra.expression="StringType.ownedNullValue(self, target);
} or {
	Enumeration.ownedNullValue(self, target);
} or {
	NumericType.ownedNullValue(self, target);
} or {
	PhysicalQuantity.ownedNullValue(self, target);

")
		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="allows to specify the nature/value of the \"null\" value for this type of data
[source: Capella study]", constraints="none", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="keyword::none", explanation="Derived and transient", constraints="none")
		@"http://www.polarsys.org/capella/semantic"
		readonly volatile transient derived ref datavalue.DataValue nullValue;

		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="")
		val InformationRealization[*] ownedInformationRealizations;

		@"http://www.polarsys.org/capella/derived"(viatra.variant="patternbody", viatra.expression="DataType.outgoingTraces(self, ir);
InformationRealization.targetElement(ir, target); ")
		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="class(es) realized by this class", constraints="none", "comment/notes"="none")
		@"http://www.polarsys.org/capella/semantic"
		readonly volatile transient derived ref DataType[*]#realizingDataTypes realizedDataTypes;

		@"http://www.polarsys.org/capella/derived"(viatra.variant="patternbody", viatra.expression="DataType.incomingTraces(self, ir);
InformationRealization.sourceElement(ir, target); ")
		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="class(es) realizing this class", constraints="none", "comment/notes"="none")
		@"http://www.polarsys.org/capella/semantic"(excludefrom="xmlpivot")
		readonly volatile transient derived ref DataType[*]#realizedDataTypes realizingDataTypes;
	}

	@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="BooleanType")
	@"http://www.polarsys.org/capella/2007/UML2Mapping"(metaclass="DataType", stereotype="eng.BooleanType")
	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="A boolean is an instance of PrimitiveType. In the metamodel, Boolean defines an enumeration that denotes a logical
condition. Its enumeration literals are:
- true - The Boolean condition is satisfied.
- false - The Boolean condition is not satisfied
[source: UML superstructure v2.2]
", "usage guideline"="n/a", "used in levels"="operational,system,logical,physical", "usage examples"="n/a", constraints="none", "comment/notes"="none", "reference documentation"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", "base metaclass in UML/SysML profile "="uml::PrimitiveType", explanation="none", constraints="none")
	@"http://www.polarsys.org/capella/semantic"
	class BooleanType extends DataType {

		@"http://www.polarsys.org/capella/2007/UML2Mapping"(featureName="ownedLiteral", featureOwner="Enumeration")
		@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="literals")
		@"http://www.polarsys.org/capella/2007/ImpactAnalysis/Segment"
		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="the literals that are contained in this enumeration
[source: Capella study]", constraints="none", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="keyword::specific", explanation="none", constraints="none")
		@"http://www.polarsys.org/capella/semantic"
		!resolve val datavalue.LiteralBooleanValue[0..2] ownedLiterals;

		@"http://www.polarsys.org/capella/2007/UML2Mapping"(featureName="clientDependency", featureOwner="NamedElement")
		@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="defaultValue")
		@"http://www.polarsys.org/capella/2007/ImpactAnalysis/Segment"
		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="default value for this data type
[source: Capella study]", constraints="none", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="keyword::specific", explanation="none", constraints="Elements on which BooleanValue stereotype or any stereotype that inherits from it is applied")
		@"http://www.polarsys.org/capella/semantic"
		val datavalue.AbstractBooleanValue ownedDefaultValue;
	}

	@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="Enumeration")
	@"http://www.polarsys.org/capella/2007/UML2Mapping"(metaclass="Enumeration", stereotype="eng.Enumeration")
	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="An enumeration is a kind of data type, whose instances may be any of a number of user-defined enumeration literals
[source: UML superstructure v2.2]", "usage guideline"="an enumeration should be created/used whenever all possible values for a parameter are predefined (and the number of values is reasonably limited...)", "used in levels"="operational,system,logical,physical", "usage examples"="n/a", constraints="none", "comment/notes"="none", "reference documentation"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", "base metaclass in UML/SysML profile "="uml::Enumeration", explanation="none", constraints="none")
	@"http://www.polarsys.org/capella/semantic"
	class Enumeration extends DataType {

		@"http://www.polarsys.org/capella/2007/UML2Mapping"(featureName="ownedLiteral", featureOwner="Enumeration")
		@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="literals")
		@"http://www.polarsys.org/capella/2007/ImpactAnalysis/Segment"
		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="the literals that are contained in this enumeration
[source: Capella study]", constraints="none", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="uml::Enumeration::ownedLiteral", explanation="none", constraints="none")
		@"http://www.polarsys.org/capella/semantic"
		!resolve val datavalue.EnumerationLiteral[*] ownedLiterals;

		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="default value among this enumeration
[source: Capella study]", constraints="none", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="keyword::specific", explanation="none", constraints="Elements on which EnumerationValue stereotype or any stereotype that inherits from it is applied")
		@"http://www.polarsys.org/capella/semantic"
		val datavalue.AbstractEnumerationValue ownedDefaultValue;

		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="Null value among this enumeration
[source: Capella study]", constraints="none", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="keyword::specific", explanation="none", constraints="Elements on which EnumerationValue stereotype or any stereotype that inherits from it is applied")
		@"http://www.polarsys.org/capella/semantic"
		val datavalue.AbstractEnumerationValue ownedNullValue;

		@"http://www.polarsys.org/capella/2007/UML2Mapping"(featureName="clientDependency", featureOwner="NamedElement")
		@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="minValue")
		@"http://www.polarsys.org/capella/2007/ImpactAnalysis/Segment"
		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="specification of the minimum value for this data type
[source: Capella study]", constraints="none", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="keyword::specific", constraints="uml::NamedElement::clientDependency elements on which NumericType stereotype or any stereotype that inherits from it is applied", explanation="_todo_ Treat difference between default, null, min and max values
")
		@"http://www.polarsys.org/capella/semantic"
		val datavalue.AbstractEnumerationValue ownedMinValue;

		@"http://www.polarsys.org/capella/2007/UML2Mapping"(featureName="clientDependency", featureOwner="NamedElement")
		@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="maxValue")
		@"http://www.polarsys.org/capella/2007/ImpactAnalysis/Segment"
		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="specification of the maximum value for this data type
[source: Capella study]", constraints="none", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="keyword::specific", constraints="uml::NamedElement::clientDependency elements on which NumericType stereotype or any stereotype that inherits from it is applied", explanation="_todo_ Treat difference between default, null, min and max values
")
		@"http://www.polarsys.org/capella/semantic"
		val datavalue.AbstractEnumerationValue ownedMaxValue;

		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="none", "usage guideline"="n/a", "used in levels"="n/a", "usage examples"="n/a", constraints="none", "comment/notes"="none", "reference documentation"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
		@"http://www.polarsys.org/capella/semantic"
		ref DataType domainType;
	}

	@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="StringType")
	@"http://www.polarsys.org/capella/2007/UML2Mapping"(metaclass="DataType", stereotype="eng.StringType")
	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="A string is a sequence of characters in some suitable character set used to display information about the model
[source: UML superstructure v2.2]", "usage guideline"="n/a", "used in levels"="operational,system,logical,physical", "usage examples"="n/a", constraints="none", "comment/notes"="none", "reference documentation"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", "base metaclass in UML/SysML profile "="uml::DataType", explanation="none", constraints="none")
	@"http://www.polarsys.org/capella/semantic"
	class StringType extends DataType {

		@"http://www.polarsys.org/capella/2007/UML2Mapping"(featureName="clientDependency", featureOwner="NamedElement")
		@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="defaultValue")
		@"http://www.polarsys.org/capella/2007/ImpactAnalysis/Segment"
		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="the default value for this data type
[source: Capella study]", constraints="none", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="keyword::specific", explanation="none", constraints="Elements on which StringValue stereotype or any stereotype that inherits from it is applied")
		@"http://www.polarsys.org/capella/semantic"
		val datavalue.AbstractStringValue ownedDefaultValue;

		@"http://www.polarsys.org/capella/2007/UML2Mapping"(featureName="clientDependency", featureOwner="NamedElement")
		@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="nullValue")
		@"http://www.polarsys.org/capella/2007/ImpactAnalysis/Segment"
		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="the neutral value for this data type
[source: Capella study]", constraints="none", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="keyword::specific", explanation="none", constraints="Elements on which StringValue stereotype or any stereotype that inherits from it is applied")
		@"http://www.polarsys.org/capella/semantic"
		val datavalue.AbstractStringValue ownedNullValue;

		@"http://www.polarsys.org/capella/2007/UML2Mapping"(featureName="clientDependency", featureOwner="NamedElement")
		@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="minLength")
		@"http://www.polarsys.org/capella/2007/ImpactAnalysis/Segment"
		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="specification of the minimum length of the string
[source: Capella study]", constraints="none", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="keyword::specific", explanation="none", constraints="Elements on which FunctionRealization stereotype or any stereotype that inherits from it is applied")
		@"http://www.polarsys.org/capella/semantic"
		val datavalue.NumericValue ownedMinLength;

		@"http://www.polarsys.org/capella/2007/UML2Mapping"(featureName="clientDependency", featureOwner="NamedElement")
		@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="maxLength")
		@"http://www.polarsys.org/capella/2007/ImpactAnalysis/Segment"
		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="specification of the maximum length of the string
[source: Capella study]", constraints="none", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="keyword::specific", explanation="none", constraints="Elements on which UnlimitedNaturalValue stereotype or any stereotype that inherits from it is applied")
		@"http://www.polarsys.org/capella/semantic"
		val datavalue.NumericValue ownedMaxLength;
	}

	@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="NumericType")
	@"http://www.polarsys.org/capella/2007/UML2Mapping"(metaclass="DataType", stereotype="eng.NumericType")
	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="Characterizes a value that can be expressed by a sequence of numbers
[source: Capella study]", "usage guideline"="n/a", "used in levels"="operational,system,logical,physical", "usage examples"="n/a", constraints="none", "comment/notes"="none", "reference documentation"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", "base metaclass in UML/SysML profile "="uml::DataType", explanation="none", constraints="none")
	@"http://www.polarsys.org/capella/semantic"
	class NumericType extends DataType {

		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="specifies the kind of this numeric type
[source: Capella study]", constraints="none", type="refer to NumericTypeKind", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
		@"http://www.polarsys.org/capella/semantic"
		attr NumericTypeKind kind = "INTEGER";

		@"http://www.polarsys.org/capella/2007/UML2Mapping"(featureName="clientDependency", featureOwner="NamedElement")
		@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="defaultValue")
		@"http://www.polarsys.org/capella/2007/ImpactAnalysis/Segment"
		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="the default value for this data type
[source: Capella study]", constraints="none", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="keyword::specific", explanation="none", constraints="Elements on which NumericValue stereotype or any stereotype that inherits from it is applied")
		@"http://www.polarsys.org/capella/semantic"
		val datavalue.NumericValue ownedDefaultValue;

		@"http://www.polarsys.org/capella/2007/UML2Mapping"(featureName="clientDependency", featureOwner="NamedElement")
		@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="nullValue")
		@"http://www.polarsys.org/capella/2007/ImpactAnalysis/Segment"
		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="the neutral value for this data type
[source: Capella study]", constraints="none", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="keyword::specific", explanation="none", constraints="Elements on which NumericValue stereotype or any stereotype that inherits from it is applied")
		@"http://www.polarsys.org/capella/semantic"
		val datavalue.NumericValue ownedNullValue;

		@"http://www.polarsys.org/capella/2007/UML2Mapping"(featureName="clientDependency", featureOwner="NamedElement")
		@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="minValue")
		@"http://www.polarsys.org/capella/2007/ImpactAnalysis/Segment"
		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="specification of the minimum value for this data type
[source: Capella study]", constraints="none", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="keyword::specific", explanation="none", constraints="Elements on which NumericValue stereotype or any stereotype that inherits from it is applied")
		@"http://www.polarsys.org/capella/semantic"
		val datavalue.NumericValue ownedMinValue;

		@"http://www.polarsys.org/capella/2007/UML2Mapping"(featureName="clientDependency", featureOwner="NamedElement")
		@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="maxValue")
		@"http://www.polarsys.org/capella/2007/ImpactAnalysis/Segment"
		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="specification of the maximum value for this data type
[source: Capella study]", constraints="none", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="keyword::specific", explanation="none", constraints="Elements on which NumericValue stereotype or any stereotype that inherits from it is applied")
		@"http://www.polarsys.org/capella/semantic"
		val datavalue.NumericValue ownedMaxValue;
	}

	@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="PhysicalDimension")
	@"http://www.polarsys.org/capella/2007/UML2Mapping"(metaclass="DataType", stereotype="eng.PhysicalDimension")
	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="A Physical Quantity is a measurable value of a physical property of a thing or a movement. It referes to a Unit.

A Dimension (SysML notion of Physical Quantity) is a kind of quantity that may be stated by means of defined units. For example, the dimension of length may be measured by units of meters, kilometers, or feet
[source: SysML specification v1.1]", "usage guideline"="n/a", "used in levels"="system/logical/physical", "usage examples"="n/a", constraints="none", "comment/notes"="none", "reference documentation"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", "base metaclass in UML/SysML profile "="", explanation="should be SysML::Blocks::ValueType, but its parent is concrete and already mapped (to uml::DataType), 
so do not map this one too to prevent Papyrus errors.", constraints="none")
	@"http://www.polarsys.org/capella/semantic"
	class PhysicalQuantity extends NumericType {

		@"http://www.polarsys.org/capella/2007/UML2Mapping"(featureName="clientDependency", featureOwner="NamedElement")
		@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="unit")
		@"http://www.polarsys.org/capella/2007/ImpactAnalysis/Segment"
		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="the unit of this physical dimension
[source: Capella study]", constraints="none", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
		@"http://www.polarsys.org/capella/semantic"
		ref Unit unit;
	}

	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="Specifies the kind of this numeric data type
[source: Capella study]", constraints="none", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
	@"http://www.polarsys.org/capella/semantic"
	enum NumericTypeKind {

		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="Used when the numeric type refers to an integer value
[source: Capella study]", constraints="none", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
		INTEGER = 0;

		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="Used when the numeric type refers to a float value
[source: Capella study]", constraints="none", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
		FLOAT = 1;
	}

}

@"http://www.polarsys.org/kitalpha/emde/1.0.0/extension"(trackResourceModification="true", useUUIDs="false", useIDAttributes="true", extensibleProviderFactory="true", childCreationExtenders="true")
@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="sub-package containing the definition of all predefined kinds of data values
[source: Capella study]", "usage guideline"="none", "used in levels"="system,logical,physical", "usage examples"="none", constraints="none", "comment/notes"="none", "reference documentation"="n/a")
@"http://www.polarsys.org/capella/semantic"
@namespace(uri="http://www.polarsys.org/capella/core/information/datavalue/7.0.0", prefix="org.polarsys.capella.core.data.information.datavalue")
package datavalue {
	@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="DataValue")
	@"http://www.polarsys.org/capella/2007/UML2Mapping"(metaclass="LiteralSpecification", stereotype="eng.DataValue")
	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="Generic class for the specification of value for data of a given type
[source: Capella study]", "usage guideline"="n/a (Abstract)", "used in levels"="operational,system,logical,physical,epbs", "usage examples"="n/a", constraints="none", "comment/notes"="none", "reference documentation"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", "base metaclass in UML/SysML profile "="", explanation="uml::ValueSpecification", constraints="none")
	abstract class DataValue extends capellacore.NamedElement, modellingcore.ValueSpecification {

		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="whether or not the value is abstract", constraints="none", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
		@"http://www.polarsys.org/capella/semantic"
		attr boolean ~abstract;

		@"http://www.polarsys.org/capella/derived"(viatra.variant="alias", viatra.expression="abstractType")
		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="The type of the TypedElement
[source:UML Superstructure v2.2]", constraints="none", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="keyword::none", explanation="Derived and transient", constraints="none")
		@"http://www.polarsys.org/capella/semantic"(feature="abstractType")
		readonly volatile transient derived ref capellacore.Type type;
	}

	@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="DataTypePkg")
	@"http://www.polarsys.org/capella/2007/UML2Mapping"(metaclass="Package")
	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="container for DataValue elements
[source: Capella study]", "usage guideline"="Use DataValue packages to provide an appropriate structure to the data model", "used in levels"="operational,system,logical,physical,epbs", "usage examples"="n/a", constraints="none", "comment/notes"="none", "reference documentation"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", "base metaclass in UML/SysML profile "="", explanation="uml::Package", constraints="none")
	abstract class DataValueContainer extends capellacore.Structure {

		@"http://www.polarsys.org/capella/2007/UML2Mapping"(featureName="packagedElement", featureOwner="Package")
		@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="ownedDataValues")
		@"http://www.polarsys.org/capella/2007/ImpactAnalysis/Segment"
		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="DataValue elements contained in this package
[source: Capella study]", constraints="none", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="uml::Package::packagedElement", explanation="none", constraints="uml::Package::packagedElement elements on which DataValue stereotype or any stereotype that inherits from it is applied
Order must be computed")
		@"http://www.polarsys.org/capella/semantic"
		!resolve val DataValue[*] ownedDataValues;
	}

	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="Base class for defining type-specific boolean values
[source: Capella light-light study]
", "usage guideline"="n/a", "used in levels"="n/a", "usage examples"="n/a", constraints="none", "comment/notes"="none", "reference documentation"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", "base metaclass in UML/SysML profile "="", explanation="", constraints="none")
	abstract class AbstractBooleanValue extends DataValue {

		@"http://www.polarsys.org/capella/2007/UML2Mapping"(featureName="type", featureOwner="TypedElement")
		@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="type")
		@"http://www.polarsys.org/capella/2007/ImpactAnalysis/Segment"
		@"http://www.polarsys.org/capella/derived"(viatra.variant="alias", viatra.expression="abstractType")
		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="the type of the data being valued
[source: Capella study]", constraints="none", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="keyword::none", explanation="Derived and transient", constraints="none")
		@"http://www.polarsys.org/capella/semantic"(feature="abstractType", excludefrom="xmlpivot")
		readonly volatile transient derived ref ~datatype.BooleanType booleanType;
	}

	@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="LiteralBooleanValue")
	@"http://www.polarsys.org/capella/2007/UML2Mapping"(metaclass="LiteralBoolean", stereotype="eng.LiteralBooleanValue")
	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="A literal Boolean is a specification of a Boolean value
[source: UML superstructure v2.2]", "usage guideline"="n/a", "used in levels"="n/a", "usage examples"="n/a", constraints="none", "comment/notes"="none", "reference documentation"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", "base metaclass in UML/SysML profile "="uml::LiteralBoolean", explanation="none", constraints="none")
	@"http://www.polarsys.org/capella/semantic"
	class LiteralBooleanValue extends AbstractBooleanValue {

		@"http://www.polarsys.org/capella/2007/UML2Mapping"(featureName="value", featureOwner="LiteralBoolean")
		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="the value \"true\" or \"false\"
[source: Capella study]", constraints="none", type="none", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="uml::LiteralBoolean::value", explanation="none", constraints="none")
		@"http://www.polarsys.org/capella/semantic"
		attr boolean value;
	}

	@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="BooleanReference")
	@"http://www.polarsys.org/capella/2007/UML2Mapping"(metaclass="Expression", stereotype="eng.BooleanReference")
	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="A reference to a boolean value, allowing the reuse of boolean values across data value structures
[source: Capella study]", "usage guideline"="n/a", "used in levels"="operational,system,logical,physical", "usage examples"="n/a", constraints="none", "comment/notes"="none", "reference documentation"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", "base metaclass in UML/SysML profile "="uml::Expression", explanation="none", constraints="none")
	@"http://www.polarsys.org/capella/semantic"
	class BooleanReference extends AbstractBooleanValue {

		@"http://www.polarsys.org/capella/2007/UML2Mapping"(featureName="clientDependency", featureOwner="NamedElement")
		@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="reference")
		@"http://www.polarsys.org/capella/2007/ImpactAnalysis/Segment"
		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="the boolean value that this reference points to
[source: Capella study]", constraints="none", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
		@"http://www.polarsys.org/capella/semantic"
		ref AbstractBooleanValue referencedValue;

		@"http://www.polarsys.org/capella/2007/UML2Mapping"(featureName="clientDependency", featureOwner="NamedElement")
		@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="reference")
		@"http://www.polarsys.org/capella/2007/ImpactAnalysis/Segment"
		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="the property that is using this reference
[source: Capella study]", constraints="none", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
		@"http://www.polarsys.org/capella/semantic"
		ref Property referencedProperty;
	}

	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="Base class for defining type-specific enumeration values
[source: Capella light-light study]", "usage guideline"="n/a", "used in levels"="n/a", "usage examples"="n/a", constraints="none", "comment/notes"="none", "reference documentation"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", "base metaclass in UML/SysML profile "="", explanation="", constraints="none")
	abstract class AbstractEnumerationValue extends DataValue {

		@"http://www.polarsys.org/capella/2007/UML2Mapping"(featureName="type", featureOwner="TypedElement")
		@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="type")
		@"http://www.polarsys.org/capella/2007/ImpactAnalysis/Segment"
		@"http://www.polarsys.org/capella/derived"(viatra.variant="alias", viatra.expression="abstractType")
		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="the type of the data being valued
[source: Capella study]", constraints="none", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="keyword::none", explanation="Derived and transient", constraints="none")
		@"http://www.polarsys.org/capella/semantic"(feature="abstractType", excludefrom="xmlpivot")
		readonly volatile transient derived ref ~datatype.Enumeration enumerationType;
	}

	@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="EnumerationLiteral")
	@"http://www.polarsys.org/capella/2007/UML2Mapping"(metaclass="EnumerationLiteral", stereotype="eng.EnumerationLiteral")
	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="A value specification composed of a finite list of predefined values
[source: Capella study]", "usage guideline"="n/a", "used in levels"="n/a", "usage examples"="n/a", constraints="none", "comment/notes"="none", "reference documentation"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", "base metaclass in UML/SysML profile "="uml::EnumerationLiteral", explanation="none", constraints="none")
	@"http://www.polarsys.org/capella/semantic"
	class EnumerationLiteral extends AbstractEnumerationValue {

		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="none", "usage guideline"="n/a", "used in levels"="n/a", "usage examples"="n/a", constraints="none", "comment/notes"="none", "reference documentation"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
		@"http://www.polarsys.org/capella/semantic"
		val DataValue domainValue;
	}

	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="A reference to an abstract enumeration value, allowing the reuse of enumeration values across data value structures", "usage guideline"="n/a", "used in levels"="operational,system,logical,physical", "usage examples"="n/a", constraints="none", "comment/notes"="none", "reference documentation"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", "base metaclass in UML/SysML profile "="uml::Expression", explanation="none", constraints="none")
	@"http://www.polarsys.org/capella/semantic"
	class EnumerationReference extends AbstractEnumerationValue {

		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="the abstract enumeration value that this reference points to", constraints="none", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
		@"http://www.polarsys.org/capella/semantic"
		ref AbstractEnumerationValue referencedValue;

		@"http://www.polarsys.org/capella/2007/UML2Mapping"(featureName="clientDependency", featureOwner="NamedElement")
		@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="reference")
		@"http://www.polarsys.org/capella/2007/ImpactAnalysis/Segment"
		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="the property that is using this reference
[source: Capella study]", constraints="none", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
		@"http://www.polarsys.org/capella/semantic"
		ref Property referencedProperty;
	}

	@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="StringValue")
	@"http://www.polarsys.org/capella/2007/UML2Mapping"(metaclass="ValueSpecification")
	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="A value defined by an ordered set of characters
[source: Capella study]", "usage guideline"="n/a", "used in levels"="n/a", "usage examples"="n/a", constraints="none", "comment/notes"="none", "reference documentation"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", "base metaclass in UML/SysML profile "="", explanation="uml::ValueSpecification", constraints="none")
	abstract class AbstractStringValue extends DataValue {

		@"http://www.polarsys.org/capella/2007/UML2Mapping"(featureName="type", featureOwner="TypedElement")
		@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="type")
		@"http://www.polarsys.org/capella/2007/ImpactAnalysis/Segment"
		@"http://www.polarsys.org/capella/derived"(viatra.variant="alias", viatra.expression="abstractType")
		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="the type of the data being valued
[source: Capella study]", constraints="none", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="keyword::none", explanation="Derived and transient", constraints="none")
		@"http://www.polarsys.org/capella/semantic"(feature="abstractType", excludefrom="xmlpivot")
		readonly volatile transient derived ref ~datatype.StringType stringType;
	}

	@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="LiteralStringValue")
	@"http://www.polarsys.org/capella/2007/UML2Mapping"(metaclass="LiteralString", stereotype="eng.LiteralStringValue")
	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="A literal string is a specification of a string value
[source: UML superstructure v2.2]", "usage guideline"="n/a", "used in levels"="n/a", "usage examples"="n/a", constraints="none", "comment/notes"="none", "reference documentation"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", "base metaclass in UML/SysML profile "="uml::LiteralString", explanation="none", constraints="none")
	@"http://www.polarsys.org/capella/semantic"
	class LiteralStringValue extends AbstractStringValue {

		@"http://www.polarsys.org/capella/2007/UML2Mapping"(featureName="value", featureOwner="LiteralString")
		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="the specific string
[source: Capella study]", constraints="none", type="n/a", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="uml::LiteralString::value", explanation="none", constraints="none")
		@"http://www.polarsys.org/capella/semantic"
		attr String value;
	}

	@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="StringReference")
	@"http://www.polarsys.org/capella/2007/UML2Mapping"(metaclass="Expression", stereotype="eng.StringReference")
	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="A reference to a string value, allowing the reuse of string values across data value structures
[source: Capella study]", "usage guideline"="n/a", "used in levels"="operational,system,logical,physical", "usage examples"="n/a", constraints="none", "comment/notes"="none", "reference documentation"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", "base metaclass in UML/SysML profile "="uml::Expression", explanation="none", constraints="none")
	@"http://www.polarsys.org/capella/semantic"
	class StringReference extends AbstractStringValue {

		@"http://www.polarsys.org/capella/2007/UML2Mapping"(featureName="clientDependency", featureOwner="NamedElement")
		@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="reference")
		@"http://www.polarsys.org/capella/2007/ImpactAnalysis/Segment"
		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="the string value that this reference points to
[source: Capella study]", constraints="none", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
		@"http://www.polarsys.org/capella/semantic"
		ref AbstractStringValue referencedValue;

		@"http://www.polarsys.org/capella/2007/UML2Mapping"(featureName="clientDependency", featureOwner="NamedElement")
		@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="reference")
		@"http://www.polarsys.org/capella/2007/ImpactAnalysis/Segment"
		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="the property that uses this reference
[source: Capella study]", constraints="none", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
		@"http://www.polarsys.org/capella/semantic"
		ref Property referencedProperty;
	}

	@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="NumericValue")
	@"http://www.polarsys.org/capella/2007/UML2Mapping"(metaclass="ValueSpecification")
	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="A value expressed as a number
[source: Capella study]", "usage guideline"="n/a", "used in levels"="n/a", "usage examples"="n/a", constraints="none", "comment/notes"="none", "reference documentation"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", "base metaclass in UML/SysML profile "="", explanation="uml::LiteralSpecification", constraints="none")
	abstract class NumericValue extends DataValue {

		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="n/a", "usage guideline"="n/a", "used in levels"="n/a", "usage examples"="n/a", constraints="none", "comment/notes"="none", "reference documentation"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", "base metaclass in UML/SysML profile "="", explanation="", constraints="none")
		@"http://www.polarsys.org/capella/semantic"
		ref Unit unit;

		@"http://www.polarsys.org/capella/2007/UML2Mapping"(featureName="type", featureOwner="TypedElement")
		@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="type")
		@"http://www.polarsys.org/capella/2007/ImpactAnalysis/Segment"
		@"http://www.polarsys.org/capella/derived"(viatra.variant="alias", viatra.expression="abstractType")
		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="the type of the data being valued
[source: Capella study]", constraints="none", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="keyword::none", explanation="Derived and transient", constraints="none")
		@"http://www.polarsys.org/capella/semantic"(feature="abstractType", excludefrom="xmlpivot")
		readonly volatile transient derived ref ~datatype.NumericType numericType;
	}

	@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="LiteralNumericValue")
	@"http://www.polarsys.org/capella/2007/UML2Mapping"(metaclass="Expression", stereotype="eng.LiteralNumericValue")
	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="A literal value expressed as a number (ordered set of digits)
[source: Capella study]", "usage guideline"="n/a", "used in levels"="n/a", "usage examples"="n/a", constraints="none", "comment/notes"="none", "reference documentation"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", "base metaclass in UML/SysML profile "="uml::Expression", explanation="none", constraints="none")
	@"http://www.polarsys.org/capella/semantic"
	class LiteralNumericValue extends NumericValue {

		@"http://www.polarsys.org/capella/2007/UML2Mapping"(featureName="symbol", featureOwner="Expression")
		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="the number defining this value, expressed as a string
[source: Capella study]", constraints="none", type="n/a", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="uml::LiteralString::value", explanation="none", constraints="none")
		@"http://www.polarsys.org/capella/semantic"
		attr String value;
	}

	@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="NumericReference")
	@"http://www.polarsys.org/capella/2007/UML2Mapping"(metaclass="Expression", stereotype="eng.NumericReference")
	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="a reference to a numeric value, allowing the reuse of numeric values across data value structures
[source: Capella study]", "usage guideline"="n/a", "used in levels"="operational,system,logical,physical", "usage examples"="none", constraints="none", "comment/notes"="none", "reference documentation"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", "base metaclass in UML/SysML profile "="uml::Expression", explanation="none", constraints="none")
	@"http://www.polarsys.org/capella/semantic"
	class NumericReference extends NumericValue {

		@"http://www.polarsys.org/capella/2007/UML2Mapping"(featureName="clientDependency", featureOwner="NamedElement")
		@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="reference")
		@"http://www.polarsys.org/capella/2007/ImpactAnalysis/Segment"
		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="the numeric value being referenced
[source: Capella study]", constraints="none", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
		@"http://www.polarsys.org/capella/semantic"
		ref NumericValue referencedValue;

		@"http://www.polarsys.org/capella/2007/UML2Mapping"(featureName="clientDependency", featureOwner="NamedElement")
		@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="reference")
		@"http://www.polarsys.org/capella/2007/ImpactAnalysis/Segment"
		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="the property that uses this reference
[source: Capella study]", constraints="none", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
		@"http://www.polarsys.org/capella/semantic"
		ref Property referencedProperty;
	}

	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="Base class for defining complex value type
[source: Capella light-light study]", "usage guideline"="n/a", "used in levels"="n/a", "usage examples"="n/a", constraints="none", "comment/notes"="none", "reference documentation"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", "base metaclass in UML/SysML profile "="", explanation="uml::ValueSpecification", constraints="none")
	abstract class AbstractComplexValue extends DataValue {

		@"http://www.polarsys.org/capella/2007/UML2Mapping"(featureName="type", featureOwner="TypedElement")
		@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="type")
		@"http://www.polarsys.org/capella/2007/ImpactAnalysis/Segment"
		@"http://www.polarsys.org/capella/derived"(viatra.variant="alias", viatra.expression="abstractType")
		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="the type of the data being valued
[source: Capella study]", constraints="none", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="keyword::none", explanation="Derived and transient", constraints="none")
		@"http://www.polarsys.org/capella/semantic"(feature="abstractType", excludefrom="xmlpivot")
		readonly volatile transient derived ref capellacore.Classifier complexType;
	}

	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="Data type characterizing a complex number
[source: Capella light-light study]", "usage guideline"="n/a", "used in levels"="n/a", "usage examples"="n/a", constraints="none", "comment/notes"="none", "reference documentation"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", "base metaclass in UML/SysML profile "="uml::Expression", explanation="uml::LiteralSpecification", constraints="none")
	@"http://www.polarsys.org/capella/semantic"
	class ComplexValue extends AbstractComplexValue {

		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="stores the different parts that make a complex value
[source: Capella light-light study]", "usage guideline"="n/a", "used in levels"="n/a", "usage examples"="n/a", constraints="none", "comment/notes"="none", "reference documentation"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="keyword::specific", explanation="none", constraints="***** elements on which ValuePart stereotype or any stereotype that inherits from it is applied
")
		@"http://www.polarsys.org/capella/semantic"
		val ValuePart[*] ownedParts;
	}

	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="A reference to a complex value
[source: Capella light-light study]", "usage guideline"="n/a", "used in levels"="n/a", "usage examples"="n/a", constraints="none", "comment/notes"="none", "reference documentation"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", "base metaclass in UML/SysML profile "="uml::Expression", explanation="uml::LiteralSpecification", constraints="none")
	@"http://www.polarsys.org/capella/semantic"
	class ComplexValueReference extends AbstractComplexValue {

		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="the complex value being referenced", constraints="none", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
		@"http://www.polarsys.org/capella/semantic"
		ref AbstractComplexValue referencedValue;

		@"http://www.polarsys.org/capella/2007/UML2Mapping"(featureName="clientDependency", featureOwner="NamedElement")
		@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="reference")
		@"http://www.polarsys.org/capella/2007/ImpactAnalysis/Segment"
		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="the property that uses this reference
[source: Capella study]", constraints="none", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
		@"http://www.polarsys.org/capella/semantic"
		ref Property referencedProperty;
	}

	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="Used in the decomposition of complex values into smaller unitary elements
[source: Capella light-light study]", "usage guideline"="n/a", "used in levels"="n/a", "usage examples"="n/a", constraints="none", "comment/notes"="none", "reference documentation"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", "base metaclass in UML/SysML profile "="uml::Expression", explanation="", constraints="none")
	@"http://www.polarsys.org/capella/semantic"
	class ValuePart extends capellacore.CapellaElement {

		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="none", "usage guideline"="n/a", "used in levels"="n/a", "usage examples"="n/a", constraints="none", "comment/notes"="none", "reference documentation"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="")
		@"http://www.polarsys.org/capella/semantic"
		ref Property referencedProperty;

		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="none", "usage guideline"="n/a", "used in levels"="n/a", "usage examples"="n/a", constraints="none", "comment/notes"="none", "reference documentation"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="keyword::specific", explanation="none", constraints="****** elements on which DataValue stereotype or any stereotype that inherits from it is applied
Multiplicity must be [0..1]")
		@"http://www.polarsys.org/capella/semantic"
		val DataValue ownedValue;
	}

	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="Abstract class to support the implementation of Expression specifications
[source: Capella study]", "usage guideline"="n/a", "used in levels"="n/a", "usage examples"="n/a", constraints="none", "comment/notes"="none", "reference documentation"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", "base metaclass in UML/SysML profile "="", explanation="", constraints="none")
	abstract class AbstractExpressionValue extends AbstractBooleanValue, AbstractComplexValue, AbstractEnumerationValue, NumericValue, AbstractStringValue {

		@"http://www.polarsys.org/capella/derived"
		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="textual specification of the expression
[source: Capella study]", "usage guideline"="n/a", "used in levels"="n/a", "usage examples"="n/a", constraints="none", "comment/notes"="none", "reference documentation"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
		@"http://www.polarsys.org/capella/semantic"
		readonly volatile transient derived attr String expression;

		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="raw textual specification of the expression
[source: Capella study]", "usage guideline"="n/a", "used in levels"="n/a", "usage examples"="n/a", constraints="none", "comment/notes"="none", "reference documentation"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
		@"http://www.polarsys.org/capella/semantic"
		attr String unparsedExpression;

		@"http://www.polarsys.org/capella/2007/UML2Mapping"(featureName="type", featureOwner="TypedElement")
		@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="type")
		@"http://www.polarsys.org/capella/2007/ImpactAnalysis/Segment"
		@"http://www.polarsys.org/capella/derived"(viatra.variant="alias", viatra.expression="abstractType")
		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="the type of the data being valued
[source: Capella study]", constraints="none", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="keyword::none", explanation="Derived and transient", constraints="none")
		@"http://www.polarsys.org/capella/semantic"(feature="abstractType", excludefrom="xmlpivot")
		readonly volatile transient derived ref ~datatype.DataType expressionType;
	}

	@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="BinaryExpression")
	@"http://www.polarsys.org/capella/2007/UML2Mapping"(metaclass="Expression", stereotype="eng.BinaryExpression")
	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="Specification of a condition that can only evaluate to \"true\" or \"false\"
[source: Capella study]", "usage guideline"="n/a", "used in levels"="n/a", "usage examples"="n/a", constraints="none", "comment/notes"="none", "reference documentation"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", "base metaclass in UML/SysML profile "="uml::Expression", explanation="none", constraints="none")
	@"http://www.polarsys.org/capella/semantic"
	class BinaryExpression extends AbstractExpressionValue {

		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="the operator between the left and right operands
[source: Capella study]", constraints="none", type="n/a", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
		@"http://www.polarsys.org/capella/semantic"
		attr BinaryOperator operator;

		@"http://www.polarsys.org/capella/2007/UML2Mapping"(featureName="clientDependency", featureOwner="NamedElement")
		@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="operands")
		@"http://www.polarsys.org/capella/2007/ImpactAnalysis/Segment"
		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="list of the operands being part of the boolean expression
[source: Capella study]", constraints="none", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="uml::Expression::operand", explanation="_todo_ Check that uml::Expression::operand contains BooleanValue", constraints="uml::Expression::operand elements on which ValueSpecification stereotype or any stereotype that inherits from it is applied")
		@"http://www.polarsys.org/capella/semantic"
		val DataValue ownedLeftOperand;

		@"http://www.polarsys.org/capella/2007/UML2Mapping"(featureName="clientDependency", featureOwner="NamedElement")
		@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="operands")
		@"http://www.polarsys.org/capella/2007/ImpactAnalysis/Segment"
		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="list of the operands being part of the boolean expression
[source: Capella study]", constraints="none", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="uml::Expression::operand", explanation="_todo_ Check that uml::Expression::operand contains BooleanValue", constraints="uml::Expression::operand elements on which ValueSpecification stereotype or any stereotype that inherits from it is applied")
		@"http://www.polarsys.org/capella/semantic"
		val DataValue ownedRightOperand;
	}

	@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="UnaryExpression")
	@"http://www.polarsys.org/capella/2007/UML2Mapping"(metaclass="Expression", stereotype="eng.UnaryExpression")
	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="Specification of a condition that can only evaluate to \"true\" or \"false\"
[source: Capella study]", "usage guideline"="n/a", "used in levels"="n/a", "usage examples"="n/a", constraints="none", "comment/notes"="none", "reference documentation"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", "base metaclass in UML/SysML profile "="uml::Expression", explanation="none", constraints="none")
	@"http://www.polarsys.org/capella/semantic"
	class UnaryExpression extends AbstractExpressionValue {

		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="the operator applying to the operand
[source: Capella study]", constraints="none", type="n/a", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
		@"http://www.polarsys.org/capella/semantic"
		attr UnaryOperator operator;

		@"http://www.polarsys.org/capella/2007/UML2Mapping"(featureName="clientDependency", featureOwner="NamedElement")
		@"http://www.polarsys.org/capella/2007/BusinessInformation"(Label="operands")
		@"http://www.polarsys.org/capella/2007/ImpactAnalysis/Segment"
		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="list of the operands being part of the boolean expression
[source: Capella study]", constraints="none", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="uml::Expression::operand", explanation="_todo_ Check that uml::Expression::operand contains BooleanValue", constraints="uml::Expression::operand elements on which ValueSpecification stereotype or any stereotype that inherits from it is applied")
		@"http://www.polarsys.org/capella/semantic"
		val DataValue ownedOperand;
	}

	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="Specifies the kind of this binary operator", constraints="none", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
	@"http://www.polarsys.org/capella/semantic"
	enum BinaryOperator {

		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="Used when the binary operator is not initialized", constraints="none", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
		UNSET = 0;

		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="Used when the binary operator refers to an addition", constraints="none", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
		ADD = 1;

		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="Used when the binary operator refers to a multiplication", constraints="none", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
		MUL = 2;

		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="Used when the binary operator refers to a substraction", constraints="none", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
		SUB = 3;

		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="Used when the binary operator refers to a division", constraints="none", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
		DIV = 4;

		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="Used when the binary operator refers to a power operation", constraints="none", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
		POW = 5;

		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="Used when the binary operator refers to a min operation", constraints="none", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
		MIN = 6;

		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="Used when the binary operator refers to a max operation", constraints="none", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
		MAX = 7;

		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="Used when the binary operator refers to an equal operation", constraints="none", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
		EQU = 8;

		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="Used when the binary operator refers to a logical inclusive OR operation", constraints="none", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
		IOR = 9;

		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="Used when the binary operator refers to a logical exclusive OR operation", constraints="none", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
		XOR = 10;

		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="Used when the binary operator refers to a logical AND operation", constraints="none", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
		AND = 11;
	}

	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="Specifies the kind of this unary operator", constraints="none", "comment/notes"="none")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
	@"http://www.polarsys.org/capella/semantic"
	enum UnaryOperator {

		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="Used when the unary operator is not initialized", constraints="none", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
		UNSET = 0;

		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="Used when the unary operator refers to a NOT operation", constraints="none", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
		NOT = 1;

		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="Used when the unary operator refers to a position operation", constraints="none", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
		POS = 2;

		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="Used when the unary operator refers to a value operation", constraints="none", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
		VAL = 3;

		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="Used when the unary operator refers to a successor operation", constraints="none", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
		SUC = 4;

		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="Used when the unary operator refers to a predecessor operation", constraints="none", "comment/notes"="none")
		@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("UML/SysML semantic equivalences"="", explanation="none", constraints="none")
		PRE = 5;
	}

	@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="An opaque expression contains language-specific text strings used to describe a value or values, and an optional specification of
the languages.
One predefined language for specifying expressions is OCL. Natural language or programming languages may also be
used.", constraints="If the language attribute is not empty, then the size of the body and language arrays must be the same.")
	@"http://www.polarsys.org/capella/MNoE/CapellaLike/Mapping"("base metaclass in UML/SysML profile "="uml::OpaqueExpression")
	@"http://www.polarsys.org/capella/semantic"
	class OpaqueExpression extends capellacore.CapellaElement, modellingcore.ValueSpecification {

		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="The text of the expression, possibly in multiple languages.")
		@"http://www.polarsys.org/capella/semantic"
		!unique attr String[*] bodies;

		@"http://www.polarsys.org/kitalpha/ecore/documentation"(description="Specifies the languages in which the expression is stated. The interpretation of the expression body depends on the
languages. If the languages are unspecified, they might be implicit from the expression body or the context.
Languages are matched to body strings by order.")
		@"http://www.polarsys.org/capella/semantic"
		attr String[*] languages;
	}

}

